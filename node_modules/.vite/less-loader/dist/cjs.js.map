{
  "version": 3,
  "sources": ["browser-external:path", "../../../less/node_modules/tslib/tslib.es6.js", "browser-external:fs", "../../../mime/mime.js", "../../../source-map/lib/base64.js", "../../../source-map/lib/base64-vlq.js", "../../../source-map/lib/util.js", "../../../source-map/lib/array-set.js", "../../../source-map/lib/mapping-list.js", "../../../source-map/lib/source-map-generator.js", "../../../source-map/lib/binary-search.js", "../../../source-map/lib/quick-sort.js", "../../../source-map/lib/source-map-consumer.js", "../../../source-map/lib/source-node.js", "../../../source-map/source-map.js", "../../../less/src/less-node/environment.js", "browser-external:constants", "../../../graceful-fs/polyfills.js", "browser-external:stream", "../../../graceful-fs/legacy-streams.js", "../../../graceful-fs/clone.js", "browser-external:util", "browser-external:assert", "../../../graceful-fs/graceful-fs.js", "../../../less/src/less-node/fs.js", "../../../less/src/less/environment/abstract-file-manager.js", "../../../less/src/less-node/file-manager.js", "browser-external:url", "../../../less/src/less/logger.js", "browser-external:http", "browser-external:https", "../../../ms/index.js", "../../../debug/src/common.js", "../../../debug/src/browser.js", "../../../needle/lib/querystring.js", "../../../needle/lib/multipart.js", "browser-external:crypto", "../../../needle/lib/auth.js", "browser-external:querystring", "../../../needle/lib/cookies.js", "browser-external:string_decoder", "../../../sax/lib/sax.js", "../../../needle/lib/parsers.js", "browser-external:buffer", "../../../safer-buffer/safer.js", "../../../iconv-lite/lib/bom-handling.js", "../../../iconv-lite/encodings/internal.js", "../../../iconv-lite/encodings/utf16.js", "../../../iconv-lite/encodings/utf7.js", "../../../iconv-lite/encodings/sbcs-codec.js", "../../../iconv-lite/encodings/sbcs-data.js", "../../../iconv-lite/encodings/sbcs-data-generated.js", "../../../iconv-lite/encodings/dbcs-codec.js", "../../../iconv-lite/encodings/dbcs-data.js", "../../../iconv-lite/encodings/index.js", "../../../iconv-lite/lib/streams.js", "../../../iconv-lite/lib/extend-node.js", "../../../iconv-lite/lib/index.js", "../../../needle/lib/decoder.js", "browser-external:zlib", "../../../needle/lib/needle.js", "../../../less/src/less-node/url-file-manager.js", "../../../less/src/less/environment/environment.js", "../../../less/src/less/data/colors.js", "../../../less/src/less/data/unit-conversions.js", "../../../less/src/less/data/index.js", "../../../less/src/less/tree/node.js", "../../../less/src/less/tree/color.js", "../../../less/src/less/tree/paren.js", "../../../less/src/less/tree/combinator.js", "../../../less/src/less/tree/element.js", "../../../less/src/less/constants.js", "../../../copy-anything/dist/index.esm.js", "../../../less/src/less/utils.js", "../../../less/src/less/less-error.js", "../../../less/src/less/tree/selector.js", "../../../less/src/less/tree/value.js", "../../../less/src/less/tree/keyword.js", "../../../less/src/less/tree/anonymous.js", "../../../less/src/less/tree/declaration.js", "../../../less/src/less/tree/debug-info.js", "../../../less/src/less/tree/comment.js", "../../../less/src/less/contexts.js", "../../../less/src/less/functions/function-registry.js", "../../../less/src/less/functions/default.js", "../../../less/src/less/tree/ruleset.js", "../../../less/src/less/tree/atrule.js", "../../../less/src/less/tree/detached-ruleset.js", "../../../less/src/less/tree/unit.js", "../../../less/src/less/tree/dimension.js", "../../../less/src/less/tree/operation.js", "../../../less/src/less/tree/expression.js", "../../../less/src/less/functions/function-caller.js", "../../../less/src/less/tree/call.js", "../../../less/src/less/tree/variable.js", "../../../less/src/less/tree/property.js", "../../../less/src/less/tree/attribute.js", "../../../less/src/less/tree/quoted.js", "../../../less/src/less/tree/url.js", "../../../less/src/less/tree/media.js", "../../../less/src/less/tree/import.js", "../../../less/src/less/tree/js-eval-node.js", "../../../less/src/less/tree/javascript.js", "../../../less/src/less/tree/assignment.js", "../../../less/src/less/tree/condition.js", "../../../less/src/less/tree/unicode-descriptor.js", "../../../less/src/less/tree/negative.js", "../../../less/src/less/tree/extend.js", "../../../less/src/less/tree/variable-call.js", "../../../less/src/less/tree/namespace-value.js", "../../../less/src/less/tree/mixin-definition.js", "../../../less/src/less/tree/mixin-call.js", "../../../less/src/less/tree/index.js", "../../../less/src/less/environment/abstract-plugin-loader.js", "../../../less/src/less/visitors/visitor.js", "../../../less/src/less/visitors/import-sequencer.js", "../../../less/src/less/visitors/import-visitor.js", "../../../less/src/less/visitors/set-tree-visibility-visitor.js", "../../../less/src/less/visitors/extend-visitor.js", "../../../less/src/less/visitors/join-selector-visitor.js", "../../../less/src/less/visitors/to-css-visitor.js", "../../../less/src/less/visitors/index.js", "../../../less/src/less/parser/chunker.js", "../../../less/src/less/parser/parser-input.js", "../../../less/src/less/parser/parser.js", "../../../less/src/less/functions/boolean.js", "../../../less/src/less/functions/color.js", "../../../less/src/less/functions/color-blending.js", "../../../less/src/less/functions/data-uri.js", "../../../less/src/less/functions/list.js", "../../../less/src/less/functions/math-helper.js", "../../../less/src/less/functions/math.js", "../../../less/src/less/functions/number.js", "../../../less/src/less/functions/string.js", "../../../less/src/less/functions/svg.js", "../../../less/src/less/functions/types.js", "../../../less/src/less/functions/index.js", "../../../less/src/less/transform-tree.js", "../../../less/src/less/plugin-manager.js", "../../../less/src/less/source-map-output.js", "../../../less/src/less/source-map-builder.js", "../../../less/src/less/parse-tree.js", "../../../less/src/less/import-manager.js", "../../../less/src/less/parse.js", "../../../less/src/less/render.js", "../../../parse-node-version/index.js", "../../../less/src/less/index.js", "../../../less/src/less-node/lessc-helper.js", "../../../less/src/less-node/plugin-loader.js", "../../../less/src/less/default-options.js", "../../../image-size/lib/types.js", "../../../image-size/lib/detector.js", "../../../image-size/lib/index.js", "../../../less/src/less-node/image-size.js", "../../../less/src/less-node/index.js", "../../../less-loader/node_modules/json5/dist/index.mjs", "../../../less-loader/node_modules/loader-utils/lib/parseQuery.js", "../../../less-loader/node_modules/loader-utils/lib/getOptions.js", "../../../less-loader/node_modules/loader-utils/lib/stringifyRequest.js", "../../../less-loader/node_modules/loader-utils/lib/getRemainingRequest.js", "../../../less-loader/node_modules/loader-utils/lib/getCurrentRequest.js", "../../../less-loader/node_modules/loader-utils/lib/isUrlRequest.js", "../../../less-loader/node_modules/loader-utils/lib/urlToRequest.js", "../../../less-loader/node_modules/loader-utils/lib/parseString.js", "../../../big.js/big.mjs", "../../../less-loader/node_modules/loader-utils/lib/getHashDigest.js", "../../../emojis-list/index.js", "../../../less-loader/node_modules/loader-utils/lib/interpolateName.js", "../../../less-loader/node_modules/loader-utils/lib/index.js", "../../../schema-utils/dist/keywords/absolutePath.js", "../../../schema-utils/dist/util/Range.js", "../../../schema-utils/dist/util/hints.js", "../../../schema-utils/dist/ValidationError.js", "../../../uri-js/src/index.ts", "../../../uri-js/src/schemes/urn-uuid.ts", "../../../uri-js/src/schemes/urn.ts", "../../../uri-js/src/schemes/mailto.ts", "../../../uri-js/src/schemes/wss.ts", "../../../uri-js/src/schemes/ws.ts", "../../../uri-js/src/schemes/https.ts", "../../../uri-js/src/schemes/http.ts", "../../../uri-js/src/uri.ts", "../../../uri-js/node_modules/punycode/punycode.es6.js", "../../../uri-js/src/regexps-iri.ts", "../../../uri-js/src/regexps-uri.ts", "../../../uri-js/src/util.ts", "../../../fast-deep-equal/index.js", "../../../ajv/lib/compile/ucs2length.js", "../../../ajv/lib/compile/util.js", "../../../ajv/lib/compile/schema_obj.js", "../../../json-schema-traverse/index.js", "../../../ajv/lib/compile/resolve.js", "../../../ajv/lib/compile/error_classes.js", "../../../fast-json-stable-stringify/index.js", "../../../ajv/lib/dotjs/validate.js", "../../../ajv/lib/compile/index.js", "../../../ajv/lib/cache.js", "../../../ajv/lib/compile/formats.js", "../../../ajv/lib/dotjs/ref.js", "../../../ajv/lib/dotjs/allOf.js", "../../../ajv/lib/dotjs/anyOf.js", "../../../ajv/lib/dotjs/comment.js", "../../../ajv/lib/dotjs/const.js", "../../../ajv/lib/dotjs/contains.js", "../../../ajv/lib/dotjs/dependencies.js", "../../../ajv/lib/dotjs/enum.js", "../../../ajv/lib/dotjs/format.js", "../../../ajv/lib/dotjs/if.js", "../../../ajv/lib/dotjs/items.js", "../../../ajv/lib/dotjs/_limit.js", "../../../ajv/lib/dotjs/_limitItems.js", "../../../ajv/lib/dotjs/_limitLength.js", "../../../ajv/lib/dotjs/_limitProperties.js", "../../../ajv/lib/dotjs/multipleOf.js", "../../../ajv/lib/dotjs/not.js", "../../../ajv/lib/dotjs/oneOf.js", "../../../ajv/lib/dotjs/pattern.js", "../../../ajv/lib/dotjs/properties.js", "../../../ajv/lib/dotjs/propertyNames.js", "../../../ajv/lib/dotjs/required.js", "../../../ajv/lib/dotjs/uniqueItems.js", "../../../ajv/lib/dotjs/index.js", "../../../ajv/lib/compile/rules.js", "../../../ajv/lib/data.js", "../../../ajv/lib/compile/async.js", "../../../ajv/lib/dotjs/custom.js", "../../../ajv/lib/definition_schema.js", "../../../ajv/lib/keyword.js", "../../../ajv/lib/ajv.js", "../../../ajv-keywords/keywords/instanceof.js", "../../../ajv-keywords/keywords/range.js", "../../../ajv-keywords/keywords/regexp.js", "../../../ajv-keywords/keywords/typeof.js", "../../../ajv-keywords/keywords/dynamicDefaults.js", "../../../ajv-keywords/keywords/allRequired.js", "../../../ajv-keywords/keywords/anyRequired.js", "../../../ajv-keywords/keywords/oneRequired.js", "../../../ajv-keywords/keywords/prohibited.js", "../../../ajv-keywords/keywords/uniqueItemProperties.js", "../../../ajv-keywords/keywords/_util.js", "../../../ajv-keywords/keywords/deepProperties.js", "../../../ajv-keywords/keywords/deepRequired.js", "../../../ajv-keywords/keywords/dotjs/_formatLimit.js", "../../../ajv-keywords/keywords/_formatLimit.js", "../../../ajv-keywords/keywords/formatMinimum.js", "../../../ajv-keywords/keywords/formatMaximum.js", "../../../ajv-keywords/keywords/dotjs/patternRequired.js", "../../../ajv-keywords/keywords/patternRequired.js", "../../../ajv-keywords/keywords/dotjs/switch.js", "../../../ajv-keywords/keywords/switch.js", "../../../ajv-keywords/keywords/select.js", "../../../ajv-keywords/keywords/transform.js", "../../../ajv-keywords/keywords/index.js", "../../../ajv-keywords/index.js", "../../../schema-utils/dist/validate.js", "../../../schema-utils/dist/index.js", "../../../klona/full/index.mjs", "../../../less-loader/dist/utils.js", "../../../less-loader/dist/LessError.js", "../../../less-loader/dist/index.js", "../../../less-loader/dist/cjs.js", "../../../is-what/dist/index.esm.js"],
  "sourcesContent": ["export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"path\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"fs\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style \".types\" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions, the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path, fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType, fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "export default {\n    encodeBase64: function encodeBase64(str) {\n        // Avoid Buffer constructor on newer versions of Node.js.\n        const buffer = (Buffer.from ? Buffer.from(str) : (new Buffer(str)));\n        return buffer.toString('base64');\n    },\n    mimeLookup: function (filename) {\n        return require('mime').lookup(filename);\n    },\n    charsetLookup: function (mime) {\n        return require('mime').charsets.lookup(mime);\n    },\n    getSourceMapGenerator: function getSourceMapGenerator() {\n        return require('source-map').SourceMapGenerator;\n    }\n};\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"constants\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "var constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\nvar chdir = process.chdir\nprocess.chdir = function(d) {\n  cwd = null\n  chdir.call(process, d)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n      var start = Date.now()\n      var backoff = 0;\n      fs$rename(from, to, function CB (er) {\n        if (er\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n            && Date.now() - start < 60000) {\n          setTimeout(function() {\n            fs.stat(to, function (stater, st) {\n              if (stater && stater.code === \"ENOENT\")\n                fs$rename(from, to, CB);\n              else\n                cb(er)\n            })\n          }, backoff)\n          if (backoff < 100)\n            backoff += 10;\n          return;\n        }\n        if (cb) cb(er)\n      })\n    }})(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = (function (fs$read) {\n    function read (fd, buffer, offset, length, position, callback_) {\n      var callback\n      if (callback_ && typeof callback_ === 'function') {\n        var eagCounter = 0\n        callback = function (er, _, __) {\n          if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n            eagCounter ++\n            return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n          }\n          callback_.apply(this, arguments)\n        }\n      }\n      return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n    }\n\n    // This ensures `util.promisify` works as it does for native `fs.read`.\n    read.__proto__ = fs$read\n    return read\n  })(fs.read)\n\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n\n  function patchLchmod (fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open( path\n             , constants.O_WRONLY | constants.O_SYMLINK\n             , mode\n             , function (err, fd) {\n        if (err) {\n          if (callback) callback(err)\n          return\n        }\n        // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function(err2) {\n            if (callback) callback(err || err2)\n          })\n        })\n      })\n    }\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      var threw = true\n      var ret\n      try {\n        ret = fs.fchmodSync(fd, mode)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n  }\n\n  function patchLutimes (fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er)\n            return\n          }\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2)\n            })\n          })\n        })\n      }\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK)\n        var ret\n        var threw = true\n        try {\n          ret = fs.futimesSync(fd, at, mt)\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else {\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n      fs.lutimesSync = function () {}\n    }\n  }\n\n  function chmodFix (orig) {\n    if (!orig) return orig\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chmodFixSync (orig) {\n    if (!orig) return orig\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function chownFix (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chownFixSync (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n  function statFix (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options, cb) {\n      if (typeof options === 'function') {\n        cb = options\n        options = null\n      }\n      function callback (er, stats) {\n        if (stats) {\n          if (stats.uid < 0) stats.uid += 0x100000000\n          if (stats.gid < 0) stats.gid += 0x100000000\n        }\n        if (cb) cb.apply(this, arguments)\n      }\n      return options ? orig.call(fs, target, options, callback)\n        : orig.call(fs, target, callback)\n    }\n  }\n\n  function statFixSync (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options) {\n      var stats = options ? orig.call(fs, target, options)\n        : orig.call(fs, target)\n      if (stats.uid < 0) stats.uid += 0x100000000\n      if (stats.gid < 0) stats.gid += 0x100000000\n      return stats;\n    }\n  }\n\n  // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n  function chownErOk (er) {\n    if (!er)\n      return true\n\n    if (er.code === \"ENOSYS\")\n      return true\n\n    var nonroot = !process.getuid || process.getuid() !== 0\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n        return true\n    }\n\n    return false\n  }\n}\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"stream\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "var Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n", "'use strict'\n\nmodule.exports = clone\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: obj.__proto__ }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"util\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"assert\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar util = require('util')\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          retry()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      retry()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      require('assert').equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    var args = [path]\n    if (typeof options !== 'function') {\n      args.push(options)\n    } else {\n      cb = options\n    }\n    args.push(go$readdir$cb)\n\n    return go$readdir(args)\n\n    function go$readdir$cb (err, files) {\n      if (files && files.sort)\n        files.sort()\n\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([go$readdir, [args]])\n\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    }\n  }\n\n  function go$readdir (args) {\n    return fs$readdir.apply(fs, args)\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n}\n\nfunction retry () {\n  var elem = fs[gracefulQueue].shift()\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1])\n    elem[0].apply(null, elem[1])\n  }\n}\n", "let fs;\ntry\n{\n    fs = require('graceful-fs');\n}\ncatch (e)\n{\n    fs = require('fs');\n}\nexport default fs;\n", "class AbstractFileManager {\n    getPath(filename) {\n        let j = filename.lastIndexOf('?');\n        if (j > 0) {\n            filename = filename.slice(0, j);\n        }\n        j = filename.lastIndexOf('/');\n        if (j < 0) {\n            j = filename.lastIndexOf('\\\\');\n        }\n        if (j < 0) {\n            return '';\n        }\n        return filename.slice(0, j + 1);\n    }\n\n    tryAppendExtension(path, ext) {\n        return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n    }\n\n    tryAppendLessExtension(path) {\n        return this.tryAppendExtension(path, '.less');\n    }\n\n    supportsSync() {\n        return false;\n    }\n\n    alwaysMakePathsAbsolute() {\n        return false;\n    }\n\n    isPathAbsolute(filename) {\n        return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\n    }\n\n    // TODO: pull out / replace?\n    join(basePath, laterPath) {\n        if (!basePath) {\n            return laterPath;\n        }\n        return basePath + laterPath;\n    }\n\n    pathDiff(url, baseUrl) {\n        // diff between two paths to create a relative path\n\n        const urlParts = this.extractUrlParts(url);\n\n        const baseUrlParts = this.extractUrlParts(baseUrl);\n        let i;\n        let max;\n        let urlDirectories;\n        let baseUrlDirectories;\n        let diff = '';\n        if (urlParts.hostPart !== baseUrlParts.hostPart) {\n            return '';\n        }\n        max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n        for (i = 0; i < max; i++) {\n            if (baseUrlParts.directories[i] !== urlParts.directories[i]) { break; }\n        }\n        baseUrlDirectories = baseUrlParts.directories.slice(i);\n        urlDirectories = urlParts.directories.slice(i);\n        for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n            diff += '../';\n        }\n        for (i = 0; i < urlDirectories.length - 1; i++) {\n            diff += `${urlDirectories[i]}/`;\n        }\n        return diff;\n    }\n\n    // helper function, not part of API\n    extractUrlParts(url, baseUrl) {\n        // urlParts[1] = protocol://hostname/ OR /\n        // urlParts[2] = / if path relative to host base\n        // urlParts[3] = directories\n        // urlParts[4] = filename\n        // urlParts[5] = parameters\n\n        const urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\n\n        const urlParts = url.match(urlPartsRegex);\n        const returner = {};\n        let rawDirectories = [];\n        const directories = [];\n        let i;\n        let baseUrlParts;\n\n        if (!urlParts) {\n            throw new Error(`Could not parse sheet href - '${url}'`);\n        }\n\n        // Stylesheets in IE don't always return the full path\n        if (baseUrl && (!urlParts[1] || urlParts[2])) {\n            baseUrlParts = baseUrl.match(urlPartsRegex);\n            if (!baseUrlParts) {\n                throw new Error(`Could not parse page url - '${baseUrl}'`);\n            }\n            urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\n            if (!urlParts[2]) {\n                urlParts[3] = baseUrlParts[3] + urlParts[3];\n            }\n        }\n\n        if (urlParts[3]) {\n            rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\n\n            // collapse '..' and skip '.'\n            for (i = 0; i < rawDirectories.length; i++) {\n\n                if (rawDirectories[i] === '..') {\n                    directories.pop();\n                }\n                else if (rawDirectories[i] !== '.') {\n                    directories.push(rawDirectories[i]);\n                }\n            \n            }\n        }\n\n        returner.hostPart = urlParts[1];\n        returner.directories = directories;\n        returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\n        returner.path = (urlParts[1] || '') + directories.join('/');\n        returner.filename = urlParts[4];\n        returner.fileUrl = returner.path + (urlParts[4] || '');\n        returner.url = returner.fileUrl + (urlParts[5] || '');\n        return returner;\n    }\n}\n\nexport default AbstractFileManager;\n", "import path from 'path';\nimport fs from './fs';\nimport AbstractFileManager from '../less/environment/abstract-file-manager.js';\n\nconst FileManager = function() {}\nFileManager.prototype = Object.assign(new AbstractFileManager(), {\n    supports() {\n        return true;\n    },\n\n    supportsSync() {\n        return true;\n    },\n\n    loadFile(filename, currentDirectory, options, environment, callback) {\n        let fullFilename;\n        const isAbsoluteFilename = this.isPathAbsolute(filename);\n        const filenamesTried = [];\n        const self = this;\n        const prefix = filename.slice(0, 1);\n        const explicit = prefix === '.' || prefix === '/';\n        let result = null;\n        let isNodeModule = false;\n        const npmPrefix = 'npm://';\n\n        options = options || {};\n\n        const paths = isAbsoluteFilename ? [''] : [currentDirectory];\n\n        if (options.paths) { paths.push.apply(paths, options.paths); }\n\n        if (!isAbsoluteFilename && paths.indexOf('.') === -1) { paths.push('.'); }\n\n        const prefixes = options.prefixes || [''];\n        const fileParts = this.extractUrlParts(filename);\n\n        if (options.syncImport) {\n            getFileData(returnData, returnData);\n            if (callback) {\n                callback(result.error, result);\n            }\n            else {\n                return result;\n            }\n        }\n        else {\n            // promise is guaranteed to be asyncronous\n            // which helps as it allows the file handle\n            // to be closed before it continues with the next file\n            return new Promise(getFileData);\n        }\n\n        function returnData(data) {\n            if (!data.filename) {\n                result = { error: data };\n            }\n            else {\n                result = data;\n            }\n        }\n\n        function getFileData(fulfill, reject) {\n            (function tryPathIndex(i) {\n                if (i < paths.length) {\n                    (function tryPrefix(j) {\n                        if (j < prefixes.length) {\n                            isNodeModule = false;\n                            fullFilename = fileParts.rawPath + prefixes[j] + fileParts.filename;\n\n                            if (paths[i]) {\n                                fullFilename = path.join(paths[i], fullFilename);\n                            }\n\n                            if (!explicit && paths[i] === '.') {\n                                try {\n                                    fullFilename = require.resolve(fullFilename);\n                                    isNodeModule = true;\n                                }\n                                catch (e) {\n                                    filenamesTried.push(npmPrefix + fullFilename);\n                                    tryWithExtension();\n                                }\n                            }\n                            else {\n                                tryWithExtension();\n                            }\n\n                            function tryWithExtension() {\n                                const extFilename = options.ext ? self.tryAppendExtension(fullFilename, options.ext) : fullFilename;\n\n                                if (extFilename !== fullFilename && !explicit && paths[i] === '.') {\n                                    try {\n                                        fullFilename = require.resolve(extFilename);\n                                        isNodeModule = true;\n                                    }\n                                    catch (e) {\n                                        filenamesTried.push(npmPrefix + extFilename);\n                                        fullFilename = extFilename;\n                                    }\n                                }\n                                else {\n                                    fullFilename = extFilename;\n                                }\n                            }\n\n                            const readFileArgs = [fullFilename];\n                            if (!options.rawBuffer) {\n                                readFileArgs.push('utf-8');\n                            }\n                            if (options.syncImport) {\n                                try {\n                                    const data = fs.readFileSync.apply(this, readFileArgs);\n                                    fulfill({ contents: data, filename: fullFilename});\n                                }\n                                catch (e) {\n                                    filenamesTried.push(isNodeModule ? npmPrefix + fullFilename : fullFilename);\n                                    return tryPrefix(j + 1);\n                                }\n                            }\n                            else {\n                                readFileArgs.push(function(e, data) {\n                                    if (e) {\n                                        filenamesTried.push(isNodeModule ? npmPrefix + fullFilename : fullFilename);\n                                        return tryPrefix(j + 1);\n                                    }   \n                                    fulfill({ contents: data, filename: fullFilename});\n                                });\n                                fs.readFile.apply(this, readFileArgs);\n                            }\n\n                        }\n                        else {\n                            tryPathIndex(i + 1);\n                        }\n                    })(0);\n                } else {\n                    reject({ type: 'File', message: `'${filename}' wasn't found. Tried - ${filenamesTried.join(',')}` });\n                }\n            }(0));\n        }\n    },\n\n    loadFileSync(filename, currentDirectory, options, environment) {\n        options.syncImport = true;\n        return this.loadFile(filename, currentDirectory, options, environment);\n    }\n});\n\nexport default FileManager;\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"url\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "export default {\n    error: function(msg) {\n        this._fireEvent('error', msg);\n    },\n    warn: function(msg) {\n        this._fireEvent('warn', msg);\n    },\n    info: function(msg) {\n        this._fireEvent('info', msg);\n    },\n    debug: function(msg) {\n        this._fireEvent('debug', msg);\n    },\n    addListener: function(listener) {\n        this._listeners.push(listener);\n    },\n    removeListener: function(listener) {\n        for (let i = 0; i < this._listeners.length; i++) {\n            if (this._listeners[i] === listener) {\n                this._listeners.splice(i, 1);\n                return;\n            }\n        }\n    },\n    _fireEvent: function(type, msg) {\n        for (let i = 0; i < this._listeners.length; i++) {\n            const logFunction = this._listeners[i][type];\n            if (logFunction) {\n                logFunction(msg);\n            }\n        }\n    },\n    _listeners: []\n};\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"http\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"https\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n", "\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n", "// based on the qs module, but handles null objects as expected\n// fixes by Tomas Pollak.\n\nvar toString = Object.prototype.toString;\n\nfunction stringify(obj, prefix) {\n  if (prefix && (obj === null || typeof obj == 'undefined')) {\n    return prefix + '=';\n  } else if (toString.call(obj) == '[object Array]') {\n    return stringifyArray(obj, prefix);\n  } else if (toString.call(obj) == '[object Object]') {\n    return stringifyObject(obj, prefix);\n  } else if (toString.call(obj) == '[object Date]') {\n    return obj.toISOString();\n  } else if (prefix) { // string inside array or hash\n    return prefix + '=' + encodeURIComponent(String(obj));\n  } else if (String(obj).indexOf('=') !== -1) { // string with equal sign\n    return String(obj);\n  } else {\n    throw new TypeError('Cannot build a querystring out of: ' + obj);\n  }\n};\n\nfunction stringifyArray(arr, prefix) {\n  var ret = [];\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    if (prefix)\n      ret.push(stringify(arr[i], prefix + '[]'));\n    else\n      ret.push(stringify(arr[i]));\n  }\n\n  return ret.join('&');\n}\n\nfunction stringifyObject(obj, prefix) {\n  var ret = [];\n\n  Object.keys(obj).forEach(function(key) {\n    ret.push(stringify(obj[key], prefix\n      ? prefix + '[' + encodeURIComponent(key) + ']'\n      : encodeURIComponent(key)));\n  })\n\n  return ret.join('&');\n}\n\nexports.build = stringify;\n", "var readFile = require('fs').readFile,\n    basename = require('path').basename;\n\nexports.build = function(data, boundary, callback) {\n\n  if (typeof data != 'object' || typeof data.pipe == 'function')\n    return callback(new Error('Multipart builder expects data as key/val object.'));\n\n  var body   = '',\n      object = flatten(data),\n      count  = Object.keys(object).length;\n\n  if (count === 0)\n    return callback(new Error('Empty multipart body. Invalid data.'))\n\n  function done(err, section) {\n    if (err) return callback(err);\n    if (section) body += section;\n    --count || callback(null, body + '--' + boundary + '--');\n  };\n\n  for (var key in object) {\n    var value = object[key];\n    if (value === null || typeof value == 'undefined') {\n      done();\n    } else if (Buffer.isBuffer(value)) {\n      var part = { buffer: value, content_type: 'application/octet-stream' };\n      generate_part(key, part, boundary, done);\n    } else {\n      var part = (value.buffer || value.file || value.content_type) ? value : { value: value };\n      generate_part(key, part, boundary, done);\n    }\n  }\n\n}\n\nfunction generate_part(name, part, boundary, callback) {\n\n  var return_part = '--' + boundary + '\\r\\n';\n  return_part += 'Content-Disposition: form-data; name=\"' + name + '\"';\n\n  function append(data, filename) {\n\n    if (data) {\n      var binary = part.content_type.indexOf('text') == -1;\n      return_part += '; filename=\"' + encodeURIComponent(filename) + '\"\\r\\n';\n      if (binary) return_part += 'Content-Transfer-Encoding: binary\\r\\n';\n      return_part += 'Content-Type: ' + part.content_type + '\\r\\n\\r\\n';\n      return_part += binary ? data.toString('binary') : data.toString('utf8');\n    }\n\n    callback(null, return_part + '\\r\\n');\n  };\n\n  if ((part.file || part.buffer) && part.content_type) {\n\n    var filename = part.filename ? part.filename : part.file ? basename(part.file) : name;\n    if (part.buffer) return append(part.buffer, filename);\n\n    readFile(part.file, function(err, data) {\n      if (err) return callback(err);\n      append(data, filename);\n    });\n\n  } else {\n\n    if (typeof part.value == 'object')\n      return callback(new Error('Object received for ' + name + ', expected string.'))\n\n    if (part.content_type) {\n      return_part += '\\r\\n';\n      return_part += 'Content-Type: ' + part.content_type;\n    }\n\n    return_part += '\\r\\n\\r\\n';\n    return_part += Buffer.from(String(part.value), 'utf8').toString('binary');\n    append();\n\n  }\n\n}\n\n// flattens nested objects for multipart body\nfunction flatten(object, into, prefix) {\n  into = into || {};\n\n  for(var key in object) {\n    var prefix_key = prefix ? prefix + '[' + key + ']' : key;\n    var prop = object[key];\n\n    if (prop && typeof prop === 'object' && !(prop.buffer || prop.file || prop.content_type))\n      flatten(prop, into, prefix_key)\n    else\n      into[prefix_key] = prop;\n  }\n\n  return into;\n}\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"crypto\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "var createHash = require('crypto').createHash;\n\nfunction get_header(header, credentials, opts) {\n  var type = header.split(' ')[0],\n      user = credentials[0],\n      pass = credentials[1];\n\n  if (type == 'Digest') {\n    return digest.generate(header, user, pass, opts.method, opts.path);\n  } else if (type == 'Basic') {\n    return basic(user, pass);\n  }\n}\n\n////////////////////\n// basic\n\nfunction md5(string) {\n  return createHash('md5').update(string).digest('hex');\n}\n\nfunction basic(user, pass) {\n  var str  = typeof pass == 'undefined' ? user : [user, pass].join(':');\n  return 'Basic ' + Buffer.from(str).toString('base64');\n}\n\n////////////////////\n// digest\n// logic inspired from https://github.com/simme/node-http-digest-client\n\nvar digest = {};\n\ndigest.parse_header = function(header) {\n  var challenge = {},\n      matches   = header.match(/([a-z0-9_-]+)=\"?([a-z0-9=\\/\\.@\\s-\\+)()]+)\"?/gi);\n\n  for (var i = 0, l = matches.length; i < l; i++) {\n    var parts = matches[i].split('='),\n        key   = parts.shift(),\n        val   = parts.join('=').replace(/^\"/, '').replace(/\"$/, '');\n\n    challenge[key] = val;\n  }\n\n  return challenge;\n}\n\ndigest.update_nc = function(nc) {\n  var max = 99999999;\n  nc++;\n\n  if (nc > max)\n    nc = 1;\n\n  var padding = new Array(8).join('0') + '';\n  nc = nc + '';\n  return padding.substr(0, 8 - nc.length) + nc;\n}\n\ndigest.generate = function(header, user, pass, method, path) {\n\n  var nc        = 1,\n      cnonce    = null,\n      challenge = digest.parse_header(header);\n\n  var ha1  = md5(user + ':' + challenge.realm + ':' + pass),\n      ha2  = md5(method.toUpperCase() + ':' + path),\n      resp = [ha1, challenge.nonce];\n\n  if (typeof challenge.qop === 'string') {\n    cnonce = md5(Math.random().toString(36)).substr(0, 8);\n    nc     = digest.update_nc(nc);\n    resp   = resp.concat(nc, cnonce);\n    resp   = resp.concat(challenge.qop, ha2);\n  } else {\n    resp   = resp.concat(ha2);\n  }\n\n\n  var params = {\n    uri      : path,\n    realm    : challenge.realm,\n    nonce    : challenge.nonce,\n    username : user,\n    response : md5(resp.join(':'))\n  }\n\n  if (challenge.qop) {\n    params.qop = challenge.qop;\n  }\n\n  if (challenge.opaque) {\n    params.opaque = challenge.opaque;\n  }\n\n  if (cnonce) {\n    params.nc = nc;\n    params.cnonce = cnonce;\n  }\n\n  header = []\n  for (var k in params)\n    header.push(k + '=\"' + params[k] + '\"')\n\n  return 'Digest ' + header.join(', ');\n}\n\nmodule.exports = {\n  header : get_header,\n  basic  : basic,\n  digest : digest.generate\n}\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"querystring\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "\n//  Simple cookie handling implementation based on the standard RFC 6265.\n//\n//  This module just has two functionalities:\n//    - Parse a set-cookie-header as a key value object\n//    - Write a cookie-string from a key value object\n//\n//  All cookie attributes are ignored.\n\nvar unescape = require('querystring').unescape;\n\nvar COOKIE_PAIR        = /^([^=\\s]+)\\s*=\\s*(\"?)\\s*(.*)\\s*\\2\\s*$/;\nvar EXCLUDED_CHARS     = /[\\x00-\\x1F\\x7F\\x3B\\x3B\\s\\\"\\,\\\\\"%]/g;\nvar TRAILING_SEMICOLON = /\\x3B+$/;\nvar SEP_SEMICOLON      = /\\s*\\x3B\\s*/;\n\n// i know these should be 'const', but I'd like to keep\n// supporting earlier node.js versions as long as I can. :)\n\nvar KEY_INDEX   = 1; // index of key from COOKIE_PAIR match\nvar VALUE_INDEX = 3; // index of value from COOKIE_PAIR match\n\n// Returns a copy str trimmed and without trainling semicolon.\nfunction cleanCookieString(str) {\n  return str.trim().replace(/\\x3B+$/, '');\n}\n\nfunction getFirstPair(str) {\n  var index = str.indexOf('\\x3B');\n  return index === -1 ? str : str.substr(0, index);\n}\n\n// Returns a encoded copy of str based on RFC6265 S4.1.1.\nfunction encodeCookieComponent(str) {\n  return str.toString().replace(EXCLUDED_CHARS, encodeURIComponent);\n}\n\n// Parses a set-cookie-string based on the standard defined in RFC6265 S4.1.1.\nfunction parseSetCookieString(str) {\n  str = cleanCookieString(str);\n  str = getFirstPair(str);\n\n  var res = COOKIE_PAIR.exec(str);\n  if (!res || !res[VALUE_INDEX]) return null;\n\n  return {\n    name  : unescape(res[KEY_INDEX]),\n    value : unescape(res[VALUE_INDEX])\n  };\n}\n\n// Parses a set-cookie-header and returns a key/value object.\n// Each key represents the name of a cookie.\nfunction parseSetCookieHeader(header) {\n  if (!header) return {};\n  header = Array.isArray(header) ? header : [header];\n\n  return header.reduce(function(res, str) {\n    var cookie = parseSetCookieString(str);\n    if (cookie) res[cookie.name] = cookie.value;\n    return res;\n  }, {});\n}\n\n// Writes a set-cookie-string based on the standard definded in RFC6265 S4.1.1.\nfunction writeCookieString(obj) {\n  return Object.keys(obj).reduce(function(str, name) {\n    var encodedName  = encodeCookieComponent(name);\n    var encodedValue = encodeCookieComponent(obj[name]);\n    str += (str ? '; ' : '') + encodedName + '=' + encodedValue;\n    return str;\n  }, '');\n}\n\n// returns a key/val object from an array of cookie strings\nexports.read = parseSetCookieHeader;\n\n// writes a cookie string header\nexports.write = writeCookieString;\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"string_decoder\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", ";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n", "//////////////////////////////////////////\n// Defines mappings between content-type\n// and the appropriate parsers.\n//////////////////////////////////////////\n\nvar Transform = require('stream').Transform;\nvar sax = require('sax');\n\nfunction parseXML(str, cb) {\n  var obj, current, parser = sax.parser(true, { trim: true, lowercase: true })\n  parser.onerror = parser.onend = done;\n\n  function done(err) {\n    parser.onerror = parser.onend = function() { }\n    cb(err, obj)\n  }\n\n  function newElement(name, attributes) {\n    return {\n      name: name || '',\n      value: '',\n      attributes: attributes || {},\n      children: []\n    }\n  }\n\n  parser.oncdata = parser.ontext = function(t) {\n    if (current) current.value += t\n  }\n\n  parser.onopentag = function(node) {\n    var element = newElement(node.name, node.attributes)\n    if (current) {\n      element.parent = current\n      current.children.push(element)\n    } else { // root object\n      obj = element\n    }\n\n    current = element\n  };\n\n  parser.onclosetag = function() {\n    if (typeof current.parent !== 'undefined') {\n      var just_closed = current\n      current = current.parent\n      delete just_closed.parent\n    }\n  }\n\n  parser.write(str).close()\n}\n\nfunction parserFactory(name, fn) {\n\n  function parser() {\n    var chunks = [],\n        stream = new Transform({ objectMode: true });\n\n    // Buffer all our data\n    stream._transform = function(chunk, encoding, done) {\n      chunks.push(chunk);\n      done();\n    }\n\n    // And call the parser when all is there.\n    stream._flush = function(done) {\n      var self = this,\n          data = Buffer.concat(chunks);\n\n      try {\n        fn(data, function(err, result) {\n          if (err) throw err;\n          self.push(result);\n        });\n      } catch (err) {\n        self.push(data); // just pass the original data\n      } finally {\n        done();\n      }\n    }\n\n    return stream;\n  }\n\n  return { fn: parser, name: name };\n}\n\nvar parsers = {}\n\nfunction buildParser(name, types, fn) {\n  var parser = parserFactory(name, fn);\n  types.forEach(function(type) {\n    parsers[type] = parser;\n  })\n}\n\nbuildParser('json', [\n  'application/json',\n  'text/javascript'\n], function(buffer, cb) {\n  var err, data;\n  try { data = JSON.parse(buffer); } catch (e) { err = e; }\n  cb(err, data);\n});\n\nbuildParser('xml', [\n  'text/xml',\n  'application/xml',\n  'application/rdf+xml',\n  'application/rss+xml',\n  'application/atom+xml'\n], function(buffer, cb) {\n  parseXML(buffer.toString(), function(err, obj) {\n    cb(err, obj)\n  })\n});\n\nmodule.exports = parsers;\nmodule.exports.use = buildParser;\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"buffer\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n", "\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '\uD83D\uDCA9') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n", "\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u00C4\u0100\u0101\u00C9\u0104\u00D6\u00DC\u00E1\u0105\u010C\u00E4\u010D\u0106\u0107\u00E9\u0179\u017A\u010E\u00ED\u010F\u0112\u0113\u0116\u00F3\u0117\u00F4\u00F6\u00F5\u00FA\u011A\u011B\u00FC\u2020\u00B0\u0118\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u0119\u00A8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\u00AC\u221A\u0144\u0147\u2206\u00AB\u00BB\u2026\u00A0\u0148\u0150\u00D5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\u00C1\u0164\u0165\u00CD\u017D\u017E\u016A\u00D3\u00D4\u016B\u016E\u00DA\u016F\u0170\u0171\u0172\u0173\u00DD\u00FD\u0137\u017B\u0141\u017C\u0122\u02C7\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u20AC\u25A0\u00A0\"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2514\u2534\u252C\u251C\u2500\u253C\u2563\u2551\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2510\u2591\u2592\u2593\u2502\u2524\u2116\u00A7\u2557\u255D\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n", "\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\uFFFD\uFFFD\uFFFD\u2026\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\u0160\u2039\u015A\u0164\u017D\u0179\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0161\u203A\u015B\u0165\u017E\u017A\u00A0\u02C7\u02D8\u0141\u00A4\u0104\u00A6\u00A7\u00A8\u00A9\u015E\u00AB\u00AC\u00AD\u00AE\u017B\u00B0\u00B1\u02DB\u0142\u00B4\u00B5\u00B6\u00B7\u00B8\u0105\u015F\u00BB\u013D\u02DD\u013E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u040C\u040B\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u045C\u045B\u045F\u00A0\u040E\u045E\u0408\u00A4\u0490\u00A6\u00A7\u0401\u00A9\u0404\u00AB\u00AC\u00AD\u00AE\u0407\u00B0\u00B1\u0406\u0456\u0491\u00B5\u00B6\u00B7\u0451\u2116\u0454\u00BB\u0458\u0405\u0455\u0457\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\u017D\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\u017E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0385\u0386\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\uFFFD\u00AB\u00AC\u00AD\u00AE\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u00B5\u00B6\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u00A1\u00A2\u00A3\u20AA\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\u00BF\u05B0\u05B1\u05B2\u05B3\u05B4\u05B5\u05B6\u05B7\u05B8\u05B9\u05BA\u05BB\u05BC\u05BD\u05BE\u05BF\u05C0\u05C1\u05C2\u05C3\u05F0\u05F1\u05F2\u05F3\u05F4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u067E\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0679\u2039\u0152\u0686\u0698\u0688\u06AF\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u06A9\u2122\u0691\u203A\u0153\u200C\u200D\u06BA\u00A0\u060C\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u06BE\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u061B\u00BB\u00BC\u00BD\u00BE\u061F\u06C1\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u00D7\u0637\u0638\u0639\u063A\u0640\u0641\u0642\u0643\u00E0\u0644\u00E2\u0645\u0646\u0647\u0648\u00E7\u00E8\u00E9\u00EA\u00EB\u0649\u064A\u00EE\u00EF\u064B\u064C\u064D\u064E\u00F4\u064F\u0650\u00F7\u0651\u00F9\u0652\u00FB\u00FC\u200E\u200F\u06D2\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\u00A8\u02C7\u00B8\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\u00AF\u02DB\uFFFD\u00A0\uFFFD\u00A2\u00A3\u00A4\uFFFD\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u02D9\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u02D8\u0141\u00A4\u013D\u015A\u00A7\u00A8\u0160\u015E\u0164\u0179\u00AD\u017D\u017B\u00B0\u0105\u02DB\u0142\u00B4\u013E\u015B\u02C7\u00B8\u0161\u015F\u0165\u017A\u02DD\u017E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0126\u02D8\u00A3\u00A4\uFFFD\u0124\u00A7\u00A8\u0130\u015E\u011E\u0134\u00AD\uFFFD\u017B\u00B0\u0127\u00B2\u00B3\u00B4\u00B5\u0125\u00B7\u00B8\u0131\u015F\u011F\u0135\u00BD\uFFFD\u017C\u00C0\u00C1\u00C2\uFFFD\u00C4\u010A\u0108\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\uFFFD\u00D1\u00D2\u00D3\u00D4\u0120\u00D6\u00D7\u011C\u00D9\u00DA\u00DB\u00DC\u016C\u015C\u00DF\u00E0\u00E1\u00E2\uFFFD\u00E4\u010B\u0109\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\uFFFD\u00F1\u00F2\u00F3\u00F4\u0121\u00F6\u00F7\u011D\u00F9\u00FA\u00FB\u00FC\u016D\u015D\u02D9\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0138\u0156\u00A4\u0128\u013B\u00A7\u00A8\u0160\u0112\u0122\u0166\u00AD\u017D\u00AF\u00B0\u0105\u02DB\u0157\u00B4\u0129\u013C\u02C7\u00B8\u0161\u0113\u0123\u0167\u014A\u017E\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u012A\u0110\u0145\u014C\u0136\u00D4\u00D5\u00D6\u00D7\u00D8\u0172\u00DA\u00DB\u00DC\u0168\u016A\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u012B\u0111\u0146\u014D\u0137\u00F4\u00F5\u00F6\u00F7\u00F8\u0173\u00FA\u00FB\u00FC\u0169\u016B\u02D9\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\uFFFD\uFFFD\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u060C\u00AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u061B\uFFFD\uFFFD\uFFFD\u061F\uFFFD\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u2018\u2019\u00A3\u20AC\u20AF\u00A6\u00A7\u00A8\u00A9\u037A\u00AB\u00AC\u00AD\uFFFD\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u0385\u0386\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2017\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0112\u0122\u012A\u0128\u0136\u00A7\u013B\u0110\u0160\u0166\u017D\u00AD\u016A\u014A\u00B0\u0105\u0113\u0123\u012B\u0129\u0137\u00B7\u013C\u0111\u0161\u0167\u017E\u2015\u016B\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u00CF\u00D0\u0145\u014C\u00D3\u00D4\u00D5\u00D6\u0168\u00D8\u0172\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u00EF\u00F0\u0146\u014D\u00F3\u00F4\u00F5\u00F6\u0169\u00F8\u0173\u00FA\u00FB\u00FC\u00FD\u00FE\u0138\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u201D\u00A2\u00A3\u00A4\u201E\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u201C\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u2019\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u1E02\u1E03\u00A3\u010A\u010B\u1E0A\u00A7\u1E80\u00A9\u1E82\u1E0B\u1EF2\u00AD\u00AE\u0178\u1E1E\u1E1F\u0120\u0121\u1E40\u1E41\u00B6\u1E56\u1E81\u1E57\u1E83\u1E60\u1EF3\u1E84\u1E85\u1E61\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0174\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u1E6A\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u0176\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0175\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u1E6B\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u0177\u00FF\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u0160\u00A7\u0161\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u017D\u00B5\u00B6\u00B7\u017E\u00B9\u00BA\u00BB\u0152\u0153\u0178\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0105\u0141\u20AC\u201E\u0160\u00A7\u0161\u00A9\u0218\u00AB\u0179\u00AD\u017A\u017B\u00B0\u00B1\u010C\u0142\u017D\u201D\u00B6\u00B7\u017E\u010D\u0219\u00BB\u0152\u0153\u0178\u017C\u00C0\u00C1\u00C2\u0102\u00C4\u0106\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0110\u0143\u00D2\u00D3\u00D4\u0150\u00D6\u015A\u0170\u00D9\u00DA\u00DB\u00DC\u0118\u021A\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u0107\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0111\u0144\u00F2\u00F3\u00F4\u0151\u00F6\u015B\u0171\u00F9\u00FA\u00FB\u00FC\u0119\u021B\u00FF\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u03C5\u03C6\u03C7\u03C8\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03C9\u03AC\u03AD\u03AE\u03CA\u03AF\u03CC\u03CD\u03CB\u03CE\u0386\u0388\u0389\u038A\u038C\u038E\u038F\u00B1\u2265\u2264\u03AA\u03AB\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0106\u00FC\u00E9\u0101\u00E4\u0123\u00E5\u0107\u0142\u0113\u0156\u0157\u012B\u0179\u00C4\u00C5\u00C9\u00E6\u00C6\u014D\u00F6\u0122\u00A2\u015A\u015B\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u00A4\u0100\u012A\u00F3\u017B\u017C\u017A\u201D\u00A6\u00A9\u00AE\u00AC\u00BD\u00BC\u0141\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0104\u010C\u0118\u0116\u2563\u2551\u2557\u255D\u012E\u0160\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0172\u016A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u017D\u0105\u010D\u0119\u0117\u012F\u0161\u0173\u016B\u017E\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u00D3\u00DF\u014C\u0143\u00F5\u00D5\u00B5\u0144\u0136\u0137\u013B\u013C\u0146\u0112\u0145\u2019\u00AD\u00B1\u201C\u00BE\u00B6\u00A7\u00F7\u201E\u00B0\u2219\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u0131\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u016F\u0107\u00E7\u0142\u00EB\u0150\u0151\u00EE\u0179\u00C4\u0106\u00C9\u0139\u013A\u00F4\u00F6\u013D\u013E\u015A\u015B\u00D6\u00DC\u0164\u0165\u0141\u00D7\u010D\u00E1\u00ED\u00F3\u00FA\u0104\u0105\u017D\u017E\u0118\u0119\u00AC\u017A\u010C\u015F\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u011A\u015E\u2563\u2551\u2557\u255D\u017B\u017C\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0102\u0103\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u0111\u0110\u010E\u00CB\u010F\u0147\u00CD\u00CE\u011B\u2518\u250C\u2588\u2584\u0162\u016E\u2580\u00D3\u00DF\u00D4\u0143\u0144\u0148\u0160\u0161\u0154\u00DA\u0155\u0170\u00FD\u00DD\u0163\u00B4\u00AD\u02DD\u02DB\u02C7\u02D8\u00A7\u00F7\u00B8\u00B0\u00A8\u02D9\u0171\u0158\u0159\u25A0\u00A0\"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0452\u0402\u0453\u0403\u0451\u0401\u0454\u0404\u0455\u0405\u0456\u0406\u0457\u0407\u0458\u0408\u0459\u0409\u045A\u040A\u045B\u040B\u045C\u040C\u045E\u040E\u045F\u040F\u044E\u042E\u044A\u042A\u0430\u0410\u0431\u0411\u0446\u0426\u0434\u0414\u0435\u0415\u0444\u0424\u0433\u0413\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0445\u0425\u0438\u0418\u2563\u2551\u2557\u255D\u0439\u0419\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u043A\u041A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u043B\u041B\u043C\u041C\u043D\u041D\u043E\u041E\u043F\u2518\u250C\u2588\u2584\u041F\u044F\u2580\u042F\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0436\u0416\u0432\u0412\u044C\u042C\u2116\u00AD\u044B\u042B\u0437\u0417\u0448\u0428\u044D\u042D\u0449\u0429\u0447\u0427\u00A7\u25A0\u00A0\"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\u00A3\uFFFD\u00D7\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AE\u00AC\u00BD\u00BC\uFFFD\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\uFFFD\uFFFD\uFFFD\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\uFFFD\uFFFD\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2518\u250C\u2588\u2584\u00A6\uFFFD\u2580\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00B5\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u0131\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u0130\u00D6\u00DC\u00F8\u00A3\u00D8\u015E\u015F\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u011E\u011F\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00BA\u00AA\u00CA\u00CB\u00C8\uFFFD\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\uFFFD\u00D7\u00DA\u00DB\u00D9\u00EC\u00FF\u00AF\u00B4\u00AD\u00B1\uFFFD\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u20AC\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E3\u00E0\u00C1\u00E7\u00EA\u00CA\u00E8\u00CD\u00D4\u00EC\u00C3\u00C2\u00C9\u00C0\u00C8\u00F4\u00F5\u00F2\u00DA\u00F9\u00CC\u00D5\u00DC\u00A2\u00A3\u00D9\u20A7\u00D3\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00D2\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00D0\u00F0\u00DE\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00FE\u00FB\u00DD\u00FD\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00C1\u00CD\u00D3\u00DA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00C2\u00E0\u00B6\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u2017\u00C0\u00A7\u00C9\u00C8\u00CA\u00F4\u00CB\u00CF\u00FB\u00F9\u00A4\u00D4\u00DC\u00A2\u00A3\u00D9\u00DB\u0192\u00A6\u00B4\u00F3\u00FA\u00A8\u00B8\u00B3\u00AF\u00CE\u2310\u00AC\u00BD\u00BC\u00BE\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$\u066A&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00B0\u00B7\u2219\u221A\u2592\u2500\u2502\u253C\u2524\u252C\u251C\u2534\u2510\u250C\u2514\u2518\u03B2\u221E\u03C6\u00B1\u00BD\u00BC\u2248\u00AB\u00BB\uFEF7\uFEF8\uFFFD\uFFFD\uFEFB\uFEFC\uFFFD\u00A0\u00AD\uFE82\u00A3\u00A4\uFE84\uFFFD\uFFFD\uFE8E\uFE8F\uFE95\uFE99\u060C\uFE9D\uFEA1\uFEA5\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFED1\u061B\uFEB1\uFEB5\uFEB9\u061F\u00A2\uFE80\uFE81\uFE83\uFE85\uFECA\uFE8B\uFE8D\uFE91\uFE93\uFE97\uFE9B\uFE9F\uFEA3\uFEA7\uFEA9\uFEAB\uFEAD\uFEAF\uFEB3\uFEB7\uFEBB\uFEBF\uFEC1\uFEC5\uFECB\uFECF\u00A6\u00AC\u00F7\u00D7\uFEC9\u0640\uFED3\uFED7\uFEDB\uFEDF\uFEE3\uFEE7\uFEEB\uFEED\uFEEF\uFEF3\uFEBD\uFECC\uFECE\uFECD\uFEE1\uFE7D\u0651\uFEE5\uFEE9\uFEEC\uFEF0\uFEF2\uFED0\uFED5\uFEF5\uFEF6\uFEDD\uFED9\uFEF1\u25A0\uFFFD\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00A4\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0386\uFFFD\u00B7\u00AC\u00A6\u2018\u2019\u0388\u2015\u0389\u038A\u03AA\u038C\uFFFD\uFFFD\u038E\u03AB\u00A9\u038F\u00B2\u00B3\u03AC\u00A3\u03AD\u03AE\u03AF\u03CA\u0390\u03CC\u03CD\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u00BD\u0398\u0399\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u039A\u039B\u039C\u039D\u2563\u2551\u2557\u255D\u039E\u039F\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u03A0\u03A1\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u2518\u250C\u2588\u2584\u03B4\u03B5\u2580\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u0384\u00AD\u00B1\u03C5\u03C6\u03C7\u00A7\u03C8\u0385\u00B0\u00A8\u03C9\u03CB\u03B0\u03CE\u25A0\u00A0\"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u203E\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0160\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u017D\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0161\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u017E\u00FF\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFE88\u00D7\u00F7\uF8F6\uF8F5\uF8F4\uF8F7\uFE71\u0088\u25A0\u2502\u2500\u2510\u250C\u2514\u2518\uFE79\uFE7B\uFE7D\uFE7F\uFE77\uFE8A\uFEF0\uFEF3\uFEF2\uFECE\uFECF\uFED0\uFEF6\uFEF8\uFEFA\uFEFC\u00A0\uF8FA\uF8F9\uF8F8\u00A4\uF8FB\uFE8B\uFE91\uFE97\uFE9B\uFE9F\uFEA3\u060C\u00AD\uFEA7\uFEB3\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFEB7\u061B\uFEBB\uFEBF\uFECA\u061F\uFECB\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\uFEC7\u0639\u063A\uFECC\uFE82\uFE84\uFE8E\uFED3\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFED7\uFEDB\uFEDF\uF8FC\uFEF5\uFEF7\uFEF9\uFEFB\uFEE3\uFEE7\uFEEC\uFEE9\uFFFD\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0490\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0491\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0490\u0491\u0404\u0454\u0406\u0456\u0407\u0457\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E81\u0E82\u0E84\u0E87\u0E88\u0EAA\u0E8A\u0E8D\u0E94\u0E95\u0E96\u0E97\u0E99\u0E9A\u0E9B\u0E9C\u0E9D\u0E9E\u0E9F\u0EA1\u0EA2\u0EA3\u0EA5\u0EA7\u0EAB\u0EAD\u0EAE\uFFFD\uFFFD\uFFFD\u0EAF\u0EB0\u0EB2\u0EB3\u0EB4\u0EB5\u0EB6\u0EB7\u0EB8\u0EB9\u0EBC\u0EB1\u0EBB\u0EBD\uFFFD\uFFFD\uFFFD\u0EC0\u0EC1\u0EC2\u0EC3\u0EC4\u0EC8\u0EC9\u0ECA\u0ECB\u0ECC\u0ECD\u0EC6\uFFFD\u0EDC\u0EDD\u20AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0ED0\u0ED1\u0ED2\u0ED3\u0ED4\u0ED5\u0ED6\u0ED7\u0ED8\u0ED9\uFFFD\uFFFD\u00A2\u00AC\u00A6\uFFFD\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E48\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\u0E49\u0E4A\u0E4B\u20AC\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\u00A2\u00AC\u00A6\u00A0\"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u0081\u0082\u0083\u0084\u2026\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u0160\u2122\u00B4\u00A8\u2260\u017D\u00D8\u221E\u00B1\u2264\u2265\u2206\u00B5\u2202\u2211\u220F\u0161\u222B\u00AA\u00BA\u2126\u017E\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u0106\u00AB\u010C\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\uFFFD\u00A9\u2044\u00A4\u2039\u203A\u00C6\u00BB\u2013\u00B7\u201A\u201E\u2030\u00C2\u0107\u00C1\u010D\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\u0111\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u03C0\u00CB\u02DA\u00B8\u00CA\u00E6\u02C7\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u2202\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00B9\u00B2\u00C9\u00B3\u00D6\u00DC\u0385\u00E0\u00E2\u00E4\u0384\u00A8\u00E7\u00E9\u00E8\u00EA\u00EB\u00A3\u2122\u00EE\u00EF\u2022\u00BD\u2030\u00F4\u00F6\u00A6\u00AD\u00F9\u00FB\u00FC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\u00DF\u00AE\u00A9\u03A3\u03AA\u00A7\u2260\u00B0\u0387\u0391\u00B1\u2264\u2265\u00A5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\u00AC\u039F\u03A1\u2248\u03A4\u00AB\u00BB\u2026\u00A0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\u00F7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\uFFFD\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u00DD\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u00D0\u00F0\u00DE\u00FE\u00FD\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u0102\u015E\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u0103\u015F\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\u0162\u0163\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00AB\u00BB\u2026\uF88C\uF88F\uF892\uF895\uF898\uF88B\uF88E\uF891\uF894\uF897\u201C\u201D\uF899\uFFFD\u2022\uF884\uF889\uF885\uF886\uF887\uF888\uF88A\uF88D\uF890\uF893\uF896\u2018\u2019\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFEFF\u200B\u2013\u2014\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u2122\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u00AE\u00A9\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\uFFFD\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u0490\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u2553\u2554\u2555\u2556\u2557\u2558\u2559\u255A\u255B\u255C\u255D\u255E\u255F\u2560\u2561\u0401\u2562\u2563\u2564\u2565\u2566\u2567\u2568\u2569\u256A\u256B\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u255D\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u045E\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u040E\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u049B\u0493\u201A\u0492\u201E\u2026\u2020\u2021\uFFFD\u2030\u04B3\u2039\u04B2\u04B7\u04B6\uFFFD\u049A\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u04EF\u04EE\u0451\u00A4\u04E3\u00A6\u00A7\uFFFD\uFFFD\uFFFD\u00AB\u00AC\u00AD\u00AE\uFFFD\u00B0\u00B1\u00B2\u0401\uFFFD\u04E2\u00B6\u00B7\uFFFD\u2116\uFFFD\u00BB\uFFFD\uFFFD\uFFFD\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u0587\u0589)(\u00BB\u00AB\u2014.\u055D,-\u058A\u2026\u055C\u055B\u055E\u0531\u0561\u0532\u0562\u0533\u0563\u0534\u0564\u0535\u0565\u0536\u0566\u0537\u0567\u0538\u0568\u0539\u0569\u053A\u056A\u053B\u056B\u053C\u056C\u053D\u056D\u053E\u056E\u053F\u056F\u0540\u0570\u0541\u0571\u0542\u0572\u0543\u0573\u0544\u0574\u0545\u0575\u0546\u0576\u0547\u0577\u0548\u0578\u0549\u0579\u054A\u057A\u054B\u057B\u054C\u057C\u054D\u057D\u054E\u057E\u054F\u057F\u0550\u0580\u0551\u0581\u0552\u0582\u0553\u0583\u0554\u0584\u0555\u0585\u0556\u0586\u055A\uFFFD\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u049A\u04BA\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u049B\u04BB\u045F\u00A0\u04B0\u04B1\u04D8\u00A4\u04E8\u00A6\u00A7\u0401\u00A9\u0492\u00AB\u00AC\u00AD\u00AE\u04AE\u00B0\u00B1\u0406\u0456\u04E9\u00B5\u00B6\u00B7\u0451\u2116\u0493\u00BB\u04D9\u04A2\u04A3\u04AF\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\u00DA\u1EE4\\u0003\u1EEA\u1EEC\u1EEE\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\u1EE8\u1EF0\u1EF2\u1EF6\u1EF8\u00DD\u1EF4\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00C0\u1EA2\u00C3\u00C1\u1EA0\u1EB6\u1EAC\u00C8\u1EBA\u1EBC\u00C9\u1EB8\u1EC6\u00CC\u1EC8\u0128\u00CD\u1ECA\u00D2\u1ECE\u00D5\u00D3\u1ECC\u1ED8\u1EDC\u1EDE\u1EE0\u1EDA\u1EE2\u00D9\u1EE6\u0168\u00A0\u0102\u00C2\u00CA\u00D4\u01A0\u01AF\u0110\u0103\u00E2\u00EA\u00F4\u01A1\u01B0\u0111\u1EB0\u0300\u0309\u0303\u0301\u0323\u00E0\u1EA3\u00E3\u00E1\u1EA1\u1EB2\u1EB1\u1EB3\u1EB5\u1EAF\u1EB4\u1EAE\u1EA6\u1EA8\u1EAA\u1EA4\u1EC0\u1EB7\u1EA7\u1EA9\u1EAB\u1EA5\u1EAD\u00E8\u1EC2\u1EBB\u1EBD\u00E9\u1EB9\u1EC1\u1EC3\u1EC5\u1EBF\u1EC7\u00EC\u1EC9\u1EC4\u1EBE\u1ED2\u0129\u00ED\u1ECB\u00F2\u1ED4\u1ECF\u00F5\u00F3\u1ECD\u1ED3\u1ED5\u1ED7\u1ED1\u1ED9\u1EDD\u1EDF\u1EE1\u1EDB\u1EE3\u00F9\u1ED6\u1EE7\u0169\u00FA\u1EE5\u1EEB\u1EED\u1EEF\u1EE9\u1EF1\u1EF3\u1EF7\u1EF9\u00FD\u1EF5\u1ED0\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10EF\u10F0\u10F1\u10F2\u10F3\u10F4\u10F5\u10F6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10F1\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10F2\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10F3\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10F4\u10EF\u10F0\u10F5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0496\u0492\u04EE\u0493\u201E\u2026\u04B6\u04AE\u04B2\u04AF\u04A0\u04E2\u04A2\u049A\u04BA\u04B8\u0497\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u04B3\u04B7\u04A1\u04E3\u04A3\u049B\u04BB\u04B9\u00A0\u040E\u045E\u0408\u04E8\u0498\u04B0\u00A7\u0401\u00A9\u04D8\u00AB\u00AC\u04EF\u00AE\u049C\u00B0\u04B1\u0406\u0456\u0499\u04E9\u00B6\u00B7\u0451\u2116\u04D9\u00BB\u0458\u04AA\u04AB\u049D\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\u1EB2\\u0003\\u0004\u1EB4\u1EAA\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\u1EF6\\u0015\\u0016\\u0017\\u0018\u1EF8\\u001a\\u001b\\u001c\\u001d\u1EF4\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u1EA0\u1EAE\u1EB0\u1EB6\u1EA4\u1EA6\u1EA8\u1EAC\u1EBC\u1EB8\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EE2\u1EDA\u1EDC\u1EDE\u1ECA\u1ECE\u1ECC\u1EC8\u1EE6\u0168\u1EE4\u1EF2\u00D5\u1EAF\u1EB1\u1EB7\u1EA5\u1EA7\u1EA9\u1EAD\u1EBD\u1EB9\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1ED1\u1ED3\u1ED5\u1ED7\u1EE0\u01A0\u1ED9\u1EDD\u1EDF\u1ECB\u1EF0\u1EE8\u1EEA\u1EEC\u01A1\u1EDB\u01AF\u00C0\u00C1\u00C2\u00C3\u1EA2\u0102\u1EB3\u1EB5\u00C8\u00C9\u00CA\u1EBA\u00CC\u00CD\u0128\u1EF3\u0110\u1EE9\u00D2\u00D3\u00D4\u1EA1\u1EF7\u1EEB\u1EED\u00D9\u00DA\u1EF9\u1EF5\u00DD\u1EE1\u01B0\u00E0\u00E1\u00E2\u00E3\u1EA3\u0103\u1EEF\u1EAB\u00E8\u00E9\u00EA\u1EBB\u00EC\u00ED\u0129\u1EC9\u0111\u1EF1\u00F2\u00F3\u00F4\u00F5\u1ECF\u1ECD\u1EE5\u00F9\u00FA\u0169\u1EE7\u00FD\u1EE3\u1EEE\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#\u00A5%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\u00A5]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00C0\u00C2\u00C8\u00CA\u00CB\u00CE\u00CF\u00B4\u02CB\u02C6\u00A8\u02DC\u00D9\u00DB\u20A4\u00AF\u00DD\u00FD\u00B0\u00C7\u00E7\u00D1\u00F1\u00A1\u00BF\u00A4\u00A3\u00A5\u00A7\u0192\u00A2\u00E2\u00EA\u00F4\u00FB\u00E1\u00E9\u00F3\u00FA\u00E0\u00E8\u00F2\u00F9\u00E4\u00EB\u00F6\u00FC\u00C5\u00EE\u00D8\u00C6\u00E5\u00ED\u00F8\u00E6\u00C4\u00EC\u00D6\u00DC\u00C9\u00EF\u00DF\u00D4\u00C1\u00C3\u00E3\u00D0\u00F0\u00CD\u00CC\u00D3\u00D2\u00D5\u00F5\u0160\u0161\u00DA\u0178\u00FF\u00DE\u00FE\u00B7\u00B5\u00B6\u00BE\u2014\u00BC\u00BD\u00AA\u00BA\u00AB\u25A0\u00BB\u00B1\uFFFD\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  }\n}", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n", "\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + \u00A5 + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'\u20AC': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n", "\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n", "\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n", "\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n", "\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '\uFFFD';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"\u0100\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n", "var iconv,\n    inherits  = require('util').inherits,\n    stream    = require('stream');\n\nvar regex = /(?:charset|encoding)\\s*=\\s*['\"]? *([\\w\\-]+)/i;\n\ninherits(StreamDecoder, stream.Transform);\n\nfunction StreamDecoder(charset) {\n  if (!(this instanceof StreamDecoder))\n    return new StreamDecoder(charset);\n\n  stream.Transform.call(this, charset);\n  this.charset = charset;\n  this.parsed_chunk = false;\n}\n\nStreamDecoder.prototype._transform = function(chunk, encoding, done) {\n  var res, found;\n\n  // try get charset from chunk, just once\n  if (this.charset == 'utf8' && !this.parsed_chunk) {\n    this.parsed_chunk = true;\n\n    var matches = regex.exec(chunk.toString());\n    if (matches) {\n      found = matches[1].toLowerCase();\n      this.charset = found == 'utf-8' ? 'utf8' : found;\n    }\n  }\n\n  try {\n    res = iconv.decode(chunk, this.charset);\n  } catch(e) { // something went wrong, just return original chunk\n    res = chunk;\n  }\n\n  this.push(res);\n  done();\n}\n\nmodule.exports = function(charset) {\n  try {\n    if (!iconv) iconv = require('iconv-lite');\n  } catch(e) {\n    /* iconv not found */\n  }\n\n  if (iconv)\n    return new StreamDecoder(charset);\n  else\n    return new stream.PassThrough;\n}\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"zlib\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "//////////////////////////////////////////\n// Needle -- HTTP Client for Node.js\n// Written by Tom\u00E1s Pollak <tomas@forkhq.com>\n// (c) 2012-2020 - Fork Ltd.\n// MIT Licensed\n//////////////////////////////////////////\n\nvar fs          = require('fs'),\n    http        = require('http'),\n    https       = require('https'),\n    url         = require('url'),\n    stream      = require('stream'),\n    debug       = require('debug')('needle'),\n    stringify   = require('./querystring').build,\n    multipart   = require('./multipart'),\n    auth        = require('./auth'),\n    cookies     = require('./cookies'),\n    parsers     = require('./parsers'),\n    decoder     = require('./decoder');\n\n//////////////////////////////////////////\n// variabilia\n\nvar version     = require('../package.json').version;\n\nvar user_agent  = 'Needle/' + version;\nuser_agent     += ' (Node.js ' + process.version + '; ' + process.platform + ' ' + process.arch + ')';\n\nvar tls_options = 'agent pfx key passphrase cert ca ciphers rejectUnauthorized secureProtocol checkServerIdentity family';\n\n// older versions of node (< 0.11.4) prevent the runtime from exiting\n// because of connections in keep-alive state. so if this is the case\n// we'll default new requests to set a Connection: close header.\nvar close_by_default = !http.Agent || http.Agent.defaultMaxSockets != Infinity;\n\n// see if we have Object.assign. otherwise fall back to util._extend\nvar extend = Object.assign ? Object.assign : require('util')._extend;\n\n// these are the status codes that Needle interprets as redirects.\nvar redirect_codes = [301, 302, 303, 307, 308];\n\n//////////////////////////////////////////\n// decompressors for gzip/deflate/br bodies\n\nfunction bind_opts(fn, options) {\n  return fn.bind(null, options);\n}\n\nvar decompressors = {};\n\ntry {\n\n  var zlib = require('zlib');\n\n  // Enable Z_SYNC_FLUSH to avoid Z_BUF_ERROR errors (Node PR #2595)\n  var zlib_options = {\n    flush: zlib.Z_SYNC_FLUSH,\n    finishFlush: zlib.Z_SYNC_FLUSH\n  };\n\n  var br_options = {\n    flush: zlib.BROTLI_OPERATION_FLUSH,\n    finishFlush: zlib.BROTLI_OPERATION_FLUSH\n  };\n\n  decompressors['x-deflate'] = bind_opts(zlib.Inflate, zlib_options);\n  decompressors['deflate']   = bind_opts(zlib.Inflate, zlib_options);\n  decompressors['x-gzip']    = bind_opts(zlib.Gunzip, zlib_options);\n  decompressors['gzip']      = bind_opts(zlib.Gunzip, zlib_options);\n  if (typeof zlib.BrotliDecompress === 'function') {\n    decompressors['br']      = bind_opts(zlib.BrotliDecompress, br_options);\n  }\n\n} catch(e) { /* zlib not available */ }\n\n//////////////////////////////////////////\n// options and aliases\n\nvar defaults = {\n  // data\n  boundary                : '--------------------NODENEEDLEHTTPCLIENT',\n  encoding                : 'utf8',\n  parse_response          : 'all', // same as true. valid options: 'json', 'xml' or false/null\n  proxy                   : null,\n\n  // headers\n  headers                 : {},\n  accept                  : '*/*',\n  user_agent              : user_agent,\n\n  // numbers\n  open_timeout            : 10000,\n  response_timeout        : 0,\n  read_timeout            : 0,\n  follow_max              : 0,\n  stream_length           : -1,\n\n  // booleans\n  compressed              : false,\n  decode_response         : true,\n  parse_cookies           : true,\n  follow_set_cookies      : false,\n  follow_set_referer      : false,\n  follow_keep_method      : false,\n  follow_if_same_host     : false,\n  follow_if_same_protocol : false,\n  follow_if_same_location : false\n}\n\nvar aliased = {\n  options: {\n    decode  : 'decode_response',\n    parse   : 'parse_response',\n    timeout : 'open_timeout',\n    follow  : 'follow_max'\n  },\n  inverted: {}\n}\n\n// only once, invert aliased keys so we can get passed options.\nObject.keys(aliased.options).map(function(k) {\n  var value = aliased.options[k];\n  aliased.inverted[value] = k;\n});\n\n//////////////////////////////////////////\n// helpers\n\nfunction keys_by_type(type) {\n  return Object.keys(defaults).map(function(el) {\n    if (defaults[el] !== null && defaults[el].constructor == type)\n      return el;\n  }).filter(function(el) { return el })\n}\n\nfunction parse_content_type(header) {\n  if (!header || header === '') return {};\n\n  var found, charset = 'utf8', arr = header.split(';');\n\n  if (arr.length > 1 && (found = arr[1].match(/charset=(.+)/)))\n    charset = found[1];\n\n  return { type: arr[0], charset: charset };\n}\n\nfunction is_stream(obj) {\n  return typeof obj.pipe === 'function';\n}\n\nfunction get_stream_length(stream, given_length, cb) {\n  if (given_length > 0)\n    return cb(given_length);\n\n  if (stream.end !== void 0 && stream.end !== Infinity && stream.start !== void 0)\n    return cb((stream.end + 1) - (stream.start || 0));\n\n  fs.stat(stream.path, function(err, stat) {\n    cb(stat ? stat.size - (stream.start || 0) : null);\n  });\n}\n\n//////////////////////////////////////////\n// the main act\n\nfunction Needle(method, uri, data, options, callback) {\n  // if (!(this instanceof Needle)) {\n  //   return new Needle(method, uri, data, options, callback);\n  // }\n\n  if (typeof uri !== 'string')\n    throw new TypeError('URL must be a string, not ' + uri);\n\n  this.method   = method;\n  this.uri      = uri;\n  this.data     = data;\n\n  if (typeof options == 'function') {\n    this.callback = options;\n    this.options  = {};\n  } else {\n    this.callback = callback;\n    this.options  = options;\n  }\n\n}\n\nNeedle.prototype.setup = function(uri, options) {\n\n  function get_option(key, fallback) {\n    // if original is in options, return that value\n    if (typeof options[key] != 'undefined') return options[key];\n\n    // otherwise, return value from alias or fallback/undefined\n    return typeof options[aliased.inverted[key]] != 'undefined'\n                ? options[aliased.inverted[key]] : fallback;\n  }\n\n  function check_value(expected, key) {\n    var value = get_option(key),\n        type  = typeof value;\n\n    if (type != 'undefined' && type != expected)\n      throw new TypeError(type + ' received for ' + key + ', but expected a ' + expected);\n\n    return (type == expected) ? value : defaults[key];\n  }\n\n  //////////////////////////////////////////////////\n  // the basics\n\n  var config = {\n    http_opts : {\n      localAddress: get_option('localAddress', undefined)\n    }, // passed later to http.request() directly\n    headers   : {},\n    output    : options.output,\n    proxy     : get_option('proxy', defaults.proxy),\n    parser    : get_option('parse_response', defaults.parse_response),\n    encoding  : options.encoding || (options.multipart ? 'binary' : defaults.encoding)\n  }\n\n  keys_by_type(Boolean).forEach(function(key) {\n    config[key] = check_value('boolean', key);\n  })\n\n  keys_by_type(Number).forEach(function(key) {\n    config[key] = check_value('number', key);\n  })\n\n  // populate http_opts with given TLS options\n  tls_options.split(' ').forEach(function(key) {\n    if (typeof options[key] != 'undefined') {\n      config.http_opts[key] = options[key];\n      if (typeof options.agent == 'undefined')\n        config.http_opts.agent = false; // otherwise tls options are skipped\n    }\n  });\n\n  //////////////////////////////////////////////////\n  // headers, cookies\n\n  for (var key in defaults.headers)\n    config.headers[key] = defaults.headers[key];\n\n  config.headers['accept'] = options.accept || defaults.accept;\n  config.headers['user-agent'] = options.user_agent || defaults.user_agent;\n\n  if (options.content_type)\n    config.headers['content-type'] = options.content_type;\n\n  // set connection header if opts.connection was passed, or if node < 0.11.4 (close)\n  if (options.connection || close_by_default)\n    config.headers['connection'] = options.connection || 'close';\n\n  if ((options.compressed || defaults.compressed) && typeof zlib != 'undefined')\n    config.headers['accept-encoding'] = decompressors['br'] ? 'gzip, deflate, br' : 'gzip, deflate';\n\n  if (options.cookies)\n    config.headers['cookie'] = cookies.write(options.cookies);\n\n  //////////////////////////////////////////////////\n  // basic/digest auth\n\n  if (uri.match(/[^\\/]@/)) { // url contains user:pass@host, so parse it.\n    var parts = (url.parse(uri).auth || '').split(':');\n    options.username = parts[0];\n    options.password = parts[1];\n  }\n\n  if (options.username) {\n    if (options.auth && (options.auth == 'auto' || options.auth == 'digest')) {\n      config.credentials = [options.username, options.password];\n    } else {\n      config.headers['authorization'] = auth.basic(options.username, options.password);\n    }\n  }\n\n  // if proxy is present, set auth header from either url or proxy_user option.\n  if (config.proxy) {\n    if (config.proxy.indexOf('http') === -1)\n      config.proxy = 'http://' + config.proxy;\n\n    if (config.proxy.indexOf('@') !== -1) {\n      var proxy = (url.parse(config.proxy).auth || '').split(':');\n      options.proxy_user = proxy[0];\n      options.proxy_pass = proxy[1];\n    }\n\n    if (options.proxy_user)\n      config.headers['proxy-authorization'] = auth.basic(options.proxy_user, options.proxy_pass);\n  }\n\n  // now that all our headers are set, overwrite them if instructed.\n  for (var h in options.headers)\n    config.headers[h.toLowerCase()] = options.headers[h];\n\n  config.uri_modifier = get_option('uri_modifier', null);\n\n  return config;\n}\n\nNeedle.prototype.start = function() {\n\n  var out      = new stream.PassThrough({ objectMode: false }),\n      uri      = this.uri,\n      data     = this.data,\n      method   = this.method,\n      callback = (typeof this.options == 'function') ? this.options : this.callback,\n      options  = this.options || {};\n\n  // if no 'http' is found on URL, prepend it.\n  if (uri.indexOf('http') === -1)\n    uri = uri.replace(/^(\\/\\/)?/, 'http://');\n\n  var self = this, body, waiting = false, config = this.setup(uri, options);\n\n  // unless options.json was set to false, assume boss also wants JSON if content-type matches.\n  var json = options.json || (options.json !== false && config.headers['content-type'] == 'application/json');\n\n  if (data) {\n\n    if (options.multipart) { // boss says we do multipart. so we do it.\n      var boundary = options.boundary || defaults.boundary;\n\n      waiting = true;\n      multipart.build(data, boundary, function(err, parts) {\n        if (err) throw(err);\n\n        config.headers['content-type'] = 'multipart/form-data; boundary=' + boundary;\n        next(parts);\n      });\n\n    } else if (is_stream(data)) {\n\n      if (method.toUpperCase() == 'GET')\n        throw new Error('Refusing to pipe() a stream via GET. Did you mean .post?');\n\n      if (config.stream_length > 0 || (config.stream_length === 0 && data.path)) {\n        // ok, let's get the stream's length and set it as the content-length header.\n        // this prevents some servers from cutting us off before all the data is sent.\n        waiting = true;\n        get_stream_length(data, config.stream_length, function(length) {\n          data.length = length;\n          next(data);\n        })\n\n      } else {\n        // if the boss doesn't want us to get the stream's length, or if it doesn't\n        // have a file descriptor for that purpose, then just head on.\n        body = data;\n      }\n\n    } else if (Buffer.isBuffer(data)) {\n\n      body = data; // use the raw buffer as request body.\n\n    } else if (method.toUpperCase() == 'GET' && !json) {\n\n      // append the data to the URI as a querystring.\n      uri = uri.replace(/\\?.*|$/, '?' + stringify(data));\n\n    } else { // string or object data, no multipart.\n\n      // if string, leave it as it is, otherwise, stringify.\n      body = (typeof(data) === 'string') ? data\n             : json ? JSON.stringify(data) : stringify(data);\n\n      // ensure we have a buffer so bytecount is correct.\n      body = Buffer.from(body, config.encoding);\n    }\n\n  }\n\n  function next(body) {\n    if (body) {\n      if (body.length) config.headers['content-length'] = body.length;\n\n      // if no content-type was passed, determine if json or not.\n      if (!config.headers['content-type']) {\n        config.headers['content-type'] = json\n        ? 'application/json; charset=utf-8'\n        : 'application/x-www-form-urlencoded'; // no charset says W3 spec.\n      }\n    }\n\n    // unless a specific accept header was set, assume json: true wants JSON back.\n    if (options.json && (!options.accept && !(options.headers || {}).accept))\n      config.headers['accept'] = 'application/json';\n\n    self.send_request(1, method, uri, config, body, out, callback);\n  }\n\n  if (!waiting) next(body);\n  return out;\n}\n\nNeedle.prototype.get_request_opts = function(method, uri, config) {\n  var opts      = config.http_opts,\n      proxy     = config.proxy,\n      remote    = proxy ? url.parse(proxy) : url.parse(uri);\n\n  opts.protocol = remote.protocol;\n  opts.host     = remote.hostname;\n  opts.port     = remote.port || (remote.protocol == 'https:' ? 443 : 80);\n  opts.path     = proxy ? uri : remote.pathname + (remote.search || '');\n  opts.method   = method;\n  opts.headers  = config.headers;\n\n  if (!opts.headers['host']) {\n    // if using proxy, make sure the host header shows the final destination\n    var target = proxy ? url.parse(uri) : remote;\n    opts.headers['host'] = target.hostname;\n\n    // and if a non standard port was passed, append it to the port header\n    if (target.port && [80, 443].indexOf(target.port) === -1) {\n      opts.headers['host'] += ':' + target.port;\n    }\n  }\n\n  return opts;\n}\n\nNeedle.prototype.should_follow = function(location, config, original) {\n  if (!location) return false;\n\n  // returns true if location contains matching property (host or protocol)\n  function matches(property) {\n    var property = original[property];\n    return location.indexOf(property) !== -1;\n  }\n\n  // first, check whether the requested location is actually different from the original\n  if (!config.follow_if_same_location && location === original)\n    return false;\n\n  if (config.follow_if_same_host && !matches('host'))\n    return false; // host does not match, so not following\n\n  if (config.follow_if_same_protocol && !matches('protocol'))\n    return false; // procotol does not match, so not following\n\n  return true;\n}\n\nNeedle.prototype.send_request = function(count, method, uri, config, post_data, out, callback) {\n\n  if (typeof config.uri_modifier === 'function') {\n    var modified_uri = config.uri_modifier(uri);\n    debug('Modifying request URI', uri + ' => ' + modified_uri);\n    uri = modified_uri;\n  }\n\n  var timer,\n      returned     = 0,\n      self         = this,\n      request_opts = this.get_request_opts(method, uri, config),\n      protocol     = request_opts.protocol == 'https:' ? https : http;\n\n  function done(err, resp) {\n    if (returned++ > 0)\n      return debug('Already finished, stopping here.');\n\n    if (timer) clearTimeout(timer);\n    request.removeListener('error', had_error);\n\n    if (callback)\n      return callback(err, resp, resp ? resp.body : undefined);\n\n    // NOTE: this event used to be called 'end', but the behaviour was confusing\n    // when errors ocurred, because the stream would still emit an 'end' event.\n    out.emit('done', err);\n  }\n\n  function had_error(err) {\n    debug('Request error', err);\n    out.emit('err', err);\n    done(err || new Error('Unknown error when making request.'));\n  }\n\n  function set_timeout(type, milisecs) {\n    if (timer) clearTimeout(timer);\n    if (milisecs <= 0) return;\n\n    timer = setTimeout(function() {\n      out.emit('timeout', type);\n      request.abort();\n      // also invoke done() to terminate job on read_timeout\n      if (type == 'read') done(new Error(type + ' timeout'));\n    }, milisecs);\n  }\n\n  // handle errors on the underlying socket, that may be closed while writing\n  // for an example case, see test/long_string_spec.js. we make sure this\n  // scenario ocurred by verifying the socket's writable & destroyed states.\n  function on_socket_end() {\n    if (returned && !this.writable && this.destroyed === false) {\n      this.destroy();\n      had_error(new Error('Remote end closed socket abruptly.'))\n    }\n  }\n\n  debug('Making request #' + count, request_opts);\n  var request = protocol.request(request_opts, function(resp) {\n\n    var headers = resp.headers;\n    debug('Got response', resp.statusCode, headers);\n    out.emit('response', resp);\n\n    set_timeout('read', config.read_timeout);\n\n    // if we got cookies, parse them unless we were instructed not to. make sure to include any\n    // cookies that might have been set on previous redirects.\n    if (config.parse_cookies && (headers['set-cookie'] || config.previous_resp_cookies)) {\n      resp.cookies = extend(config.previous_resp_cookies || {}, cookies.read(headers['set-cookie']));\n      debug('Got cookies', resp.cookies);\n    }\n\n    // if redirect code is found, determine if we should follow it according to the given options.\n    if (redirect_codes.indexOf(resp.statusCode) !== -1 && self.should_follow(headers.location, config, uri)) {\n      // clear timer before following redirects to prevent unexpected setTimeout consequence\n      clearTimeout(timer);\n\n      if (count <= config.follow_max) {\n        out.emit('redirect', headers.location);\n\n        // unless 'follow_keep_method' is true, rewrite the request to GET before continuing.\n        if (!config.follow_keep_method) {\n          method    = 'GET';\n          post_data = null;\n          delete config.headers['content-length']; // in case the original was a multipart POST request.\n        }\n\n        // if follow_set_cookies is true, insert cookies in the next request's headers.\n        // we set both the original request cookies plus any response cookies we might have received.\n        if (config.follow_set_cookies) {\n          var request_cookies = cookies.read(config.headers['cookie']);\n          config.previous_resp_cookies = resp.cookies;\n          if (Object.keys(request_cookies).length || Object.keys(resp.cookies || {}).length) {\n            config.headers['cookie'] = cookies.write(extend(request_cookies, resp.cookies));\n          }\n        } else if (config.headers['cookie']) {\n          debug('Clearing original request cookie', config.headers['cookie']);\n          delete config.headers['cookie'];\n        }\n\n        if (config.follow_set_referer)\n          config.headers['referer'] = encodeURI(uri); // the original, not the destination URL.\n\n        config.headers['host'] = null; // clear previous Host header to avoid conflicts.\n\n        debug('Redirecting to ' + url.resolve(uri, headers.location));\n        return self.send_request(++count, method, url.resolve(uri, headers.location), config, post_data, out, callback);\n      } else if (config.follow_max > 0) {\n        return done(new Error('Max redirects reached. Possible loop in: ' + headers.location));\n      }\n    }\n\n    // if auth is requested and credentials were not passed, resend request, provided we have user/pass.\n    if (resp.statusCode == 401 && headers['www-authenticate'] && config.credentials) {\n      if (!config.headers['authorization']) { // only if authentication hasn't been sent\n        var auth_header = auth.header(headers['www-authenticate'], config.credentials, request_opts);\n\n        if (auth_header) {\n          config.headers['authorization'] = auth_header;\n          return self.send_request(count, method, uri, config, post_data, out, callback);\n        }\n      }\n    }\n\n    // ok, so we got a valid (non-redirect & authorized) response. let's notify the stream guys.\n    out.emit('header', resp.statusCode, headers);\n    out.emit('headers', headers);\n\n    var pipeline      = [],\n        mime          = parse_content_type(headers['content-type']),\n        text_response = mime.type && mime.type.indexOf('text/') != -1;\n\n    // To start, if our body is compressed and we're able to inflate it, do it.\n    if (headers['content-encoding'] && decompressors[headers['content-encoding']]) {\n\n      var decompressor = decompressors[headers['content-encoding']]();\n\n      // make sure we catch errors triggered by the decompressor.\n      decompressor.on('error', had_error);\n      pipeline.push(decompressor);\n    }\n\n    // If parse is enabled and we have a parser for it, then go for it.\n    if (config.parser && parsers[mime.type]) {\n\n      // If a specific parser was requested, make sure we don't parse other types.\n      var parser_name = config.parser.toString().toLowerCase();\n      if (['xml', 'json'].indexOf(parser_name) == -1 || parsers[mime.type].name == parser_name) {\n\n        // OK, so either we're parsing all content types or the one requested matches.\n        out.parser = parsers[mime.type].name;\n        pipeline.push(parsers[mime.type].fn());\n\n        // Set objectMode on out stream to improve performance.\n        out._writableState.objectMode = true;\n        out._readableState.objectMode = true;\n      }\n\n    // If we're not parsing, and unless decoding was disabled, we'll try\n    // decoding non UTF-8 bodies to UTF-8, using the iconv-lite library.\n    } else if (text_response && config.decode_response\n      && mime.charset) {\n        pipeline.push(decoder(mime.charset));\n    }\n    // And `out` is the stream we finally push the decoded/parsed output to.\n    pipeline.push(out);\n\n    // Now, release the kraken!\n    var tmp = resp;\n    while (pipeline.length) {\n      tmp = tmp.pipe(pipeline.shift());\n    }\n\n    // If the user has requested and output file, pipe the output stream to it.\n    // In stream mode, we will still get the response stream to play with.\n    if (config.output && resp.statusCode == 200) {\n\n      // for some reason, simply piping resp to the writable stream doesn't\n      // work all the time (stream gets cut in the middle with no warning).\n      // so we'll manually need to do the readable/write(chunk) trick.\n      var file = fs.createWriteStream(config.output);\n      file.on('error', had_error);\n\n      out.on('end', function() {\n        if (file.writable) file.end();\n      });\n\n      file.on('close', function() {\n        delete out.file;\n      })\n\n      out.on('readable', function() {\n        var chunk;\n        while ((chunk = this.read()) !== null) {\n          if (file.writable) file.write(chunk);\n\n          // if callback was requested, also push it to resp.body\n          if (resp.body) resp.body.push(chunk);\n        }\n      })\n\n      out.file = file;\n    }\n\n    // Only aggregate the full body if a callback was requested.\n    if (callback) {\n      resp.raw   = [];\n      resp.body  = [];\n      resp.bytes = 0;\n\n      // Gather and count the amount of (raw) bytes using a PassThrough stream.\n      var clean_pipe = new stream.PassThrough();\n      resp.pipe(clean_pipe);\n\n      clean_pipe.on('readable', function() {\n        var chunk;\n        while ((chunk = this.read()) != null) {\n          resp.bytes += chunk.length;\n          resp.raw.push(chunk);\n        }\n      })\n\n      // Listen on the 'readable' event to aggregate the chunks, but only if\n      // file output wasn't requested. Otherwise we'd have two stream readers.\n      if (!config.output || resp.statusCode != 200) {\n        out.on('readable', function() {\n          var chunk;\n          while ((chunk = this.read()) !== null) {\n            // We're either pushing buffers or objects, never strings.\n            if (typeof chunk == 'string') chunk = Buffer.from(chunk);\n\n            // Push all chunks to resp.body. We'll bind them in resp.end().\n            resp.body.push(chunk);\n          }\n        })\n      }\n    }\n\n    // And set the .body property once all data is in.\n    out.on('end', function() {\n      if (resp.body) { // callback mode\n\n        // we want to be able to access to the raw data later, so keep a reference.\n        resp.raw = Buffer.concat(resp.raw);\n\n        // if parse was successful, we should have an array with one object\n        if (resp.body[0] !== undefined && !Buffer.isBuffer(resp.body[0])) {\n\n          // that's our body right there.\n          resp.body = resp.body[0];\n\n          // set the parser property on our response. we may want to check.\n          if (out.parser) resp.parser = out.parser;\n\n        } else { // we got one or several buffers. string or binary.\n          resp.body = Buffer.concat(resp.body);\n\n          // if we're here and parsed is true, it means we tried to but it didn't work.\n          // so given that we got a text response, let's stringify it.\n          if (text_response || out.parser) {\n            resp.body = resp.body.toString();\n          }\n        }\n      }\n\n      // if an output file is being written to, make sure the callback\n      // is triggered after all data has been written to it.\n      if (out.file) {\n        out.file.on('close', function() {\n          done(null, resp, resp.body);\n        })\n      } else { // elvis has left the building.\n        done(null, resp, resp.body);\n      }\n\n    });\n\n  }); // end request call\n\n  // unless open_timeout was disabled, set a timeout to abort the request.\n  set_timeout('open', config.open_timeout);\n\n  // handle errors on the request object. things might get bumpy.\n  request.on('error', had_error);\n\n  // make sure timer is cleared if request is aborted (issue #257)\n  request.once('abort', function() {\n    if (timer) clearTimeout(timer);\n  })\n\n  // handle socket 'end' event to ensure we don't get delayed EPIPE errors.\n  request.once('socket', function(socket) {\n    if (socket.connecting) {\n      socket.once('connect', function() {\n        set_timeout('response', config.response_timeout);\n      })\n    } else {\n      set_timeout('response', config.response_timeout);\n    }\n\n    // console.log(socket);\n    if (!socket.on_socket_end) {\n      socket.on_socket_end = on_socket_end;\n      socket.once('end', function() { process.nextTick(on_socket_end.bind(socket)) });\n    }\n  })\n\n  if (post_data) {\n    if (is_stream(post_data)) {\n      post_data.pipe(request);\n    } else {\n      request.write(post_data, config.encoding);\n      request.end();\n    }\n  } else {\n    request.end();\n  }\n\n  out.request = request;\n  return out;\n}\n\n//////////////////////////////////////////\n// exports\n\nif (typeof Promise !== 'undefined') {\n  module.exports = function() {\n    var verb, args = [].slice.call(arguments);\n\n    if (args[0].match(/\\.|\\//)) // first argument looks like a URL\n      verb = (args.length > 2) ? 'post' : 'get';\n    else\n      verb = args.shift();\n\n    if (verb.match(/get|head/) && args.length == 2)\n      args.splice(1, 0, null); // assume no data if head/get with two args (url, options)\n\n    return new Promise(function(resolve, reject) {\n      module.exports.request(verb, args[0], args[1], args[2], function(err, resp) {\n        return err ? reject(err) : resolve(resp);\n      });\n    })\n  }\n}\n\nmodule.exports.version = version;\n\nmodule.exports.defaults = function(obj) {\n  for (var key in obj) {\n    var target_key = aliased.options[key] || key;\n\n    if (defaults.hasOwnProperty(target_key) && typeof obj[key] != 'undefined') {\n      if (target_key != 'parse_response' && target_key != 'proxy') {\n        // ensure type matches the original, except for proxy/parse_response that can be null/bool or string\n        var valid_type = defaults[target_key].constructor.name;\n\n        if (obj[key].constructor.name != valid_type)\n          throw new TypeError('Invalid type for ' + key + ', should be ' + valid_type);\n      }\n      defaults[target_key] = obj[key];\n    } else {\n      throw new Error('Invalid property for defaults:' + target_key);\n    }\n  }\n\n  return defaults;\n}\n\n'head get'.split(' ').forEach(function(method) {\n  module.exports[method] = function(uri, options, callback) {\n    return new Needle(method, uri, null, options, callback).start();\n  }\n})\n\n'post put patch delete'.split(' ').forEach(function(method) {\n  module.exports[method] = function(uri, data, options, callback) {\n    return new Needle(method, uri, data, options, callback).start();\n  }\n})\n\nmodule.exports.request = function(method, uri, data, opts, callback) {\n  return new Needle(method, uri, data, opts, callback).start();\n};\n", "const isUrlRe = /^(?:https?:)?\\/\\//i;\nimport url from 'url';\nlet request;\nimport AbstractFileManager from '../less/environment/abstract-file-manager.js';\nimport logger from '../less/logger';\n\nconst UrlFileManager = function() {}\nUrlFileManager.prototype = Object.assign(new AbstractFileManager(), {\n    supports(filename, currentDirectory, options, environment) {\n        return isUrlRe.test( filename ) || isUrlRe.test(currentDirectory);\n    },\n\n    loadFile(filename, currentDirectory, options, environment) {\n        return new Promise((fulfill, reject) => {\n            if (request === undefined) {\n                try { request = require('needle'); }\n                catch (e) { request = null; }\n            }\n            if (!request) {\n                reject({ type: 'File', message: 'optional dependency \\'native-request\\' required to import over http(s)\\n' });\n                return;\n            }\n\n            let urlStr = isUrlRe.test( filename ) ? filename : url.resolve(currentDirectory, filename);\n\n            /** native-request currently has a bug */\n            const hackUrlStr = urlStr.indexOf('?') === -1 ? urlStr + '?' : urlStr\n\n            request.get(hackUrlStr, { follow_max: 5 }, (err, resp, body) => {\n                if (err || resp.statusCode >= 400) {\n                    const message = resp.statusCode === 404\n                        ? `resource '${urlStr}' was not found\\n`\n                        : `resource '${urlStr}' gave this Error:\\n  ${err || resp.statusMessage || resp.statusCode}\\n`;\n                    reject({ type: 'File', message });\n                    return;\n                }\n                if (resp.statusCode >= 300) {\n                    reject({ type: 'File', message: `resource '${urlStr}' caused too many redirects` });\n                    return;\n                }\n                body = body.toString('utf8');\n                if (!body) {\n                    logger.warn(`Warning: Empty body (HTTP ${resp.statusCode}) returned by \"${urlStr}\"`);\n                }\n                fulfill({ contents: body || '', filename: urlStr });\n            });\n        });\n    }\n});\n\nexport default UrlFileManager;\n", "/**\n * @todo Document why this abstraction exists, and the relationship between\n *       environment, file managers, and plugin manager\n */\n\nimport logger from '../logger';\n\nclass Environment {\n    constructor(externalEnvironment, fileManagers) {\n        this.fileManagers = fileManagers || [];\n        externalEnvironment = externalEnvironment || {};\n\n        const optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\n        const requiredFunctions = [];\n        const functions = requiredFunctions.concat(optionalFunctions);\n\n        for (let i = 0; i < functions.length; i++) {\n            const propName = functions[i];\n            const environmentFunc = externalEnvironment[propName];\n            if (environmentFunc) {\n                this[propName] = environmentFunc.bind(externalEnvironment);\n            } else if (i < requiredFunctions.length) {\n                this.warn(`missing required function in environment - ${propName}`);\n            }\n        }\n    }\n\n    getFileManager(filename, currentDirectory, options, environment, isSync) {\n\n        if (!filename) {\n            logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\n        }\n        if (currentDirectory == null) {\n            logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\n        }\n\n        let fileManagers = this.fileManagers;\n        if (options.pluginManager) {\n            fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n        }\n        for (let i = fileManagers.length - 1; i >= 0 ; i--) {\n            const fileManager = fileManagers[i];\n            if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\n                return fileManager;\n            }\n        }\n        return null;\n    }\n\n    addFileManager(fileManager) {\n        this.fileManagers.push(fileManager);\n    }\n\n    clearFileManagers() {\n        this.fileManagers = [];\n    }\n}\n\nexport default Environment;\n", "export default {\n    'aliceblue':'#f0f8ff',\n    'antiquewhite':'#faebd7',\n    'aqua':'#00ffff',\n    'aquamarine':'#7fffd4',\n    'azure':'#f0ffff',\n    'beige':'#f5f5dc',\n    'bisque':'#ffe4c4',\n    'black':'#000000',\n    'blanchedalmond':'#ffebcd',\n    'blue':'#0000ff',\n    'blueviolet':'#8a2be2',\n    'brown':'#a52a2a',\n    'burlywood':'#deb887',\n    'cadetblue':'#5f9ea0',\n    'chartreuse':'#7fff00',\n    'chocolate':'#d2691e',\n    'coral':'#ff7f50',\n    'cornflowerblue':'#6495ed',\n    'cornsilk':'#fff8dc',\n    'crimson':'#dc143c',\n    'cyan':'#00ffff',\n    'darkblue':'#00008b',\n    'darkcyan':'#008b8b',\n    'darkgoldenrod':'#b8860b',\n    'darkgray':'#a9a9a9',\n    'darkgrey':'#a9a9a9',\n    'darkgreen':'#006400',\n    'darkkhaki':'#bdb76b',\n    'darkmagenta':'#8b008b',\n    'darkolivegreen':'#556b2f',\n    'darkorange':'#ff8c00',\n    'darkorchid':'#9932cc',\n    'darkred':'#8b0000',\n    'darksalmon':'#e9967a',\n    'darkseagreen':'#8fbc8f',\n    'darkslateblue':'#483d8b',\n    'darkslategray':'#2f4f4f',\n    'darkslategrey':'#2f4f4f',\n    'darkturquoise':'#00ced1',\n    'darkviolet':'#9400d3',\n    'deeppink':'#ff1493',\n    'deepskyblue':'#00bfff',\n    'dimgray':'#696969',\n    'dimgrey':'#696969',\n    'dodgerblue':'#1e90ff',\n    'firebrick':'#b22222',\n    'floralwhite':'#fffaf0',\n    'forestgreen':'#228b22',\n    'fuchsia':'#ff00ff',\n    'gainsboro':'#dcdcdc',\n    'ghostwhite':'#f8f8ff',\n    'gold':'#ffd700',\n    'goldenrod':'#daa520',\n    'gray':'#808080',\n    'grey':'#808080',\n    'green':'#008000',\n    'greenyellow':'#adff2f',\n    'honeydew':'#f0fff0',\n    'hotpink':'#ff69b4',\n    'indianred':'#cd5c5c',\n    'indigo':'#4b0082',\n    'ivory':'#fffff0',\n    'khaki':'#f0e68c',\n    'lavender':'#e6e6fa',\n    'lavenderblush':'#fff0f5',\n    'lawngreen':'#7cfc00',\n    'lemonchiffon':'#fffacd',\n    'lightblue':'#add8e6',\n    'lightcoral':'#f08080',\n    'lightcyan':'#e0ffff',\n    'lightgoldenrodyellow':'#fafad2',\n    'lightgray':'#d3d3d3',\n    'lightgrey':'#d3d3d3',\n    'lightgreen':'#90ee90',\n    'lightpink':'#ffb6c1',\n    'lightsalmon':'#ffa07a',\n    'lightseagreen':'#20b2aa',\n    'lightskyblue':'#87cefa',\n    'lightslategray':'#778899',\n    'lightslategrey':'#778899',\n    'lightsteelblue':'#b0c4de',\n    'lightyellow':'#ffffe0',\n    'lime':'#00ff00',\n    'limegreen':'#32cd32',\n    'linen':'#faf0e6',\n    'magenta':'#ff00ff',\n    'maroon':'#800000',\n    'mediumaquamarine':'#66cdaa',\n    'mediumblue':'#0000cd',\n    'mediumorchid':'#ba55d3',\n    'mediumpurple':'#9370d8',\n    'mediumseagreen':'#3cb371',\n    'mediumslateblue':'#7b68ee',\n    'mediumspringgreen':'#00fa9a',\n    'mediumturquoise':'#48d1cc',\n    'mediumvioletred':'#c71585',\n    'midnightblue':'#191970',\n    'mintcream':'#f5fffa',\n    'mistyrose':'#ffe4e1',\n    'moccasin':'#ffe4b5',\n    'navajowhite':'#ffdead',\n    'navy':'#000080',\n    'oldlace':'#fdf5e6',\n    'olive':'#808000',\n    'olivedrab':'#6b8e23',\n    'orange':'#ffa500',\n    'orangered':'#ff4500',\n    'orchid':'#da70d6',\n    'palegoldenrod':'#eee8aa',\n    'palegreen':'#98fb98',\n    'paleturquoise':'#afeeee',\n    'palevioletred':'#d87093',\n    'papayawhip':'#ffefd5',\n    'peachpuff':'#ffdab9',\n    'peru':'#cd853f',\n    'pink':'#ffc0cb',\n    'plum':'#dda0dd',\n    'powderblue':'#b0e0e6',\n    'purple':'#800080',\n    'rebeccapurple':'#663399',\n    'red':'#ff0000',\n    'rosybrown':'#bc8f8f',\n    'royalblue':'#4169e1',\n    'saddlebrown':'#8b4513',\n    'salmon':'#fa8072',\n    'sandybrown':'#f4a460',\n    'seagreen':'#2e8b57',\n    'seashell':'#fff5ee',\n    'sienna':'#a0522d',\n    'silver':'#c0c0c0',\n    'skyblue':'#87ceeb',\n    'slateblue':'#6a5acd',\n    'slategray':'#708090',\n    'slategrey':'#708090',\n    'snow':'#fffafa',\n    'springgreen':'#00ff7f',\n    'steelblue':'#4682b4',\n    'tan':'#d2b48c',\n    'teal':'#008080',\n    'thistle':'#d8bfd8',\n    'tomato':'#ff6347',\n    'turquoise':'#40e0d0',\n    'violet':'#ee82ee',\n    'wheat':'#f5deb3',\n    'white':'#ffffff',\n    'whitesmoke':'#f5f5f5',\n    'yellow':'#ffff00',\n    'yellowgreen':'#9acd32'\n};", "export default {\n    length: {\n        'm': 1,\n        'cm': 0.01,\n        'mm': 0.001,\n        'in': 0.0254,\n        'px': 0.0254 / 96,\n        'pt': 0.0254 / 72,\n        'pc': 0.0254 / 72 * 12\n    },\n    duration: {\n        's': 1,\n        'ms': 0.001\n    },\n    angle: {\n        'rad': 1 / (2 * Math.PI),\n        'deg': 1 / 360,\n        'grad': 1 / 400,\n        'turn': 1\n    }\n};", "import colors from './colors';\nimport unitConversions from './unit-conversions';\n\nexport default { colors, unitConversions };\n", "/**\n * The reason why Node is a class and other nodes simply do not extend\n * from Node (since we're transpiling) is due to this issue:\n * \n * https://github.com/less/less.js/issues/3434\n */\nclass Node {\n    constructor() {\n        this.parent = null;\n        this.visibilityBlocks = undefined;\n        this.nodeVisible = undefined;\n        this.rootNode = null;\n        this.parsed = null;\n\n        const self = this;\n        Object.defineProperty(this, 'currentFileInfo', {\n            get: function() { return self.fileInfo(); }\n        });\n        Object.defineProperty(this, 'index', {\n            get: function() { return self.getIndex(); }\n        });\n\n    }\n\n    setParent(nodes, parent) {\n        function set(node) {\n            if (node && node instanceof Node) {\n                node.parent = parent;\n            }\n        }\n        if (Array.isArray(nodes)) {\n            nodes.forEach(set);\n        }\n        else {\n            set(nodes);\n        }\n    }\n\n    getIndex() {\n        return this._index || (this.parent && this.parent.getIndex()) || 0;\n    }\n\n    fileInfo() {\n        return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\n    }\n\n    isRulesetLike() { return false; }\n\n    toCSS(context) {\n        const strs = [];\n        this.genCSS(context, {\n            add: function(chunk, fileInfo, index) {\n                strs.push(chunk);\n            },\n            isEmpty: function () {\n                return strs.length === 0;\n            }\n        });\n        return strs.join('');\n    }\n\n    genCSS(context, output) {\n        output.add(this.value);\n    }\n\n    accept(visitor) {\n        this.value = visitor.visit(this.value);\n    }\n\n    eval() { return this; }\n\n    _operate(context, op, a, b) {\n        switch (op) {\n            case '+': return a + b;\n            case '-': return a - b;\n            case '*': return a * b;\n            case '/': return a / b;\n        }\n    }\n\n    fround(context, value) {\n        const precision = context && context.numPrecision;\n        // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\n        return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\n    }\n\n    static compare(a, b) {\n        /* returns:\n         -1: a < b\n         0: a = b\n         1: a > b\n         and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n\n        if ((a.compare) &&\n            // for \"symmetric results\" force toCSS-based comparison\n            // of Quoted or Anonymous if either value is one of those\n            !(b.type === 'Quoted' || b.type === 'Anonymous')) {\n            return a.compare(b);\n        } else if (b.compare) {\n            return -b.compare(a);\n        } else if (a.type !== b.type) {\n            return undefined;\n        }\n\n        a = a.value;\n        b = b.value;\n        if (!Array.isArray(a)) {\n            return a === b ? 0 : undefined;\n        }\n        if (a.length !== b.length) {\n            return undefined;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (Node.compare(a[i], b[i]) !== 0) {\n                return undefined;\n            }\n        }\n        return 0;\n    }\n\n    static numericCompare(a, b) {\n        return a  <  b ? -1\n            : a === b ?  0\n                : a  >  b ?  1 : undefined;\n    }\n\n    // Returns true if this node represents root of ast imported by reference\n    blocksVisibility() {\n        if (this.visibilityBlocks == null) {\n            this.visibilityBlocks = 0;\n        }\n        return this.visibilityBlocks !== 0;\n    }\n\n    addVisibilityBlock() {\n        if (this.visibilityBlocks == null) {\n            this.visibilityBlocks = 0;\n        }\n        this.visibilityBlocks = this.visibilityBlocks + 1;\n    }\n\n    removeVisibilityBlock() {\n        if (this.visibilityBlocks == null) {\n            this.visibilityBlocks = 0;\n        }\n        this.visibilityBlocks = this.visibilityBlocks - 1;\n    }\n\n    // Turns on node visibility - if called node will be shown in output regardless\n    // of whether it comes from import by reference or not\n    ensureVisibility() {\n        this.nodeVisible = true;\n    }\n\n    // Turns off node visibility - if called node will NOT be shown in output regardless\n    // of whether it comes from import by reference or not\n    ensureInvisibility() {\n        this.nodeVisible = false;\n    }\n\n    // return values:\n    // false - the node must not be visible\n    // true - the node must be visible\n    // undefined or null - the node has the same visibility as its parent\n    isVisible() {\n        return this.nodeVisible;\n    }\n\n    visibilityInfo() {\n        return {\n            visibilityBlocks: this.visibilityBlocks,\n            nodeVisible: this.nodeVisible\n        };\n    }\n\n    copyVisibilityInfo(info) {\n        if (!info) {\n            return;\n        }\n        this.visibilityBlocks = info.visibilityBlocks;\n        this.nodeVisible = info.nodeVisible;\n    }\n}\n\nexport default Node;\n", "import Node from './node';\nimport colors from '../data/colors';\n\n//\n// RGB Colors - #ff0014, #eee\n//\nconst Color = function(rgb, a, originalForm) {\n    const self = this;\n    //\n    // The end goal here, is to parse the arguments\n    // into an integer triplet, such as `128, 255, 0`\n    //\n    // This facilitates operations and conversions.\n    //\n    if (Array.isArray(rgb)) {\n        this.rgb = rgb;\n    } else if (rgb.length >= 6) {\n        this.rgb = [];\n        rgb.match(/.{2}/g).map(function (c, i) {\n            if (i < 3) {\n                self.rgb.push(parseInt(c, 16));\n            } else {\n                self.alpha = (parseInt(c, 16)) / 255;\n            }\n        });\n    } else {\n        this.rgb = [];\n        rgb.split('').map(function (c, i) {\n            if (i < 3) {\n                self.rgb.push(parseInt(c + c, 16));\n            } else {\n                self.alpha = (parseInt(c + c, 16)) / 255;\n            }\n        });\n    }\n    this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\n    if (typeof originalForm !== 'undefined') {\n        this.value = originalForm;\n    }\n}\n\nColor.prototype = Object.assign(new Node(), {\n    type: 'Color',\n\n    luma() {\n        let r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\n\n        r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\n        g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\n        b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\n\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    },\n\n    genCSS(context, output) {\n        output.add(this.toCSS(context));\n    },\n\n    toCSS(context, doNotCompress) {\n        const compress = context && context.compress && !doNotCompress;\n        let color;\n        let alpha;\n        let colorFunction;\n        let args = [];\n\n        // `value` is set if this color was originally\n        // converted from a named color string so we need\n        // to respect this and try to output named color too.\n        alpha = this.fround(context, this.alpha);\n\n        if (this.value) {\n            if (this.value.indexOf('rgb') === 0) {\n                if (alpha < 1) {\n                    colorFunction = 'rgba';\n                }\n            } else if (this.value.indexOf('hsl') === 0) {\n                if (alpha < 1) {\n                    colorFunction = 'hsla';\n                } else {\n                    colorFunction = 'hsl';\n                }\n            } else {\n                return this.value;\n            }\n        } else {\n            if (alpha < 1) {\n                colorFunction = 'rgba';\n            }\n        }\n\n        switch (colorFunction) {\n            case 'rgba':\n                args = this.rgb.map(function (c) {\n                    return clamp(Math.round(c), 255);\n                }).concat(clamp(alpha, 1));\n                break;\n            case 'hsla':\n                args.push(clamp(alpha, 1));\n            case 'hsl':\n                color = this.toHSL();\n                args = [\n                    this.fround(context, color.h),\n                    `${this.fround(context, color.s * 100)}%`,\n                    `${this.fround(context, color.l * 100)}%`\n                ].concat(args);\n        }\n\n        if (colorFunction) {\n            // Values are capped between `0` and `255`, rounded and zero-padded.\n            return `${colorFunction}(${args.join(`,${compress ? '' : ' '}`)})`;\n        }\n\n        color = this.toRGB();\n\n        if (compress) {\n            const splitcolor = color.split('');\n\n            // Convert color to short format\n            if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\n                color = `#${splitcolor[1]}${splitcolor[3]}${splitcolor[5]}`;\n            }\n        }\n\n        return color;\n    },\n\n    //\n    // Operations have to be done per-channel, if not,\n    // channels will spill onto each other. Once we have\n    // our result, in the form of an integer triplet,\n    // we create a new Color node to hold the result.\n    //\n    operate(context, op, other) {\n        const rgb = new Array(3);\n        const alpha = this.alpha * (1 - other.alpha) + other.alpha;\n        for (let c = 0; c < 3; c++) {\n            rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\n        }\n        return new Color(rgb, alpha);\n    },\n\n    toRGB() {\n        return toHex(this.rgb);\n    },\n\n    toHSL() {\n        const r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\n\n        const max = Math.max(r, g, b), min = Math.min(r, g, b);\n        let h;\n        let s;\n        const l = (max + min) / 2;\n        const d = max - min;\n\n        if (max === min) {\n            h = s = 0;\n        } else {\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n            switch (max) {\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2;               break;\n                case b: h = (r - g) / d + 4;               break;\n            }\n            h /= 6;\n        }\n        return { h: h * 360, s, l, a };\n    },\n\n    // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n    toHSV() {\n        const r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\n\n        const max = Math.max(r, g, b), min = Math.min(r, g, b);\n        let h;\n        let s;\n        const v = max;\n\n        const d = max - min;\n        if (max === 0) {\n            s = 0;\n        } else {\n            s = d / max;\n        }\n\n        if (max === min) {\n            h = 0;\n        } else {\n            switch (max) {\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2; break;\n                case b: h = (r - g) / d + 4; break;\n            }\n            h /= 6;\n        }\n        return { h: h * 360, s, v, a };\n    },\n\n    toARGB() {\n        return toHex([this.alpha * 255].concat(this.rgb));\n    },\n\n    compare(x) {\n        return (x.rgb &&\n            x.rgb[0] === this.rgb[0] &&\n            x.rgb[1] === this.rgb[1] &&\n            x.rgb[2] === this.rgb[2] &&\n            x.alpha  === this.alpha) ? 0 : undefined;\n    }\n});\n\nColor.fromKeyword = function(keyword) {\n    let c;\n    const key = keyword.toLowerCase();\n    if (colors.hasOwnProperty(key)) {\n        c = new Color(colors[key].slice(1));\n    }\n    else if (key === 'transparent') {\n        c = new Color([0, 0, 0], 0);\n    }\n\n    if (c) {\n        c.value = keyword;\n        return c;\n    }\n};\n\nfunction clamp(v, max) {\n    return Math.min(Math.max(v, 0), max);\n}\n\nfunction toHex(v) {\n    return `#${v.map(function (c) {\n        c = clamp(Math.round(c), 255);\n        return (c < 16 ? '0' : '') + c.toString(16);\n    }).join('')}`;\n}\n\nexport default Color;\n", "import Node from './node';\n\nconst Paren = function(node) {\n    this.value = node;\n};\n\nParen.prototype = Object.assign(new Node(), {\n    type: 'Paren',\n\n    genCSS(context, output) {\n        output.add('(');\n        this.value.genCSS(context, output);\n        output.add(')');\n    },\n\n    eval(context) {\n        return new Paren(this.value.eval(context));\n    }\n});\n\nexport default Paren;\n", "import Node from './node';\nconst _noSpaceCombinators = {\n    '': true,\n    ' ': true,\n    '|': true\n};\n\nconst Combinator = function(value) {\n    if (value === ' ') {\n        this.value = ' ';\n        this.emptyOrWhitespace = true;\n    } else {\n        this.value = value ? value.trim() : '';\n        this.emptyOrWhitespace = this.value === '';\n    }\n}\n\nCombinator.prototype = Object.assign(new Node(), {\n    type: 'Combinator',\n\n    genCSS(context, output) {\n        const spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\n        output.add(spaceOrEmpty + this.value + spaceOrEmpty);\n    }\n});\n\nexport default Combinator;\n", "import Node from './node';\nimport Paren from './paren';\nimport Combinator from './combinator';\n\nconst Element = function(combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\n    this.combinator = combinator instanceof Combinator ?\n        combinator : new Combinator(combinator);\n\n    if (typeof value === 'string') {\n        this.value = value.trim();\n    } else if (value) {\n        this.value = value;\n    } else {\n        this.value = '';\n    }\n    this.isVariable = isVariable;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.combinator, this);\n}\n\nElement.prototype = Object.assign(new Node(), {\n    type: 'Element',\n\n    accept(visitor) {\n        const value = this.value;\n        this.combinator = visitor.visit(this.combinator);\n        if (typeof value === 'object') {\n            this.value = visitor.visit(value);\n        }\n    },\n\n    eval(context) {\n        return new Element(this.combinator,\n            this.value.eval ? this.value.eval(context) : this.value,\n            this.isVariable,\n            this.getIndex(),\n            this.fileInfo(), this.visibilityInfo());\n    },\n\n    clone() {\n        return new Element(this.combinator,\n            this.value,\n            this.isVariable,\n            this.getIndex(),\n            this.fileInfo(), this.visibilityInfo());\n    },\n\n    genCSS(context, output) {\n        output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\n    },\n\n    toCSS(context) {\n        context = context || {};\n        let value = this.value;\n        const firstSelector = context.firstSelector;\n        if (value instanceof Paren) {\n            // selector in parens should not be affected by outer selector\n            // flags (breaks only interpolated selectors - see #1973)\n            context.firstSelector = true;\n        }\n        value = value.toCSS ? value.toCSS(context) : value;\n        context.firstSelector = firstSelector;\n        if (value === '' && this.combinator.value.charAt(0) === '&') {\n            return '';\n        } else {\n            return this.combinator.toCSS(context) + value;\n        }\n    }\n});\n\nexport default Element;\n", "\nexport const Math = {\n    ALWAYS: 0,\n    PARENS_DIVISION: 1,\n    PARENS: 2\n    // removed - STRICT_LEGACY: 3\n};\n\nexport const RewriteUrls = {\n    OFF: 0,\n    LOCAL: 1,\n    ALL: 2\n};", "import { isArray, isPlainObject } from 'is-what';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nfunction assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n    var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n        ? 'enumerable'\r\n        : 'nonenumerable';\r\n    if (propType === 'enumerable')\r\n        carry[key] = newVal;\r\n    if (includeNonenumerable && propType === 'nonenumerable') {\r\n        Object.defineProperty(carry, key, {\r\n            value: newVal,\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n        });\r\n    }\r\n}\r\n/**\r\n * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n *\r\n * @export\r\n * @template T\r\n * @param {T} target Target can be anything\r\n * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n * @returns {T} the target with replaced values\r\n * @export\r\n */\r\nfunction copy(target, options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (isArray(target))\r\n        return target.map(function (i) { return copy(i, options); });\r\n    if (!isPlainObject(target))\r\n        return target;\r\n    var props = Object.getOwnPropertyNames(target);\r\n    var symbols = Object.getOwnPropertySymbols(target);\r\n    return __spreadArrays(props, symbols).reduce(function (carry, key) {\r\n        if (isArray(options.props) && !options.props.includes(key)) {\r\n            return carry;\r\n        }\r\n        var val = target[key];\r\n        var newVal = copy(val, options);\r\n        assignProp(carry, key, newVal, target, options.nonenumerable);\r\n        return carry;\r\n    }, {});\r\n}\n\nexport { copy };\n", "/* jshint proto: true */\nimport * as Constants from './constants';\nimport { copy } from 'copy-anything';\n\nexport function getLocation(index, inputStream) {\n    let n = index + 1;\n    let line = null;\n    let column = -1;\n\n    while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\n        column++;\n    }\n\n    if (typeof index === 'number') {\n        line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\n    }\n\n    return {\n        line,\n        column\n    };\n}\n\nexport function copyArray(arr) {\n    let i;\n    const length = arr.length;\n    const copy = new Array(length);\n\n    for (i = 0; i < length; i++) {\n        copy[i] = arr[i];\n    }\n    return copy;\n}\n\nexport function clone(obj) {\n    const cloned = {};\n    for (const prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            cloned[prop] = obj[prop];\n        }\n    }\n    return cloned;\n}\n\nexport function defaults(obj1, obj2) {\n    let newObj = obj2 || {};\n    if (!obj2._defaults) {\n        newObj = {};\n        const defaults = copy(obj1);\n        newObj._defaults = defaults;\n        const cloned = obj2 ? copy(obj2) : {};\n        Object.assign(newObj, defaults, cloned);\n    }\n    return newObj;\n}\n\nexport function copyOptions(obj1, obj2) {\n    if (obj2 && obj2._defaults) {\n        return obj2;\n    }\n    const opts = defaults(obj1, obj2);\n    if (opts.strictMath) {\n        opts.math = Constants.Math.PARENS;\n    }\n    // Back compat with changed relativeUrls option\n    if (opts.relativeUrls) {\n        opts.rewriteUrls = Constants.RewriteUrls.ALL;\n    }\n    if (typeof opts.math === 'string') {\n        switch (opts.math.toLowerCase()) {\n            case 'always':\n                opts.math = Constants.Math.ALWAYS;\n                break;\n            case 'parens-division':\n                opts.math = Constants.Math.PARENS_DIVISION;\n                break;\n            case 'strict':\n            case 'parens':\n                opts.math = Constants.Math.PARENS;\n                break;\n            default:\n                opts.math = Constants.Math.PARENS;\n        }\n    }\n    if (typeof opts.rewriteUrls === 'string') {\n        switch (opts.rewriteUrls.toLowerCase()) {\n            case 'off':\n                opts.rewriteUrls = Constants.RewriteUrls.OFF;\n                break;\n            case 'local':\n                opts.rewriteUrls = Constants.RewriteUrls.LOCAL;\n                break;\n            case 'all':\n                opts.rewriteUrls = Constants.RewriteUrls.ALL;\n                break;\n        }\n    }\n    return opts;\n}\n\nexport function merge(obj1, obj2) {\n    for (const prop in obj2) {\n        if (obj2.hasOwnProperty(prop)) {\n            obj1[prop] = obj2[prop];\n        }\n    }\n    return obj1;\n}\n\nexport function flattenArray(arr, result = []) {\n    for (let i = 0, length = arr.length; i < length; i++) {\n        const value = arr[i];\n        if (Array.isArray(value)) {\n            flattenArray(value, result);\n        } else {\n            if (value !== undefined) {\n                result.push(value);\n            }\n        }\n    }\n    return result;\n}", "import * as utils from './utils';\n\nconst anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\n\n/**\n * This is a centralized class of any error that could be thrown internally (mostly by the parser).\n * Besides standard .message it keeps some additional data like a path to the file where the error\n * occurred along with line and column numbers.\n *\n * @class\n * @extends Error\n * @type {module.LessError}\n *\n * @prop {string} type\n * @prop {string} filename\n * @prop {number} index\n * @prop {number} line\n * @prop {number} column\n * @prop {number} callLine\n * @prop {number} callExtract\n * @prop {string[]} extract\n *\n * @param {Object} e              - An error object to wrap around or just a descriptive object\n * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\n * @param {string} [currentFilename]\n */\nconst LessError = function(e, fileContentMap, currentFilename) {\n    Error.call(this);\n\n    const filename = e.filename || currentFilename;\n\n    this.message = e.message;\n    this.stack = e.stack;\n\n    if (fileContentMap && filename) {\n        const input = fileContentMap.contents[filename];\n        const loc = utils.getLocation(e.index, input);\n        var line = loc.line;\n        const col  = loc.column;\n        const callLine = e.call && utils.getLocation(e.call, input).line;\n        const lines = input ? input.split('\\n') : '';\n\n        this.type = e.type || 'Syntax';\n        this.filename = filename;\n        this.index = e.index;\n        this.line = typeof line === 'number' ? line + 1 : null;\n        this.column = col;\n\n        if (!this.line && this.stack) {\n            const found = this.stack.match(anonymousFunc);\n\n            /**\n             * We have to figure out how this environment stringifies anonymous functions\n             * so we can correctly map plugin errors.\n             * \n             * Note, in Node 8, the output of anonymous funcs varied based on parameters\n             * being present or not, so we inject dummy params.\n             */\n            const func = new Function('a', 'throw new Error()');\n            let lineAdjust = 0;\n            try {\n                func();\n            } catch (e) {\n                const match = e.stack.match(anonymousFunc);\n                var line = parseInt(match[2]);\n                lineAdjust = 1 - line;\n            }\n\n            if (found) {\n                if (found[2]) {\n                    this.line = parseInt(found[2]) + lineAdjust;\n                }\n                if (found[3]) {\n                    this.column = parseInt(found[3]);\n                }\n            }\n        }\n\n        this.callLine = callLine + 1;\n        this.callExtract = lines[callLine];\n\n        this.extract = [\n            lines[this.line - 2],\n            lines[this.line - 1],\n            lines[this.line]\n        ];\n    }\n\n};\n\nif (typeof Object.create === 'undefined') {\n    const F = function () {};\n    F.prototype = Error.prototype;\n    LessError.prototype = new F();\n} else {\n    LessError.prototype = Object.create(Error.prototype);\n}\n\nLessError.prototype.constructor = LessError;\n\n/**\n * An overridden version of the default Object.prototype.toString\n * which uses additional information to create a helpful message.\n *\n * @param {Object} options\n * @returns {string}\n */\nLessError.prototype.toString = function(options) {\n    options = options || {};\n\n    let message = '';\n    const extract = this.extract || [];\n    let error = [];\n    let stylize = function (str) { return str; };\n    if (options.stylize) {\n        const type = typeof options.stylize;\n        if (type !== 'function') {\n            throw Error(`options.stylize should be a function, got a ${type}!`);\n        }\n        stylize = options.stylize;\n    }\n\n    if (this.line !== null) {\n        if (typeof extract[0] === 'string') {\n            error.push(stylize(`${this.line - 1} ${extract[0]}`, 'grey'));\n        }\n\n        if (typeof extract[1] === 'string') {\n            let errorTxt = `${this.line} `;\n            if (extract[1]) {\n                errorTxt += extract[1].slice(0, this.column) +\n                    stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\n                        extract[1].slice(this.column + 1), 'red'), 'inverse');\n            }\n            error.push(errorTxt);\n        }\n\n        if (typeof extract[2] === 'string') {\n            error.push(stylize(`${this.line + 1} ${extract[2]}`, 'grey'));\n        }\n        error = `${error.join('\\n') + stylize('', 'reset')}\\n`;\n    }\n\n    message += stylize(`${this.type}Error: ${this.message}`, 'red');\n    if (this.filename) {\n        message += stylize(' in ', 'red') + this.filename;\n    }\n    if (this.line) {\n        message += stylize(` on line ${this.line}, column ${this.column + 1}:`, 'grey');\n    }\n\n    message += `\\n${error}`;\n\n    if (this.callLine) {\n        message += `${stylize('from ', 'red') + (this.filename || '')}/n`;\n        message += `${stylize(this.callLine, 'grey')} ${this.callExtract}/n`;\n    }\n\n    return message;\n};\n\nexport default LessError;", "import Node from './node';\nimport Element from './element';\nimport LessError from '../less-error';\n\nconst Selector = function(elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\n    this.extendList = extendList;\n    this.condition = condition;\n    this.evaldCondition = !condition;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.elements = this.getElements(elements);\n    this.mixinElements_ = undefined;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.elements, this);\n};\n\nSelector.prototype = Object.assign(new Node(), {\n    type: 'Selector',\n\n    accept(visitor) {\n        if (this.elements) {\n            this.elements = visitor.visitArray(this.elements);\n        }\n        if (this.extendList) {\n            this.extendList = visitor.visitArray(this.extendList);\n        }\n        if (this.condition) {\n            this.condition = visitor.visit(this.condition);\n        }\n    },\n\n    createDerived(elements, extendList, evaldCondition) {\n        elements = this.getElements(elements);\n        const newSelector = new Selector(elements, extendList || this.extendList,\n            null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\n        newSelector.mediaEmpty = this.mediaEmpty;\n        return newSelector;\n    },\n\n    getElements(els) {\n        if (!els) {\n            return [new Element('', '&', false, this._index, this._fileInfo)];\n        }\n        if (typeof els === 'string') {\n            this.parse.parseNode(\n                els, \n                ['selector'],\n                this._index, \n                this._fileInfo, \n                function(err, result) {\n                    if (err) {\n                        throw new LessError({\n                            index: err.index,\n                            message: err.message\n                        }, this.parse.imports, this._fileInfo.filename);\n                    }\n                    els = result[0].elements;\n                });\n        }\n        return els;\n    },\n\n    createEmptySelectors() {\n        const el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\n        sels[0].mediaEmpty = true;\n        return sels;\n    },\n\n    match(other) {\n        const elements = this.elements;\n        const len = elements.length;\n        let olen;\n        let i;\n\n        other = other.mixinElements();\n        olen = other.length;\n        if (olen === 0 || len < olen) {\n            return 0;\n        } else {\n            for (i = 0; i < olen; i++) {\n                if (elements[i].value !== other[i]) {\n                    return 0;\n                }\n            }\n        }\n\n        return olen; // return number of matched elements\n    },\n\n    mixinElements() {\n        if (this.mixinElements_) {\n            return this.mixinElements_;\n        }\n\n        let elements = this.elements.map( function(v) {\n            return v.combinator.value + (v.value.value || v.value);\n        }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\n\n        if (elements) {\n            if (elements[0] === '&') {\n                elements.shift();\n            }\n        } else {\n            elements = [];\n        }\n\n        return (this.mixinElements_ = elements);\n    },\n\n    isJustParentSelector() {\n        return !this.mediaEmpty &&\n            this.elements.length === 1 &&\n            this.elements[0].value === '&' &&\n            (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\n    },\n\n    eval(context) {\n        const evaldCondition = this.condition && this.condition.eval(context);\n        let elements = this.elements;\n        let extendList = this.extendList;\n\n        elements = elements && elements.map(function (e) { return e.eval(context); });\n        extendList = extendList && extendList.map(function(extend) { return extend.eval(context); });\n\n        return this.createDerived(elements, extendList, evaldCondition);\n    },\n\n    genCSS(context, output) {\n        let i, element;\n        if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\n            output.add(' ', this.fileInfo(), this.getIndex());\n        }\n        for (i = 0; i < this.elements.length; i++) {\n            element = this.elements[i];\n            element.genCSS(context, output);\n        }\n    },\n\n    getIsOutput() {\n        return this.evaldCondition;\n    }\n});\n\nexport default Selector;\n", "import Node from './node';\n\nconst Value = function(value) {\n    if (!value) {\n        throw new Error('Value requires an array argument');\n    }\n    if (!Array.isArray(value)) {\n        this.value = [ value ];\n    }\n    else {\n        this.value = value;\n    }\n};\n\nValue.prototype = Object.assign(new Node(), {\n    type: 'Value',\n\n    accept(visitor) {\n        if (this.value) {\n            this.value = visitor.visitArray(this.value);\n        }\n    },\n\n    eval(context) {\n        if (this.value.length === 1) {\n            return this.value[0].eval(context);\n        } else {\n            return new Value(this.value.map(function (v) {\n                return v.eval(context);\n            }));\n        }\n    },\n\n    genCSS(context, output) {\n        let i;\n        for (i = 0; i < this.value.length; i++) {\n            this.value[i].genCSS(context, output);\n            if (i + 1 < this.value.length) {\n                output.add((context && context.compress) ? ',' : ', ');\n            }\n        }\n    }\n});\n\nexport default Value;\n", "import Node from './node';\n\nconst Keyword = function(value) {\n    this.value = value;\n};\n\nKeyword.prototype = Object.assign(new Node(), {\n    type: 'Keyword',\n\n    genCSS(context, output) {\n        if (this.value === '%') { throw { type: 'Syntax', message: 'Invalid % without number' }; }\n        output.add(this.value);\n    }\n});\n\nKeyword.True = new Keyword('true');\nKeyword.False = new Keyword('false');\n\nexport default Keyword;\n", "import Node from './node';\n\nconst Anonymous = function(value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\n    this.value = value;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.mapLines = mapLines;\n    this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\n    this.allowRoot = true;\n    this.copyVisibilityInfo(visibilityInfo);\n}\n\nAnonymous.prototype = Object.assign(new Node(), {\n    type: 'Anonymous',\n    eval() {\n        return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\n    },\n    compare(other) {\n        return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n    },\n    isRulesetLike() {\n        return this.rulesetLike;\n    },\n    genCSS(context, output) {\n        this.nodeVisible = Boolean(this.value);\n        if (this.nodeVisible) {\n            output.add(this.value, this._fileInfo, this._index, this.mapLines);\n        }\n    }\n})\n\nexport default Anonymous;\n", "import Node from './node';\nimport Value from './value';\nimport Keyword from './keyword';\nimport Anonymous from './anonymous';\nimport * as Constants from '../constants';\nconst MATH = Constants.Math;\n\nfunction evalName(context, name) {\n    let value = '';\n    let i;\n    const n = name.length;\n    const output = {add: function (s) {value += s;}};\n    for (i = 0; i < n; i++) {\n        name[i].eval(context).genCSS(context, output);\n    }\n    return value;\n}\n\nconst Declaration = function(name, value, important, merge, index, currentFileInfo, inline, variable) {\n    this.name = name;\n    this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\n    this.important = important ? ` ${important.trim()}` : '';\n    this.merge = merge;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.inline = inline || false;\n    this.variable = (variable !== undefined) ? variable\n        : (name.charAt && (name.charAt(0) === '@'));\n    this.allowRoot = true;\n    this.setParent(this.value, this);\n};\n\nDeclaration.prototype = Object.assign(new Node(), {\n    type: 'Declaration',\n\n    genCSS(context, output) {\n        output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n        try {\n            this.value.genCSS(context, output);\n        }\n        catch (e) {\n            e.index = this._index;\n            e.filename = this._fileInfo.filename;\n            throw e;\n        }\n        output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\n    },\n\n    eval(context) {\n        let mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\n        if (typeof name !== 'string') {\n            // expand 'primitive' name directly to get\n            // things faster (~10% for benchmark.less):\n            name = (name.length === 1) && (name[0] instanceof Keyword) ?\n                name[0].value : evalName(context, name);\n            variable = false; // never treat expanded interpolation as new variable name\n        }\n\n        // @todo remove when parens-division is default\n        if (name === 'font' && context.math === MATH.ALWAYS) {\n            mathBypass = true;\n            prevMath = context.math;\n            context.math = MATH.PARENS_DIVISION;\n        }\n        try {\n            context.importantScope.push({});\n            evaldValue = this.value.eval(context);\n\n            if (!this.variable && evaldValue.type === 'DetachedRuleset') {\n                throw { message: 'Rulesets cannot be evaluated on a property.',\n                    index: this.getIndex(), filename: this.fileInfo().filename };\n            }\n            let important = this.important;\n            const importantResult = context.importantScope.pop();\n            if (!important && importantResult.important) {\n                important = importantResult.important;\n            }\n\n            return new Declaration(name,\n                evaldValue,\n                important,\n                this.merge,\n                this.getIndex(), this.fileInfo(), this.inline,\n                variable);\n        }\n        catch (e) {\n            if (typeof e.index !== 'number') {\n                e.index = this.getIndex();\n                e.filename = this.fileInfo().filename;\n            }\n            throw e;\n        }\n        finally {\n            if (mathBypass) {\n                context.math = prevMath;\n            }\n        }\n    },\n\n    makeImportant() {\n        return new Declaration(this.name,\n            this.value,\n            '!important',\n            this.merge,\n            this.getIndex(), this.fileInfo(), this.inline);\n    }\n});\n\nexport default Declaration;", "class debugInfo {\n    constructor(context, ctx, lineSeparator) {\n        let result = '';\n        if (context.dumpLineNumbers && !context.compress) {\n            switch (context.dumpLineNumbers) {\n                case 'comments':\n                    result = debugInfo.asComment(ctx);\n                    break;\n                case 'mediaquery':\n                    result = debugInfo.asMediaQuery(ctx);\n                    break;\n                case 'all':\n                    result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\n                    break;\n            }\n        }\n        return result;\n    }\n\n    static asComment(ctx) {\n        return `/* line ${ctx.debugInfo.lineNumber}, ${ctx.debugInfo.fileName} */\\n`;\n    }\n\n    static asMediaQuery(ctx) {\n        let filenameWithProtocol = ctx.debugInfo.fileName;\n        if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n            filenameWithProtocol = `file://${filenameWithProtocol}`;\n        }\n        return `@media -sass-debug-info{filename{font-family:${filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\n            if (a == '\\\\') {\n                a = '\\/';\n            }\n            return `\\\\${a}`;\n        })}}line{font-family:\\\\00003${ctx.debugInfo.lineNumber}}}\\n`;\n    }\n}\n\nexport default debugInfo;\n", "import Node from './node';\nimport getDebugInfo from './debug-info';\n\nconst Comment = function(value, isLineComment, index, currentFileInfo) {\n    this.value = value;\n    this.isLineComment = isLineComment;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.allowRoot = true;\n}\n\nComment.prototype = Object.assign(new Node(), {\n    type: 'Comment',\n\n    genCSS(context, output) {\n        if (this.debugInfo) {\n            output.add(getDebugInfo(context, this), this.fileInfo(), this.getIndex());\n        }\n        output.add(this.value);\n    },\n\n    isSilent(context) {\n        const isCompressed = context.compress && this.value[2] !== '!';\n        return this.isLineComment || isCompressed;\n    }\n});\n\nexport default Comment;\n", "const contexts = {};\nexport default contexts;\nimport * as Constants from './constants';\n\nconst copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n    if (!original) { return; }\n\n    for (let i = 0; i < propertiesToCopy.length; i++) {\n        if (original.hasOwnProperty(propertiesToCopy[i])) {\n            destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n        }\n    }\n};\n\n/*\n parse is used whilst parsing\n */\nconst parseCopyProperties = [\n    // options\n    'paths',            // option - unmodified - paths to search for imports on\n    'rewriteUrls',      // option - whether to adjust URL's to be relative\n    'rootpath',         // option - rootpath to append to URL's\n    'strictImports',    // option -\n    'insecure',         // option - whether to allow imports from insecure ssl hosts\n    'dumpLineNumbers',  // option - whether to dump line numbers\n    'compress',         // option - whether to compress\n    'syncImport',       // option - whether to import synchronously\n    'chunkInput',       // option - whether to chunk input. more performant but causes parse issues.\n    'mime',             // browser only - mime type for sheet import\n    'useFileCache',     // browser only - whether to use the per file session cache\n    // context\n    'processImports',   // option & context - whether to process imports. if false then imports will not be imported.\n    // Used by the import manager to stop multiple import visitors being created.\n    'pluginManager'     // Used as the plugin manager for the session\n];\n\ncontexts.Parse = function(options) {\n    copyFromOriginal(options, this, parseCopyProperties);\n\n    if (typeof this.paths === 'string') { this.paths = [this.paths]; }\n};\n\nconst evalCopyProperties = [\n    'paths',             // additional include paths\n    'compress',          // whether to compress\n    'math',              // whether math has to be within parenthesis\n    'strictUnits',       // whether units need to evaluate correctly\n    'sourceMap',         // whether to output a source map\n    'importMultiple',    // whether we are currently importing multiple copies\n    'urlArgs',           // whether to add args into url tokens\n    'javascriptEnabled', // option - whether Inline JavaScript is enabled. if undefined, defaults to false\n    'pluginManager',     // Used as the plugin manager for the session\n    'importantScope',    // used to bubble up !important statements\n    'rewriteUrls'        // option - whether to adjust URL's to be relative\n];\n\ncontexts.Eval = function(options, frames) {\n    copyFromOriginal(options, this, evalCopyProperties);\n\n    if (typeof this.paths === 'string') { this.paths = [this.paths]; }\n\n    this.frames = frames || [];\n    this.importantScope = this.importantScope || [];\n};\n\ncontexts.Eval.prototype.enterCalc = function () {\n    if (!this.calcStack) {\n        this.calcStack = [];\n    }\n    this.calcStack.push(true);\n    this.inCalc = true;\n};\n\ncontexts.Eval.prototype.exitCalc = function () {\n    this.calcStack.pop();\n    if (!this.calcStack.length) {\n        this.inCalc = false;\n    }\n};\n\ncontexts.Eval.prototype.inParenthesis = function () {\n    if (!this.parensStack) {\n        this.parensStack = [];\n    }\n    this.parensStack.push(true);\n};\n\ncontexts.Eval.prototype.outOfParenthesis = function () {\n    this.parensStack.pop();\n};\n\ncontexts.Eval.prototype.inCalc = false;\ncontexts.Eval.prototype.mathOn = true;\ncontexts.Eval.prototype.isMathOn = function (op) {\n    if (!this.mathOn) {\n        return false;\n    }\n    if (op === '/' && this.math !== Constants.Math.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\n        return false;\n    }\n    if (this.math > Constants.Math.PARENS_DIVISION) {\n        return this.parensStack && this.parensStack.length;\n    }\n    return true;\n};\n\ncontexts.Eval.prototype.pathRequiresRewrite = function (path) {\n    const isRelative = this.rewriteUrls === Constants.RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\n\n    return isRelative(path);\n};\n\ncontexts.Eval.prototype.rewritePath = function (path, rootpath) {\n    let newPath;\n\n    rootpath = rootpath ||\u00A0'';\n    newPath = this.normalizePath(rootpath + path);\n\n    // If a path was explicit relative and the rootpath was not an absolute path\n    // we must ensure that the new path is also explicit relative.\n    if (isPathLocalRelative(path) &&\n        isPathRelative(rootpath) &&\n        isPathLocalRelative(newPath) === false) {\n        newPath = `./${newPath}`;\n    }\n\n    return newPath;\n};\n\ncontexts.Eval.prototype.normalizePath = function (path) {\n    const segments = path.split('/').reverse();\n    let segment;\n\n    path = [];\n    while (segments.length !== 0) {\n        segment = segments.pop();\n        switch ( segment ) {\n            case '.':\n                break;\n            case '..':\n                if ((path.length === 0) || (path[path.length - 1] === '..')) {\n                    path.push( segment );\n                } else {\n                    path.pop();\n                }\n                break;\n            default:\n                path.push(segment);\n                break;\n        }\n    }\n\n    return path.join('/');\n};\n\nfunction isPathRelative(path) {\n    return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n}\n\nfunction isPathLocalRelative(path) {\n    return path.charAt(0) === '.';\n}\n\n// todo - do the same for the toCSS ?\n", "function makeRegistry( base ) {\n    return {\n        _data: {},\n        add: function(name, func) {\n            // precautionary case conversion, as later querying of\n            // the registry by function-caller uses lower case as well.\n            name = name.toLowerCase();\n\n            if (this._data.hasOwnProperty(name)) {\n                // TODO warn\n            }\n            this._data[name] = func;\n        },\n        addMultiple: function(functions) {\n            Object.keys(functions).forEach(\n                name => {\n                    this.add(name, functions[name]);\n                });\n        },\n        get: function(name) {\n            return this._data[name] || ( base && base.get( name ));\n        },\n        getLocalFunctions: function() {\n            return this._data;\n        },\n        inherit: function() {\n            return makeRegistry( this );\n        },\n        create: function(base) {\n            return makeRegistry(base);\n        }\n    };\n}\n\nexport default makeRegistry( null );", "import Keyword from '../tree/keyword';\n\nconst defaultFunc = {\n    eval: function () {\n        const v = this.value_;\n        const e = this.error_;\n        if (e) {\n            throw e;\n        }\n        if (v != null) {\n            return v ? Keyword.True : Keyword.False;\n        }\n    },\n    value: function (v) {\n        this.value_ = v;\n    },\n    error: function (e) {\n        this.error_ = e;\n    },\n    reset: function () {\n        this.value_ = this.error_ = null;\n    }\n};\n\nexport default defaultFunc;\n", "import Node from './node';\nimport Declaration from './declaration';\nimport Keyword from './keyword';\nimport Comment from './comment';\nimport Paren from './paren';\nimport Selector from './selector';\nimport Element from './element';\nimport Anonymous from './anonymous';\nimport contexts from '../contexts';\nimport globalFunctionRegistry from '../functions/function-registry';\nimport defaultFunc from '../functions/default';\nimport getDebugInfo from './debug-info';\nimport * as utils from '../utils';\n\nconst Ruleset = function(selectors, rules, strictImports, visibilityInfo) {\n    this.selectors = selectors;\n    this.rules = rules;\n    this._lookups = {};\n    this._variables = null;\n    this._properties = null;\n    this.strictImports = strictImports;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n\n    this.setParent(this.selectors, this);\n    this.setParent(this.rules, this);\n}\n\nRuleset.prototype = Object.assign(new Node(), {\n    type: 'Ruleset',\n    isRuleset: true,\n\n    isRulesetLike() { return true; },\n\n    accept(visitor) {\n        if (this.paths) {\n            this.paths = visitor.visitArray(this.paths, true);\n        } else if (this.selectors) {\n            this.selectors = visitor.visitArray(this.selectors);\n        }\n        if (this.rules && this.rules.length) {\n            this.rules = visitor.visitArray(this.rules);\n        }\n    },\n\n    eval(context) {\n        const that = this;\n        let selectors;\n        let selCnt;\n        let selector;\n        let i;\n        let hasVariable;\n        let hasOnePassingSelector = false;\n\n        if (this.selectors && (selCnt = this.selectors.length)) {\n            selectors = new Array(selCnt);\n            defaultFunc.error({\n                type: 'Syntax',\n                message: 'it is currently only allowed in parametric mixin guards,'\n            });\n\n            for (i = 0; i < selCnt; i++) {\n                selector = this.selectors[i].eval(context);\n                for (var j = 0; j < selector.elements.length; j++) {\n                    if (selector.elements[j].isVariable) {\n                        hasVariable = true;\n                        break;\n                    }\n                }\n                selectors[i] = selector;\n                if (selector.evaldCondition) {\n                    hasOnePassingSelector = true;\n                }\n            }\n\n            if (hasVariable) {\n                const toParseSelectors = new Array(selCnt);\n                for (i = 0; i < selCnt; i++) {\n                    selector = selectors[i];\n                    toParseSelectors[i] = selector.toCSS(context);\n                }\n                this.parse.parseNode(\n                    toParseSelectors.join(','),\n                    [\"selectors\"], \n                    selectors[0].getIndex(), \n                    selectors[0].fileInfo(), \n                    function(err, result) {\n                        if (result) {\n                            selectors = utils.flattenArray(result);\n                        }\n                    });\n            }\n\n            defaultFunc.reset();\n        } else {\n            hasOnePassingSelector = true;\n        }\n\n        let rules = this.rules ? utils.copyArray(this.rules) : null;\n        const ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\n        let rule;\n        let subRule;\n\n        ruleset.originalRuleset = this;\n        ruleset.root = this.root;\n        ruleset.firstRoot = this.firstRoot;\n        ruleset.allowImports = this.allowImports;\n\n        if (this.debugInfo) {\n            ruleset.debugInfo = this.debugInfo;\n        }\n\n        if (!hasOnePassingSelector) {\n            rules.length = 0;\n        }\n\n        // inherit a function registry from the frames stack when possible;\n        // otherwise from the global registry\n        ruleset.functionRegistry = (function (frames) {\n            let i = 0;\n            const n = frames.length;\n            let found;\n            for ( ; i !== n ; ++i ) {\n                found = frames[ i ].functionRegistry;\n                if ( found ) { return found; }\n            }\n            return globalFunctionRegistry;\n        }(context.frames)).inherit();\n\n        // push the current ruleset to the frames stack\n        const ctxFrames = context.frames;\n        ctxFrames.unshift(ruleset);\n\n        // currrent selectors\n        let ctxSelectors = context.selectors;\n        if (!ctxSelectors) {\n            context.selectors = ctxSelectors = [];\n        }\n        ctxSelectors.unshift(this.selectors);\n\n        // Evaluate imports\n        if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\n            ruleset.evalImports(context);\n        }\n\n        // Store the frames around mixin definitions,\n        // so they can be evaluated like closures when the time comes.\n        const rsRules = ruleset.rules;\n        for (i = 0; (rule = rsRules[i]); i++) {\n            if (rule.evalFirst) {\n                rsRules[i] = rule.eval(context);\n            }\n        }\n\n        const mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\n\n        // Evaluate mixin calls.\n        for (i = 0; (rule = rsRules[i]); i++) {\n            if (rule.type === 'MixinCall') {\n                /* jshint loopfunc:true */\n                rules = rule.eval(context).filter(function(r) {\n                    if ((r instanceof Declaration) && r.variable) {\n                        // do not pollute the scope if the variable is\n                        // already there. consider returning false here\n                        // but we need a way to \"return\" variable from mixins\n                        return !(ruleset.variable(r.name));\n                    }\n                    return true;\n                });\n                rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n                i += rules.length - 1;\n                ruleset.resetCache();\n            } else if (rule.type ===  'VariableCall') {\n                /* jshint loopfunc:true */\n                rules = rule.eval(context).rules.filter(function(r) {\n                    if ((r instanceof Declaration) && r.variable) {\n                        // do not pollute the scope at all\n                        return false;\n                    }\n                    return true;\n                });\n                rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n                i += rules.length - 1;\n                ruleset.resetCache();\n            }\n        }\n\n        // Evaluate everything else\n        for (i = 0; (rule = rsRules[i]); i++) {\n            if (!rule.evalFirst) {\n                rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\n            }\n        }\n\n        // Evaluate everything else\n        for (i = 0; (rule = rsRules[i]); i++) {\n            // for rulesets, check if it is a css guard and can be removed\n            if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\n                // check if it can be folded in (e.g. & where)\n                if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\n                    rsRules.splice(i--, 1);\n\n                    for (var j = 0; (subRule = rule.rules[j]); j++) {\n                        if (subRule instanceof Node) {\n                            subRule.copyVisibilityInfo(rule.visibilityInfo());\n                            if (!(subRule instanceof Declaration) || !subRule.variable) {\n                                rsRules.splice(++i, 0, subRule);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // Pop the stack\n        ctxFrames.shift();\n        ctxSelectors.shift();\n\n        if (context.mediaBlocks) {\n            for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\n                context.mediaBlocks[i].bubbleSelectors(selectors);\n            }\n        }\n\n        return ruleset;\n    },\n\n    evalImports(context) {\n        const rules = this.rules;\n        let i;\n        let importRules;\n        if (!rules) { return; }\n\n        for (i = 0; i < rules.length; i++) {\n            if (rules[i].type === 'Import') {\n                importRules = rules[i].eval(context);\n                if (importRules && (importRules.length || importRules.length === 0)) {\n                    rules.splice.apply(rules, [i, 1].concat(importRules));\n                    i += importRules.length - 1;\n                } else {\n                    rules.splice(i, 1, importRules);\n                }\n                this.resetCache();\n            }\n        }\n    },\n\n    makeImportant() {\n        const result = new Ruleset(this.selectors, this.rules.map(function (r) {\n            if (r.makeImportant) {\n                return r.makeImportant();\n            } else {\n                return r;\n            }\n        }), this.strictImports, this.visibilityInfo());\n\n        return result;\n    },\n\n    matchArgs(args) {\n        return !args || args.length === 0;\n    },\n\n    // lets you call a css selector with a guard\n    matchCondition(args, context) {\n        const lastSelector = this.selectors[this.selectors.length - 1];\n        if (!lastSelector.evaldCondition) {\n            return false;\n        }\n        if (lastSelector.condition &&\n            !lastSelector.condition.eval(\n                new contexts.Eval(context,\n                    context.frames))) {\n            return false;\n        }\n        return true;\n    },\n\n    resetCache() {\n        this._rulesets = null;\n        this._variables = null;\n        this._properties = null;\n        this._lookups = {};\n    },\n\n    variables() {\n        if (!this._variables) {\n            this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n                if (r instanceof Declaration && r.variable === true) {\n                    hash[r.name] = r;\n                }\n                // when evaluating variables in an import statement, imports have not been eval'd\n                // so we need to go inside import statements.\n                // guard against root being a string (in the case of inlined less)\n                if (r.type === 'Import' && r.root && r.root.variables) {\n                    const vars = r.root.variables();\n                    for (const name in vars) {\n                        if (vars.hasOwnProperty(name)) {\n                            hash[name] = r.root.variable(name);\n                        }\n                    }\n                }\n                return hash;\n            }, {});\n        }\n        return this._variables;\n    },\n\n    properties() {\n        if (!this._properties) {\n            this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n                if (r instanceof Declaration && r.variable !== true) {\n                    const name = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\n                        r.name[0].value : r.name;\n                    // Properties don't overwrite as they can merge\n                    if (!hash[`$${name}`]) {\n                        hash[`$${name}`] = [ r ];\n                    }\n                    else {\n                        hash[`$${name}`].push(r);\n                    }\n                }\n                return hash;\n            }, {});\n        }\n        return this._properties;\n    },\n\n    variable(name) {\n        const decl = this.variables()[name];\n        if (decl) {\n            return this.parseValue(decl);\n        }\n    },\n\n    property(name) {\n        const decl = this.properties()[name];\n        if (decl) {\n            return this.parseValue(decl);\n        }\n    },\n\n    lastDeclaration() {\n        for (let i = this.rules.length; i > 0; i--) {\n            const decl = this.rules[i - 1];\n            if (decl instanceof Declaration) {\n                return this.parseValue(decl);\n            }\n        }\n    },\n\n    parseValue(toParse) {\n        const self = this;\n        function transformDeclaration(decl) {\n            if (decl.value instanceof Anonymous && !decl.parsed) {\n                if (typeof decl.value.value === 'string') {\n                    this.parse.parseNode(\n                        decl.value.value,\n                        ['value', 'important'], \n                        decl.value.getIndex(), \n                        decl.fileInfo(), \n                        function(err, result) {\n                            if (err) {\n                                decl.parsed = true;\n                            }\n                            if (result) {\n                                decl.value = result[0];\n                                decl.important = result[1] || '';\n                                decl.parsed = true;\n                            }\n                        });\n                } else {\n                    decl.parsed = true;\n                }\n\n                return decl;\n            }\n            else {\n                return decl;\n            }\n        }\n        if (!Array.isArray(toParse)) {\n            return transformDeclaration.call(self, toParse);\n        }\n        else {\n            const nodes = [];\n            toParse.forEach(function(n) {\n                nodes.push(transformDeclaration.call(self, n));\n            });\n            return nodes;\n        }\n    },\n\n    rulesets() {\n        if (!this.rules) { return []; }\n\n        const filtRules = [];\n        const rules = this.rules;\n        let i;\n        let rule;\n\n        for (i = 0; (rule = rules[i]); i++) {\n            if (rule.isRuleset) {\n                filtRules.push(rule);\n            }\n        }\n\n        return filtRules;\n    },\n\n    prependRule(rule) {\n        const rules = this.rules;\n        if (rules) {\n            rules.unshift(rule);\n        } else {\n            this.rules = [ rule ];\n        }\n        this.setParent(rule, this);\n    },\n\n    find(selector, self, filter) {\n        self = self || this;\n        const rules = [];\n        let match;\n        let foundMixins;\n        const key = selector.toCSS();\n\n        if (key in this._lookups) { return this._lookups[key]; }\n\n        this.rulesets().forEach(function (rule) {\n            if (rule !== self) {\n                for (let j = 0; j < rule.selectors.length; j++) {\n                    match = selector.match(rule.selectors[j]);\n                    if (match) {\n                        if (selector.elements.length > match) {\n                            if (!filter || filter(rule)) {\n                                foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\n                                for (let i = 0; i < foundMixins.length; ++i) {\n                                    foundMixins[i].path.push(rule);\n                                }\n                                Array.prototype.push.apply(rules, foundMixins);\n                            }\n                        } else {\n                            rules.push({ rule, path: []});\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n        this._lookups[key] = rules;\n        return rules;\n    },\n\n    genCSS(context, output) {\n        let i;\n        let j;\n        const charsetRuleNodes = [];\n        let ruleNodes = [];\n\n        let // Line number debugging\n            debugInfo;\n\n        let rule;\n        let path;\n\n        context.tabLevel = (context.tabLevel || 0);\n\n        if (!this.root) {\n            context.tabLevel++;\n        }\n\n        const tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\n        const tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\n        let sep;\n\n        let charsetNodeIndex = 0;\n        let importNodeIndex = 0;\n        for (i = 0; (rule = this.rules[i]); i++) {\n            if (rule instanceof Comment) {\n                if (importNodeIndex === i) {\n                    importNodeIndex++;\n                }\n                ruleNodes.push(rule);\n            } else if (rule.isCharset && rule.isCharset()) {\n                ruleNodes.splice(charsetNodeIndex, 0, rule);\n                charsetNodeIndex++;\n                importNodeIndex++;\n            } else if (rule.type === 'Import') {\n                ruleNodes.splice(importNodeIndex, 0, rule);\n                importNodeIndex++;\n            } else {\n                ruleNodes.push(rule);\n            }\n        }\n        ruleNodes = charsetRuleNodes.concat(ruleNodes);\n\n        // If this is the root node, we don't render\n        // a selector, or {}.\n        if (!this.root) {\n            debugInfo = getDebugInfo(context, this, tabSetStr);\n\n            if (debugInfo) {\n                output.add(debugInfo);\n                output.add(tabSetStr);\n            }\n\n            const paths = this.paths;\n            const pathCnt = paths.length;\n            let pathSubCnt;\n\n            sep = context.compress ? ',' : (`,\\n${tabSetStr}`);\n\n            for (i = 0; i < pathCnt; i++) {\n                path = paths[i];\n                if (!(pathSubCnt = path.length)) { continue; }\n                if (i > 0) { output.add(sep); }\n\n                context.firstSelector = true;\n                path[0].genCSS(context, output);\n\n                context.firstSelector = false;\n                for (j = 1; j < pathSubCnt; j++) {\n                    path[j].genCSS(context, output);\n                }\n            }\n\n            output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\n        }\n\n        // Compile rules and rulesets\n        for (i = 0; (rule = ruleNodes[i]); i++) {\n\n            if (i + 1 === ruleNodes.length) {\n                context.lastRule = true;\n            }\n\n            const currentLastRule = context.lastRule;\n            if (rule.isRulesetLike(rule)) {\n                context.lastRule = false;\n            }\n\n            if (rule.genCSS) {\n                rule.genCSS(context, output);\n            } else if (rule.value) {\n                output.add(rule.value.toString());\n            }\n\n            context.lastRule = currentLastRule;\n\n            if (!context.lastRule && rule.isVisible()) {\n                output.add(context.compress ? '' : (`\\n${tabRuleStr}`));\n            } else {\n                context.lastRule = false;\n            }\n        }\n\n        if (!this.root) {\n            output.add((context.compress ? '}' : `\\n${tabSetStr}}`));\n            context.tabLevel--;\n        }\n\n        if (!output.isEmpty() && !context.compress && this.firstRoot) {\n            output.add('\\n');\n        }\n    },\n\n    joinSelectors(paths, context, selectors) {\n        for (let s = 0; s < selectors.length; s++) {\n            this.joinSelector(paths, context, selectors[s]);\n        }\n    },\n\n    joinSelector(paths, context, selector) {\n\n        function createParenthesis(elementsToPak, originalElement) {\n            let replacementParen, j;\n            if (elementsToPak.length === 0) {\n                replacementParen = new Paren(elementsToPak[0]);\n            } else {\n                const insideParent = new Array(elementsToPak.length);\n                for (j = 0; j < elementsToPak.length; j++) {\n                    insideParent[j] = new Element(\n                        null,\n                        elementsToPak[j],\n                        originalElement.isVariable,\n                        originalElement._index,\n                        originalElement._fileInfo\n                    );\n                }\n                replacementParen = new Paren(new Selector(insideParent));\n            }\n            return replacementParen;\n        }\n\n        function createSelector(containedElement, originalElement) {\n            let element, selector;\n            element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n            selector = new Selector([element]);\n            return selector;\n        }\n\n        // joins selector path from `beginningPath` with selector path in `addPath`\n        // `replacedElement` contains element that is being replaced by `addPath`\n        // returns concatenated path\n        function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\n            let newSelectorPath, lastSelector, newJoinedSelector;\n            // our new selector path\n            newSelectorPath = [];\n\n            // construct the joined selector - if & is the first thing this will be empty,\n            // if not newJoinedSelector will be the last set of elements in the selector\n            if (beginningPath.length > 0) {\n                newSelectorPath = utils.copyArray(beginningPath);\n                lastSelector = newSelectorPath.pop();\n                newJoinedSelector = originalSelector.createDerived(utils.copyArray(lastSelector.elements));\n            }\n            else {\n                newJoinedSelector = originalSelector.createDerived([]);\n            }\n\n            if (addPath.length > 0) {\n                // /deep/ is a CSS4 selector - (removed, so should deprecate)\n                // that is valid without anything in front of it\n                // so if the & does not have a combinator that is \"\" or \" \" then\n                // and there is a combinator on the parent, then grab that.\n                // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\n                let combinator = replacedElement.combinator;\n\n                const parentEl = addPath[0].elements[0];\n                if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\n                    combinator = parentEl.combinator;\n                }\n                // join the elements so far with the first part of the parent\n                newJoinedSelector.elements.push(new Element(\n                    combinator,\n                    parentEl.value,\n                    replacedElement.isVariable,\n                    replacedElement._index,\n                    replacedElement._fileInfo\n                ));\n                newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\n            }\n\n            // now add the joined selector - but only if it is not empty\n            if (newJoinedSelector.elements.length !== 0) {\n                newSelectorPath.push(newJoinedSelector);\n            }\n\n            // put together the parent selectors after the join (e.g. the rest of the parent)\n            if (addPath.length > 1) {\n                let restOfPath = addPath.slice(1);\n                restOfPath = restOfPath.map(function (selector) {\n                    return selector.createDerived(selector.elements, []);\n                });\n                newSelectorPath = newSelectorPath.concat(restOfPath);\n            }\n            return newSelectorPath;\n        }\n\n        // joins selector path from `beginningPath` with every selector path in `addPaths` array\n        // `replacedElement` contains element that is being replaced by `addPath`\n        // returns array with all concatenated paths\n        function addAllReplacementsIntoPath( beginningPath, addPaths, replacedElement, originalSelector, result) {\n            let j;\n            for (j = 0; j < beginningPath.length; j++) {\n                const newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\n                result.push(newSelectorPath);\n            }\n            return result;\n        }\n\n        function mergeElementsOnToSelectors(elements, selectors) {\n            let i, sel;\n\n            if (elements.length === 0) {\n                return ;\n            }\n            if (selectors.length === 0) {\n                selectors.push([ new Selector(elements) ]);\n                return;\n            }\n\n            for (i = 0; (sel = selectors[i]); i++) {\n                // if the previous thing in sel is a parent this needs to join on to it\n                if (sel.length > 0) {\n                    sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\n                }\n                else {\n                    sel.push(new Selector(elements));\n                }\n            }\n        }\n\n        // replace all parent selectors inside `inSelector` by content of `context` array\n        // resulting selectors are returned inside `paths` array\n        // returns true if `inSelector` contained at least one parent selector\n        function replaceParentSelector(paths, context, inSelector) {\n            // The paths are [[Selector]]\n            // The first list is a list of comma separated selectors\n            // The inner list is a list of inheritance separated selectors\n            // e.g.\n            // .a, .b {\n            //   .c {\n            //   }\n            // }\n            // == [[.a] [.c]] [[.b] [.c]]\n            //\n            let i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\n            function findNestedSelector(element) {\n                let maybeSelector;\n                if (!(element.value instanceof Paren)) {\n                    return null;\n                }\n\n                maybeSelector = element.value.value;\n                if (!(maybeSelector instanceof Selector)) {\n                    return null;\n                }\n\n                return maybeSelector;\n            }\n\n            // the elements from the current selector so far\n            currentElements = [];\n            // the current list of new selectors to add to the path.\n            // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\n            // by the parents\n            newSelectors = [\n                []\n            ];\n\n            for (i = 0; (el = inSelector.elements[i]); i++) {\n                // non parent reference elements just get added\n                if (el.value !== '&') {\n                    const nestedSelector = findNestedSelector(el);\n                    if (nestedSelector != null) {\n                        // merge the current list of non parent selector elements\n                        // on to the current list of selectors to add\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\n\n                        const nestedPaths = [];\n                        let replaced;\n                        const replacedNewSelectors = [];\n                        replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\n                        hadParentSelector = hadParentSelector || replaced;\n                        // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\n                        for (k = 0; k < nestedPaths.length; k++) {\n                            const replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\n                            addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\n                        }\n                        newSelectors = replacedNewSelectors;\n                        currentElements = [];\n                    } else {\n                        currentElements.push(el);\n                    }\n\n                } else {\n                    hadParentSelector = true;\n                    // the new list of selectors to add\n                    selectorsMultiplied = [];\n\n                    // merge the current list of non parent selector elements\n                    // on to the current list of selectors to add\n                    mergeElementsOnToSelectors(currentElements, newSelectors);\n\n                    // loop through our current selectors\n                    for (j = 0; j < newSelectors.length; j++) {\n                        sel = newSelectors[j];\n                        // if we don't have any parent paths, the & might be in a mixin so that it can be used\n                        // whether there are parents or not\n                        if (context.length === 0) {\n                            // the combinator used on el should now be applied to the next element instead so that\n                            // it is not lost\n                            if (sel.length > 0) {\n                                sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\n                            }\n                            selectorsMultiplied.push(sel);\n                        }\n                        else {\n                            // and the parent selectors\n                            for (k = 0; k < context.length; k++) {\n                                // We need to put the current selectors\n                                // then join the last selector's elements on to the parents selectors\n                                const newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\n                                // add that to our new set of selectors\n                                selectorsMultiplied.push(newSelectorPath);\n                            }\n                        }\n                    }\n\n                    // our new selectors has been multiplied, so reset the state\n                    newSelectors = selectorsMultiplied;\n                    currentElements = [];\n                }\n            }\n\n            // if we have any elements left over (e.g. .a& .b == .b)\n            // add them on to all the current selectors\n            mergeElementsOnToSelectors(currentElements, newSelectors);\n\n            for (i = 0; i < newSelectors.length; i++) {\n                length = newSelectors[i].length;\n                if (length > 0) {\n                    paths.push(newSelectors[i]);\n                    lastSelector = newSelectors[i][length - 1];\n                    newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\n                }\n            }\n\n            return hadParentSelector;\n        }\n\n        function deriveSelector(visibilityInfo, deriveFrom) {\n            const newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\n            newSelector.copyVisibilityInfo(visibilityInfo);\n            return newSelector;\n        }\n\n        // joinSelector code follows\n        let i, newPaths, hadParentSelector;\n\n        newPaths = [];\n        hadParentSelector = replaceParentSelector(newPaths, context, selector);\n\n        if (!hadParentSelector) {\n            if (context.length > 0) {\n                newPaths = [];\n                for (i = 0; i < context.length; i++) {\n\n                    const concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\n\n                    concatenated.push(selector);\n                    newPaths.push(concatenated);\n                }\n            }\n            else {\n                newPaths = [[selector]];\n            }\n        }\n\n        for (i = 0; i < newPaths.length; i++) {\n            paths.push(newPaths[i]);\n        }\n\n    }\n});\n\nexport default Ruleset;\n", "import Node from './node';\nimport Selector from './selector';\nimport Ruleset from './ruleset';\nimport Anonymous from './anonymous';\n\nconst AtRule = function(\n    name,\n    value,\n    rules,\n    index,\n    currentFileInfo,\n    debugInfo,\n    isRooted,\n    visibilityInfo\n) {\n    let i;\n\n    this.name  = name;\n    this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\n    if (rules) {\n        if (Array.isArray(rules)) {\n            this.rules = rules;\n        } else {\n            this.rules = [rules];\n            this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\n        }\n        for (i = 0; i < this.rules.length; i++) {\n            this.rules[i].allowImports = true;\n        }\n        this.setParent(this.rules, this);\n    }\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.debugInfo = debugInfo;\n    this.isRooted = isRooted || false;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n}\n\nAtRule.prototype = Object.assign(new Node(), {\n    type: 'AtRule',\n    accept(visitor) {\n        const value = this.value, rules = this.rules;\n        if (rules) {\n            this.rules = visitor.visitArray(rules);\n        }\n        if (value) {\n            this.value = visitor.visit(value);\n        }\n    },\n\n    isRulesetLike() {\n        return this.rules || !this.isCharset();\n    },\n\n    isCharset() {\n        return '@charset' === this.name;\n    },\n\n    genCSS(context, output) {\n        const value = this.value, rules = this.rules;\n        output.add(this.name, this.fileInfo(), this.getIndex());\n        if (value) {\n            output.add(' ');\n            value.genCSS(context, output);\n        }\n        if (rules) {\n            this.outputRuleset(context, output, rules);\n        } else {\n            output.add(';');\n        }\n    },\n\n    eval(context) {\n        let mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\n\n        // media stored inside other atrule should not bubble over it\n        // backpup media bubbling information\n        mediaPathBackup = context.mediaPath;\n        mediaBlocksBackup = context.mediaBlocks;\n        // deleted media bubbling information\n        context.mediaPath = [];\n        context.mediaBlocks = [];\n\n        if (value) {\n            value = value.eval(context);\n        }\n        if (rules) {\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\n            rules = [rules[0].eval(context)];\n            rules[0].root = true;\n        }\n        // restore media bubbling information\n        context.mediaPath = mediaPathBackup;\n        context.mediaBlocks = mediaBlocksBackup;\n\n        return new AtRule(this.name, value, rules,\n            this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n    },\n\n    variable(name) {\n        if (this.rules) {\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\n            return Ruleset.prototype.variable.call(this.rules[0], name);\n        }\n    },\n\n    find() {\n        if (this.rules) {\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\n            return Ruleset.prototype.find.apply(this.rules[0], arguments);\n        }\n    },\n\n    rulesets() {\n        if (this.rules) {\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\n            return Ruleset.prototype.rulesets.apply(this.rules[0]);\n        }\n    },\n\n    outputRuleset(context, output, rules) {\n        const ruleCnt = rules.length;\n        let i;\n        context.tabLevel = (context.tabLevel | 0) + 1;\n\n        // Compressed\n        if (context.compress) {\n            output.add('{');\n            for (i = 0; i < ruleCnt; i++) {\n                rules[i].genCSS(context, output);\n            }\n            output.add('}');\n            context.tabLevel--;\n            return;\n        }\n\n        // Non-compressed\n        const tabSetStr = `\\n${Array(context.tabLevel).join('  ')}`, tabRuleStr = `${tabSetStr}  `;\n        if (!ruleCnt) {\n            output.add(` {${tabSetStr}}`);\n        } else {\n            output.add(` {${tabRuleStr}`);\n            rules[0].genCSS(context, output);\n            for (i = 1; i < ruleCnt; i++) {\n                output.add(tabRuleStr);\n                rules[i].genCSS(context, output);\n            }\n            output.add(`${tabSetStr}}`);\n        }\n\n        context.tabLevel--;\n    }\n});\n\nexport default AtRule;\n", "import Node from './node';\nimport contexts from '../contexts';\nimport * as utils from '../utils';\n\nconst DetachedRuleset = function(ruleset, frames) {\n    this.ruleset = ruleset;\n    this.frames = frames;\n    this.setParent(this.ruleset, this);\n};\n\nDetachedRuleset.prototype = Object.assign(new Node(), {\n    type: 'DetachedRuleset',\n    evalFirst: true,\n\n    accept(visitor) {\n        this.ruleset = visitor.visit(this.ruleset);\n    },\n\n    eval(context) {\n        const frames = this.frames || utils.copyArray(context.frames);\n        return new DetachedRuleset(this.ruleset, frames);\n    },\n\n    callEval(context) {\n        return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n    }\n});\n\nexport default DetachedRuleset;\n", "import Node from './node';\nimport unitConversions from '../data/unit-conversions';\nimport * as utils from '../utils';\n\nconst Unit = function(numerator, denominator, backupUnit) {\n    this.numerator = numerator ? utils.copyArray(numerator).sort() : [];\n    this.denominator = denominator ? utils.copyArray(denominator).sort() : [];\n    if (backupUnit) {\n        this.backupUnit = backupUnit;\n    } else if (numerator && numerator.length) {\n        this.backupUnit = numerator[0];\n    }\n};\n\nUnit.prototype = Object.assign(new Node(), {\n    type: 'Unit',\n\n    clone() {\n        return new Unit(utils.copyArray(this.numerator), utils.copyArray(this.denominator), this.backupUnit);\n    },\n\n    genCSS(context, output) {\n        // Dimension checks the unit is singular and throws an error if in strict math mode.\n        const strictUnits = context && context.strictUnits;\n        if (this.numerator.length === 1) {\n            output.add(this.numerator[0]); // the ideal situation\n        } else if (!strictUnits && this.backupUnit) {\n            output.add(this.backupUnit);\n        } else if (!strictUnits && this.denominator.length) {\n            output.add(this.denominator[0]);\n        }\n    },\n\n    toString() {\n        let i, returnStr = this.numerator.join('*');\n        for (i = 0; i < this.denominator.length; i++) {\n            returnStr += `/${this.denominator[i]}`;\n        }\n        return returnStr;\n    },\n\n    compare(other) {\n        return this.is(other.toString()) ? 0 : undefined;\n    },\n\n    is(unitString) {\n        return this.toString().toUpperCase() === unitString.toUpperCase();\n    },\n\n    isLength() {\n        return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\n    },\n\n    isEmpty() {\n        return this.numerator.length === 0 && this.denominator.length === 0;\n    },\n\n    isSingular() {\n        return this.numerator.length <= 1 && this.denominator.length === 0;\n    },\n\n    map(callback) {\n        let i;\n\n        for (i = 0; i < this.numerator.length; i++) {\n            this.numerator[i] = callback(this.numerator[i], false);\n        }\n\n        for (i = 0; i < this.denominator.length; i++) {\n            this.denominator[i] = callback(this.denominator[i], true);\n        }\n    },\n\n    usedUnits() {\n        let group;\n        const result = {};\n        let mapUnit;\n        let groupName;\n\n        mapUnit = function (atomicUnit) {\n            /* jshint loopfunc:true */\n            if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\n                result[groupName] = atomicUnit;\n            }\n\n            return atomicUnit;\n        };\n\n        for (groupName in unitConversions) {\n            if (unitConversions.hasOwnProperty(groupName)) {\n                group = unitConversions[groupName];\n\n                this.map(mapUnit);\n            }\n        }\n\n        return result;\n    },\n\n    cancel() {\n        const counter = {};\n        let atomicUnit;\n        let i;\n\n        for (i = 0; i < this.numerator.length; i++) {\n            atomicUnit = this.numerator[i];\n            counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\n        }\n\n        for (i = 0; i < this.denominator.length; i++) {\n            atomicUnit = this.denominator[i];\n            counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\n        }\n\n        this.numerator = [];\n        this.denominator = [];\n\n        for (atomicUnit in counter) {\n            if (counter.hasOwnProperty(atomicUnit)) {\n                const count = counter[atomicUnit];\n\n                if (count > 0) {\n                    for (i = 0; i < count; i++) {\n                        this.numerator.push(atomicUnit);\n                    }\n                } else if (count < 0) {\n                    for (i = 0; i < -count; i++) {\n                        this.denominator.push(atomicUnit);\n                    }\n                }\n            }\n        }\n\n        this.numerator.sort();\n        this.denominator.sort();\n    }\n});\n\nexport default Unit;\n", "import Node from './node';\nimport unitConversions from '../data/unit-conversions';\nimport Unit from './unit';\nimport Color from './color';\n\n//\n// A number with a unit\n//\nconst Dimension = function(value, unit) {\n    this.value = parseFloat(value);\n    if (isNaN(this.value)) {\n        throw new Error('Dimension is not a number.');\n    }\n    this.unit = (unit && unit instanceof Unit) ? unit :\n        new Unit(unit ? [unit] : undefined);\n    this.setParent(this.unit, this);\n};\n\nDimension.prototype = Object.assign(new Node(), {\n    type: 'Dimension',\n\n    accept(visitor) {\n        this.unit = visitor.visit(this.unit);\n    },\n\n    eval(context) {\n        return this;\n    },\n\n    toColor() {\n        return new Color([this.value, this.value, this.value]);\n    },\n\n    genCSS(context, output) {\n        if ((context && context.strictUnits) && !this.unit.isSingular()) {\n            throw new Error(`Multiple units in dimension. Correct the units or use the unit function. Bad unit: ${this.unit.toString()}`);\n        }\n\n        const value = this.fround(context, this.value);\n        let strValue = String(value);\n\n        if (value !== 0 && value < 0.000001 && value > -0.000001) {\n            // would be output 1e-6 etc.\n            strValue = value.toFixed(20).replace(/0+$/, '');\n        }\n\n        if (context && context.compress) {\n            // Zero values doesn't need a unit\n            if (value === 0 && this.unit.isLength()) {\n                output.add(strValue);\n                return;\n            }\n\n            // Float values doesn't need a leading zero\n            if (value > 0 && value < 1) {\n                strValue = (strValue).substr(1);\n            }\n        }\n\n        output.add(strValue);\n        this.unit.genCSS(context, output);\n    },\n\n    // In an operation between two Dimensions,\n    // we default to the first Dimension's unit,\n    // so `1px + 2` will yield `3px`.\n    operate(context, op, other) {\n        /* jshint noempty:false */\n        let value = this._operate(context, op, this.value, other.value), unit = this.unit.clone();\n\n        if (op === '+' || op === '-') {\n            if (unit.numerator.length === 0 && unit.denominator.length === 0) {\n                unit = other.unit.clone();\n                if (this.unit.backupUnit) {\n                    unit.backupUnit = this.unit.backupUnit;\n                }\n            } else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) {\n                // do nothing\n            } else {\n                other = other.convertTo(this.unit.usedUnits());\n\n                if (context.strictUnits && other.unit.toString() !== unit.toString()) {\n                    throw new Error(`Incompatible units. Change the units or use the unit function. `\n                        + `Bad units: '${unit.toString()}' and '${other.unit.toString()}'.`);\n                }\n\n                value = this._operate(context, op, this.value, other.value);\n            }\n        } else if (op === '*') {\n            unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\n            unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\n            unit.cancel();\n        } else if (op === '/') {\n            unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\n            unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\n            unit.cancel();\n        }\n        return new Dimension(value, unit);\n    },\n\n    compare(other) {\n        let a, b;\n\n        if (!(other instanceof Dimension)) {\n            return undefined;\n        }\n\n        if (this.unit.isEmpty() || other.unit.isEmpty()) {\n            a = this;\n            b = other;\n        } else {\n            a = this.unify();\n            b = other.unify();\n            if (a.unit.compare(b.unit) !== 0) {\n                return undefined;\n            }\n        }\n\n        return Node.numericCompare(a.value, b.value);\n    },\n\n    unify() {\n        return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\n    },\n\n    convertTo(conversions) {\n        let value = this.value;\n        const unit = this.unit.clone();\n        let i;\n        let groupName;\n        let group;\n        let targetUnit;\n        let derivedConversions = {};\n        let applyUnit;\n\n        if (typeof conversions === 'string') {\n            for (i in unitConversions) {\n                if (unitConversions[i].hasOwnProperty(conversions)) {\n                    derivedConversions = {};\n                    derivedConversions[i] = conversions;\n                }\n            }\n            conversions = derivedConversions;\n        }\n        applyUnit = function (atomicUnit, denominator) {\n            /* jshint loopfunc:true */\n            if (group.hasOwnProperty(atomicUnit)) {\n                if (denominator) {\n                    value = value / (group[atomicUnit] / group[targetUnit]);\n                } else {\n                    value = value * (group[atomicUnit] / group[targetUnit]);\n                }\n\n                return targetUnit;\n            }\n\n            return atomicUnit;\n        };\n\n        for (groupName in conversions) {\n            if (conversions.hasOwnProperty(groupName)) {\n                targetUnit = conversions[groupName];\n                group = unitConversions[groupName];\n\n                unit.map(applyUnit);\n            }\n        }\n\n        unit.cancel();\n\n        return new Dimension(value, unit);\n    }\n});\n\nexport default Dimension;\n", "import Node from './node';\nimport Color from './color';\nimport Dimension from './dimension';\nimport * as Constants from '../constants';\nconst MATH = Constants.Math;\n\n\nconst Operation = function(op, operands, isSpaced) {\n    this.op = op.trim();\n    this.operands = operands;\n    this.isSpaced = isSpaced;\n};\n\nOperation.prototype = Object.assign(new Node(), {\n    type: 'Operation',\n\n    accept(visitor) {\n        this.operands = visitor.visitArray(this.operands);\n    },\n\n    eval(context) {\n        let a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\n\n        if (context.isMathOn(this.op)) {\n            op = this.op === './' ? '/' : this.op;\n            if (a instanceof Dimension && b instanceof Color) {\n                a = a.toColor();\n            }\n            if (b instanceof Dimension && a instanceof Color) {\n                b = b.toColor();\n            }\n            if (!a.operate) {\n                if (a instanceof Operation && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\n                    return new Operation(this.op, [a, b], this.isSpaced);\n                }\n                throw { type: 'Operation',\n                    message: 'Operation on an invalid type' };\n            }\n\n            return a.operate(context, op, b);\n        } else {\n            return new Operation(this.op, [a, b], this.isSpaced);\n        }\n    },\n\n    genCSS(context, output) {\n        this.operands[0].genCSS(context, output);\n        if (this.isSpaced) {\n            output.add(' ');\n        }\n        output.add(this.op);\n        if (this.isSpaced) {\n            output.add(' ');\n        }\n        this.operands[1].genCSS(context, output);\n    }\n});\n\nexport default Operation;\n", "import Node from './node';\nimport Paren from './paren';\nimport Comment from './comment';\nimport Dimension from './dimension';\nimport * as Constants from '../constants';\nconst MATH = Constants.Math;\n\nconst Expression = function(value, noSpacing) {\n    this.value = value;\n    this.noSpacing = noSpacing;\n    if (!value) {\n        throw new Error('Expression requires an array parameter');\n    }\n};\n\nExpression.prototype = Object.assign(new Node(), {\n    type: 'Expression',\n\n    accept(visitor) {\n        this.value = visitor.visitArray(this.value);\n    },\n\n    eval(context) {\n        let returnValue;\n        const mathOn = context.isMathOn();\n        const inParenthesis = this.parens;\n\n        let doubleParen = false;\n        if (inParenthesis) {\n            context.inParenthesis();\n        }\n        if (this.value.length > 1) {\n            returnValue = new Expression(this.value.map(function (e) {\n                if (!e.eval) {\n                    return e;\n                }\n                return e.eval(context);\n            }), this.noSpacing);\n        } else if (this.value.length === 1) {\n            if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\n                doubleParen = true;\n            }\n            returnValue = this.value[0].eval(context);\n        } else {\n            returnValue = this;\n        }\n        if (inParenthesis) {\n            context.outOfParenthesis();\n        }\n        if (this.parens && this.parensInOp && !mathOn && !doubleParen \n            && (!(returnValue instanceof Dimension))) {\n            returnValue = new Paren(returnValue);\n        }\n        return returnValue;\n    },\n\n    genCSS(context, output) {\n        for (let i = 0; i < this.value.length; i++) {\n            this.value[i].genCSS(context, output);\n            if (!this.noSpacing && i + 1 < this.value.length) {\n                output.add(' ');\n            }\n        }\n    },\n\n    throwAwayComments() {\n        this.value = this.value.filter(function(v) {\n            return !(v instanceof Comment);\n        });\n    }\n});\n\nexport default Expression;\n", "import Expression from '../tree/expression';\n\nclass functionCaller {\n    constructor(name, context, index, currentFileInfo) {\n        this.name = name.toLowerCase();\n        this.index = index;\n        this.context = context;\n        this.currentFileInfo = currentFileInfo;\n\n        this.func = context.frames[0].functionRegistry.get(this.name);\n    }\n\n    isValid() {\n        return Boolean(this.func);\n    }\n\n    call(args) {\n        if (!(Array.isArray(args))) {\n            args = [args];\n        }\n        const evalArgs = this.func.evalArgs;\n        if (evalArgs !== false) {\n            args = args.map(a => a.eval(this.context));\n        }\n        const commentFilter = item => !(item.type === 'Comment');\n\n        // This code is terrible and should be replaced as per this issue...\n        // https://github.com/less/less.js/issues/2477\n        args = args\n            .filter(commentFilter)\n            .map(item => {\n                if (item.type === 'Expression') {\n                    const subNodes = item.value.filter(commentFilter);\n                    if (subNodes.length === 1) {\n                        return subNodes[0];\n                    } else {\n                        return new Expression(subNodes);\n                    }\n                }\n                return item;\n            });\n\n        if (evalArgs === false) {\n            return this.func(this.context, ...args);\n        }\n\n        return this.func(...args);\n    }\n}\n\nexport default functionCaller;\n", "import Node from './node';\nimport Anonymous from './anonymous';\nimport FunctionCaller from '../functions/function-caller';\n\n//\n// A function call node.\n//\nconst Call = function(name, args, index, currentFileInfo) {\n    this.name = name;\n    this.args = args;\n    this.calc = name === 'calc';\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n}\n\nCall.prototype = Object.assign(new Node(), {\n    type: 'Call',\n\n    accept(visitor) {\n        if (this.args) {\n            this.args = visitor.visitArray(this.args);\n        }\n    },\n\n    //\n    // When evaluating a function call,\n    // we either find the function in the functionRegistry,\n    // in which case we call it, passing the  evaluated arguments,\n    // if this returns null or we cannot find the function, we\n    // simply print it out as it appeared originally [2].\n    //\n    // The reason why we evaluate the arguments, is in the case where\n    // we try to pass a variable to a function, like: `saturate(@color)`.\n    // The function should receive the value, not the variable.\n    //\n    eval(context) {\n        /**\n         * Turn off math for calc(), and switch back on for evaluating nested functions\n         */\n        const currentMathContext = context.mathOn;\n        context.mathOn = !this.calc;\n        if (this.calc || context.inCalc) {\n            context.enterCalc();\n        }\n\n        const exitCalc = () => {\n            if (this.calc || context.inCalc) {\n                context.exitCalc();\n            }\n            context.mathOn = currentMathContext;\n        };\n\n        let result;\n        const funcCaller = new FunctionCaller(this.name, context, this.getIndex(), this.fileInfo());\n\n        if (funcCaller.isValid()) {\n            try {\n                result = funcCaller.call(this.args);\n                exitCalc();\n            } catch (e) {\n                if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\n                    throw e;\n                }\n                throw { \n                    type: e.type || 'Runtime',\n                    message: `Error evaluating function \\`${this.name}\\`${e.message ? `: ${e.message}` : ''}`,\n                    index: this.getIndex(), \n                    filename: this.fileInfo().filename,\n                    line: e.lineNumber,\n                    column: e.columnNumber\n                };\n            }\n        }\n\n        if (result !== null && result !== undefined) {\n            // Results that that are not nodes are cast as Anonymous nodes\n            // Falsy values or booleans are returned as empty nodes\n            if (!(result instanceof Node)) {\n                if (!result || result === true) {\n                    result = new Anonymous(null); \n                }\n                else {\n                    result = new Anonymous(result.toString()); \n                }\n                \n            }\n            result._index = this._index;\n            result._fileInfo = this._fileInfo;\n            return result;\n        }\n\n        const args = this.args.map(a => a.eval(context));\n        exitCalc();\n\n        return new Call(this.name, args, this.getIndex(), this.fileInfo());\n    },\n\n    genCSS(context, output) {\n        output.add(`${this.name}(`, this.fileInfo(), this.getIndex());\n\n        for (let i = 0; i < this.args.length; i++) {\n            this.args[i].genCSS(context, output);\n            if (i + 1 < this.args.length) {\n                output.add(', ');\n            }\n        }\n\n        output.add(')');\n    }\n});\n\nexport default Call;\n", "import Node from './node';\nimport Call from './call';\n\nconst Variable = function(name, index, currentFileInfo) {\n    this.name = name;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\n\nVariable.prototype = Object.assign(new Node(), {\n    type: 'Variable',\n\n    eval(context) {\n        let variable, name = this.name;\n\n        if (name.indexOf('@@') === 0) {\n            name = `@${new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value}`;\n        }\n\n        if (this.evaluating) {\n            throw { type: 'Name',\n                message: `Recursive variable definition for ${name}`,\n                filename: this.fileInfo().filename,\n                index: this.getIndex() };\n        }\n\n        this.evaluating = true;\n\n        variable = this.find(context.frames, function (frame) {\n            const v = frame.variable(name);\n            if (v) {\n                if (v.important) {\n                    const importantScope = context.importantScope[context.importantScope.length - 1];\n                    importantScope.important = v.important;\n                }\n                // If in calc, wrap vars in a function call to cascade evaluate args first\n                if (context.inCalc) {\n                    return (new Call('_SELF', [v.value])).eval(context);\n                }\n                else {\n                    return v.value.eval(context);\n                }\n            }\n        });\n        if (variable) {\n            this.evaluating = false;\n            return variable;\n        } else {\n            throw { type: 'Name',\n                message: `variable ${name} is undefined`,\n                filename: this.fileInfo().filename,\n                index: this.getIndex() };\n        }\n    },\n\n    find(obj, fun) {\n        for (let i = 0, r; i < obj.length; i++) {\n            r = fun.call(obj, obj[i]);\n            if (r) { return r; }\n        }\n        return null;\n    }\n});\n\nexport default Variable;\n", "import Node from './node';\nimport Declaration from './declaration';\n\nconst Property = function(name, index, currentFileInfo) {\n    this.name = name;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\n\nProperty.prototype = Object.assign(new Node(), {\n    type: 'Property',\n\n    eval(context) {\n        let property;\n        const name = this.name;\n        // TODO: shorten this reference\n        const mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\n\n        if (this.evaluating) {\n            throw { type: 'Name',\n                message: `Recursive property reference for ${name}`,\n                filename: this.fileInfo().filename,\n                index: this.getIndex() };\n        }\n\n        this.evaluating = true;\n\n        property = this.find(context.frames, function (frame) {\n            let v;\n            const vArr = frame.property(name);\n            if (vArr) {\n                for (let i = 0; i < vArr.length; i++) {\n                    v = vArr[i];\n\n                    vArr[i] = new Declaration(v.name,\n                        v.value,\n                        v.important,\n                        v.merge,\n                        v.index,\n                        v.currentFileInfo,\n                        v.inline,\n                        v.variable\n                    );\n                }\n                mergeRules(vArr);\n\n                v = vArr[vArr.length - 1];\n                if (v.important) {\n                    const importantScope = context.importantScope[context.importantScope.length - 1];\n                    importantScope.important = v.important;\n                }\n                v = v.value.eval(context);\n                return v;\n            }\n        });\n        if (property) {\n            this.evaluating = false;\n            return property;\n        } else {\n            throw { type: 'Name',\n                message: `Property '${name}' is undefined`,\n                filename: this.currentFileInfo.filename,\n                index: this.index };\n        }\n    },\n\n    find(obj, fun) {\n        for (let i = 0, r; i < obj.length; i++) {\n            r = fun.call(obj, obj[i]);\n            if (r) { return r; }\n        }\n        return null;\n    }\n});\n\nexport default Property;\n", "import Node from './node';\n\nconst Attribute = function(key, op, value) {\n    this.key = key;\n    this.op = op;\n    this.value = value;\n}\n\nAttribute.prototype = Object.assign(new Node(), {\n    type: 'Attribute',\n\n    eval(context) {\n        return new Attribute(this.key.eval ? this.key.eval(context) : this.key,\n            this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\n    },\n\n    genCSS(context, output) {\n        output.add(this.toCSS(context));\n    },\n\n    toCSS(context) {\n        let value = this.key.toCSS ? this.key.toCSS(context) : this.key;\n\n        if (this.op) {\n            value += this.op;\n            value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\n        }\n\n        return `[${value}]`;\n    }\n});\n\nexport default Attribute;\n", "import Node from './node';\nimport Variable from './variable';\nimport Property from './property';\n\n\nconst Quoted = function(str, content, escaped, index, currentFileInfo) {\n    this.escaped = (escaped == null) ? true : escaped;\n    this.value = content || '';\n    this.quote = str.charAt(0);\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.variableRegex = /@\\{([\\w-]+)\\}/g;\n    this.propRegex = /\\$\\{([\\w-]+)\\}/g;\n    this.allowRoot = escaped;\n};\n\nQuoted.prototype = Object.assign(new Node(), {\n    type: 'Quoted',\n\n    genCSS(context, output) {\n        if (!this.escaped) {\n            output.add(this.quote, this.fileInfo(), this.getIndex());\n        }\n        output.add(this.value);\n        if (!this.escaped) {\n            output.add(this.quote);\n        }\n    },\n\n    containsVariables() {\n        return this.value.match(this.variableRegex);\n    },\n\n    eval(context) {\n        const that = this;\n        let value = this.value;\n        const variableReplacement = function (_, name) {\n            const v = new Variable(`@${name}`, that.getIndex(), that.fileInfo()).eval(context, true);\n            return (v instanceof Quoted) ? v.value : v.toCSS();\n        };\n        const propertyReplacement = function (_, name) {\n            const v = new Property(`$${name}`, that.getIndex(), that.fileInfo()).eval(context, true);\n            return (v instanceof Quoted) ? v.value : v.toCSS();\n        };\n        function iterativeReplace(value, regexp, replacementFnc) {\n            let evaluatedValue = value;\n            do {\n                value = evaluatedValue.toString();\n                evaluatedValue = value.replace(regexp, replacementFnc);\n            } while (value !== evaluatedValue);\n            return evaluatedValue;\n        }\n        value = iterativeReplace(value, this.variableRegex, variableReplacement);\n        value = iterativeReplace(value, this.propRegex, propertyReplacement);\n        return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\n    },\n\n    compare(other) {\n        // when comparing quoted strings allow the quote to differ\n        if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\n            return Node.numericCompare(this.value, other.value);\n        } else {\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n        }\n    }\n});\n\nexport default Quoted;\n", "import Node from './node';\n\nfunction escapePath(path) {\n    return path.replace(/[\\(\\)'\"\\s]/g, function(match) { return `\\\\${match}`; });\n}\n\nconst URL = function(val, index, currentFileInfo, isEvald) {\n    this.value = val;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.isEvald = isEvald;\n};\n\nURL.prototype = Object.assign(new Node(), {\n    type: 'Url',\n\n    accept(visitor) {\n        this.value = visitor.visit(this.value);\n    },\n\n    genCSS(context, output) {\n        output.add('url(');\n        this.value.genCSS(context, output);\n        output.add(')');\n    },\n\n    eval(context) {\n        const val = this.value.eval(context);\n        let rootpath;\n\n        if (!this.isEvald) {\n            // Add the rootpath if the URL requires a rewrite\n            rootpath = this.fileInfo() && this.fileInfo().rootpath;\n            if (typeof rootpath === 'string' &&\n                typeof val.value === 'string' &&\n                context.pathRequiresRewrite(val.value))\u00A0{\n                if (!val.quote) {\n                    rootpath = escapePath(rootpath);\n                }\n                val.value = context.rewritePath(val.value, rootpath);\n            } else {\n                val.value = context.normalizePath(val.value);\n            }\n\n            // Add url args if enabled\n            if (context.urlArgs) {\n                if (!val.value.match(/^\\s*data:/)) {\n                    const delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n                    const urlArgs = delimiter + context.urlArgs;\n                    if (val.value.indexOf('#') !== -1) {\n                        val.value = val.value.replace('#', `${urlArgs}#`);\n                    } else {\n                        val.value += urlArgs;\n                    }\n                }\n            }\n        }\n\n        return new URL(val, this.getIndex(), this.fileInfo(), true);\n    }\n});\n\nexport default URL;\n", "import Ruleset from './ruleset';\nimport Value from './value';\nimport Selector from './selector';\nimport Anonymous from './anonymous';\nimport Expression from './expression';\nimport AtRule from './atrule';\nimport * as utils from '../utils';\n\nconst Media = function(value, features, index, currentFileInfo, visibilityInfo) {\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n\n    const selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\n\n    this.features = new Value(features);\n    this.rules = [new Ruleset(selectors, value)];\n    this.rules[0].allowImports = true;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n    this.setParent(selectors, this);\n    this.setParent(this.features, this);\n    this.setParent(this.rules, this);\n};\n\nMedia.prototype = Object.assign(new AtRule(), {\n    type: 'Media',\n\n    isRulesetLike() {\n        return true;\n    },\n\n    accept(visitor) {\n        if (this.features) {\n            this.features = visitor.visit(this.features);\n        }\n        if (this.rules) {\n            this.rules = visitor.visitArray(this.rules);\n        }\n    },\n\n    genCSS(context, output) {\n        output.add('@media ', this._fileInfo, this._index);\n        this.features.genCSS(context, output);\n        this.outputRuleset(context, output, this.rules);\n    },\n\n    eval(context) {\n        if (!context.mediaBlocks) {\n            context.mediaBlocks = [];\n            context.mediaPath = [];\n        }\n\n        const media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\n        if (this.debugInfo) {\n            this.rules[0].debugInfo = this.debugInfo;\n            media.debugInfo = this.debugInfo;\n        }\n        \n        media.features = this.features.eval(context);\n\n        context.mediaPath.push(media);\n        context.mediaBlocks.push(media);\n\n        this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\n        context.frames.unshift(this.rules[0]);\n        media.rules = [this.rules[0].eval(context)];\n        context.frames.shift();\n\n        context.mediaPath.pop();\n\n        return context.mediaPath.length === 0 ? media.evalTop(context) :\n            media.evalNested(context);\n    },\n\n    evalTop(context) {\n        let result = this;\n\n        // Render all dependent Media blocks.\n        if (context.mediaBlocks.length > 1) {\n            const selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\n            result = new Ruleset(selectors, context.mediaBlocks);\n            result.multiMedia = true;\n            result.copyVisibilityInfo(this.visibilityInfo());\n            this.setParent(result, this);\n        }\n\n        delete context.mediaBlocks;\n        delete context.mediaPath;\n\n        return result;\n    },\n\n    evalNested(context) {\n        let i;\n        let value;\n        const path = context.mediaPath.concat([this]);\n\n        // Extract the media-query conditions separated with `,` (OR).\n        for (i = 0; i < path.length; i++) {\n            value = path[i].features instanceof Value ?\n                path[i].features.value : path[i].features;\n            path[i] = Array.isArray(value) ? value : [value];\n        }\n\n        // Trace all permutations to generate the resulting media-query.\n        //\n        // (a, b and c) with nested (d, e) ->\n        //    a and d\n        //    a and e\n        //    b and c and d\n        //    b and c and e\n        this.features = new Value(this.permute(path).map(path => {\n            path = path.map(fragment => fragment.toCSS ? fragment : new Anonymous(fragment));\n\n            for (i = path.length - 1; i > 0; i--) {\n                path.splice(i, 0, new Anonymous('and'));\n            }\n\n            return new Expression(path);\n        }));\n        this.setParent(this.features, this);\n\n        // Fake a tree-node that doesn't output anything.\n        return new Ruleset([], []);\n    },\n\n    permute(arr) {\n        if (arr.length === 0) {\n            return [];\n        } else if (arr.length === 1) {\n            return arr[0];\n        } else {\n            const result = [];\n            const rest = this.permute(arr.slice(1));\n            for (let i = 0; i < rest.length; i++) {\n                for (let j = 0; j < arr[0].length; j++) {\n                    result.push([arr[0][j]].concat(rest[i]));\n                }\n            }\n            return result;\n        }\n    },\n\n    bubbleSelectors(selectors) {\n        if (!selectors) {\n            return;\n        }\n        this.rules = [new Ruleset(utils.copyArray(selectors), [this.rules[0]])];\n        this.setParent(this.rules, this);\n    }\n});\n\nexport default Media;\n", "import Node from './node';\nimport Media from './media';\nimport URL from './url';\nimport Quoted from './quoted';\nimport Ruleset from './ruleset';\nimport Anonymous from './anonymous';\nimport * as utils from '../utils';\nimport LessError from '../less-error';\n\n//\n// CSS @import node\n//\n// The general strategy here is that we don't want to wait\n// for the parsing to be completed, before we start importing\n// the file. That's because in the context of a browser,\n// most of the time will be spent waiting for the server to respond.\n//\n// On creation, we push the import path to our import queue, though\n// `import,push`, we also pass it a callback, which it'll call once\n// the file has been fetched, and parsed.\n//\nconst Import = function(path, features, options, index, currentFileInfo, visibilityInfo) {\n    this.options = options;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.path = path;\n    this.features = features;\n    this.allowRoot = true;\n\n    if (this.options.less !== undefined || this.options.inline) {\n        this.css = !this.options.less || this.options.inline;\n    } else {\n        const pathValue = this.getPath();\n        if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\n            this.css = true;\n        }\n    }\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.features, this);\n    this.setParent(this.path, this);\n};\n\nImport.prototype = Object.assign(new Node(), {\n    type: 'Import',\n\n    accept(visitor) {\n        if (this.features) {\n            this.features = visitor.visit(this.features);\n        }\n        this.path = visitor.visit(this.path);\n        if (!this.options.isPlugin && !this.options.inline && this.root) {\n            this.root = visitor.visit(this.root);\n        }\n    },\n\n    genCSS(context, output) {\n        if (this.css && this.path._fileInfo.reference === undefined) {\n            output.add('@import ', this._fileInfo, this._index);\n            this.path.genCSS(context, output);\n            if (this.features) {\n                output.add(' ');\n                this.features.genCSS(context, output);\n            }\n            output.add(';');\n        }\n    },\n\n    getPath() {\n        return (this.path instanceof URL) ?\n            this.path.value.value : this.path.value;\n    },\n\n    isVariableImport() {\n        let path = this.path;\n        if (path instanceof URL) {\n            path = path.value;\n        }\n        if (path instanceof Quoted) {\n            return path.containsVariables();\n        }\n\n        return true;\n    },\n\n    evalForImport(context) {\n        let path = this.path;\n\n        if (path instanceof URL) {\n            path = path.value;\n        }\n\n        return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\n    },\n\n    evalPath(context) {\n        const path = this.path.eval(context);\n        const fileInfo = this._fileInfo;\n\n        if (!(path instanceof URL)) {\n            // Add the rootpath if the URL requires a rewrite\n            const pathValue = path.value;\n            if (fileInfo &&\n                pathValue &&\n                context.pathRequiresRewrite(pathValue)) {\n                path.value = context.rewritePath(pathValue, fileInfo.rootpath);\n            } else {\n                path.value = context.normalizePath(path.value);\n            }\n        }\n\n        return path;\n    },\n\n    eval(context) {\n        const result = this.doEval(context);\n        if (this.options.reference || this.blocksVisibility()) {\n            if (result.length || result.length === 0) {\n                result.forEach(function (node) {\n                    node.addVisibilityBlock();\n                }\n                );\n            } else {\n                result.addVisibilityBlock();\n            }\n        }\n        return result;\n    },\n\n    doEval(context) {\n        let ruleset;\n        let registry;\n        const features = this.features && this.features.eval(context);\n\n        if (this.options.isPlugin) {\n            if (this.root && this.root.eval) {\n                try {\n                    this.root.eval(context);\n                }\n                catch (e) {\n                    e.message = 'Plugin error during evaluation';\n                    throw new LessError(e, this.root.imports, this.root.filename);\n                }\n            }\n            registry = context.frames[0] && context.frames[0].functionRegistry;\n            if ( registry && this.root && this.root.functions ) {\n                registry.addMultiple( this.root.functions );\n            }\n\n            return [];\n        }\n\n        if (this.skip) {\n            if (typeof this.skip === 'function') {\n                this.skip = this.skip();\n            }\n            if (this.skip) {\n                return [];\n            }\n        }\n        if (this.options.inline) {\n            const contents = new Anonymous(this.root, 0,\n                {\n                    filename: this.importedFilename,\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\n                }, true, true);\n\n            return this.features ? new Media([contents], this.features.value) : [contents];\n        } else if (this.css) {\n            const newImport = new Import(this.evalPath(context), features, this.options, this._index);\n            if (!newImport.css && this.error) {\n                throw this.error;\n            }\n            return newImport;\n        } else if (this.root) {\n            ruleset = new Ruleset(null, utils.copyArray(this.root.rules));\n            ruleset.evalImports(context);\n\n            return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n        } else {\n            return [];\n        }\n    }\n});\n\nexport default Import;\n", "import Node from './node';\nimport Variable from './variable';\n\nconst JsEvalNode = function() {};\n\nJsEvalNode.prototype = Object.assign(new Node(), {\n    evaluateJavaScript(expression, context) {\n        let result;\n        const that = this;\n        const evalContext = {};\n\n        if (!context.javascriptEnabled) {\n            throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\n                filename: this.fileInfo().filename,\n                index: this.getIndex() };\n        }\n\n        expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\n            return that.jsify(new Variable(`@${name}`, that.getIndex(), that.fileInfo()).eval(context));\n        });\n\n        try {\n            expression = new Function(`return (${expression})`);\n        } catch (e) {\n            throw { message: `JavaScript evaluation error: ${e.message} from \\`${expression}\\`` ,\n                filename: this.fileInfo().filename,\n                index: this.getIndex() };\n        }\n\n        const variables = context.frames[0].variables();\n        for (const k in variables) {\n            if (variables.hasOwnProperty(k)) {\n                /* jshint loopfunc:true */\n                evalContext[k.slice(1)] = {\n                    value: variables[k].value,\n                    toJS: function () {\n                        return this.value.eval(context).toCSS();\n                    }\n                };\n            }\n        }\n\n        try {\n            result = expression.call(evalContext);\n        } catch (e) {\n            throw { message: `JavaScript evaluation error: '${e.name}: ${e.message.replace(/[\"]/g, '\\'')}'` ,\n                filename: this.fileInfo().filename,\n                index: this.getIndex() };\n        }\n        return result;\n    },\n\n    jsify(obj) {\n        if (Array.isArray(obj.value) && (obj.value.length > 1)) {\n            return `[${obj.value.map(function (v) { return v.toCSS(); }).join(', ')}]`;\n        } else {\n            return obj.toCSS();\n        }\n    }\n});\n\nexport default JsEvalNode;\n", "import JsEvalNode from './js-eval-node';\nimport Dimension from './dimension';\nimport Quoted from './quoted';\nimport Anonymous from './anonymous';\n\nconst JavaScript = function(string, escaped, index, currentFileInfo) {\n    this.escaped = escaped;\n    this.expression = string;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n}\n\nJavaScript.prototype = Object.assign(new JsEvalNode(), {\n    type: 'JavaScript',\n\n    eval(context) {\n        const result = this.evaluateJavaScript(this.expression, context);\n        const type = typeof result;\n\n        if (type === 'number' && !isNaN(result)) {\n            return new Dimension(result);\n        } else if (type === 'string') {\n            return new Quoted(`\"${result}\"`, result, this.escaped, this._index);\n        } else if (Array.isArray(result)) {\n            return new Anonymous(result.join(', '));\n        } else {\n            return new Anonymous(result);\n        }\n    }\n});\n\nexport default JavaScript;\n", "import Node from './node';\n\nconst Assignment = function(key, val) {\n    this.key = key;\n    this.value = val;\n}\n\nAssignment.prototype = Object.assign(new Node(), {\n    type: 'Assignment',\n\n    accept(visitor) {\n        this.value = visitor.visit(this.value);\n    },\n\n    eval(context) {\n        if (this.value.eval) {\n            return new Assignment(this.key, this.value.eval(context));\n        }\n        return this;\n    },\n\n    genCSS(context, output) {\n        output.add(`${this.key}=`);\n        if (this.value.genCSS) {\n            this.value.genCSS(context, output);\n        } else {\n            output.add(this.value);\n        }\n    }\n});\n\nexport default Assignment;\n", "import Node from './node';\n\nconst Condition = function(op, l, r, i, negate) {\n    this.op = op.trim();\n    this.lvalue = l;\n    this.rvalue = r;\n    this._index = i;\n    this.negate = negate;\n};\n\nCondition.prototype = Object.assign(new Node(), {\n    type: 'Condition',\n\n    accept(visitor) {\n        this.lvalue = visitor.visit(this.lvalue);\n        this.rvalue = visitor.visit(this.rvalue);\n    },\n\n    eval(context) {\n        const result = (function (op, a, b) {\n            switch (op) {\n                case 'and': return a && b;\n                case 'or':  return a || b;\n                default:\n                    switch (Node.compare(a, b)) {\n                        case -1:\n                            return op === '<' || op === '=<' || op === '<=';\n                        case 0:\n                            return op === '=' || op === '>=' || op === '=<' || op === '<=';\n                        case 1:\n                            return op === '>' || op === '>=';\n                        default:\n                            return false;\n                    }\n            }\n        })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n\n        return this.negate ? !result : result;\n    }\n});\n\nexport default Condition;\n", "import Node from './node';\n\nconst UnicodeDescriptor = function(value) {\n    this.value = value;\n}\n\nUnicodeDescriptor.prototype = Object.assign(new Node(), {\n    type: 'UnicodeDescriptor'\n})\n\nexport default UnicodeDescriptor;\n", "import Node from './node';\nimport Operation from './operation';\nimport Dimension from './dimension';\n\nconst Negative = function(node) {\n    this.value = node;\n};\n\nNegative.prototype = Object.assign(new Node(), {\n    type: 'Negative',\n\n    genCSS(context, output) {\n        output.add('-');\n        this.value.genCSS(context, output);\n    },\n\n    eval(context) {\n        if (context.isMathOn()) {\n            return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\n        }\n        return new Negative(this.value.eval(context));\n    }\n});\n\nexport default Negative;\n", "import Node from './node';\nimport Selector from './selector';\n\nconst Extend = function(selector, option, index, currentFileInfo, visibilityInfo) {\n    this.selector = selector;\n    this.option = option;\n    this.object_id = Extend.next_id++;\n    this.parent_ids = [this.object_id];\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n\n    switch (option) {\n        case 'all':\n            this.allowBefore = true;\n            this.allowAfter = true;\n            break;\n        default:\n            this.allowBefore = false;\n            this.allowAfter = false;\n            break;\n    }\n    this.setParent(this.selector, this);\n};\n\nExtend.prototype = Object.assign(new Node(), {\n    type: 'Extend',\n\n    accept(visitor) {\n        this.selector = visitor.visit(this.selector);\n    },\n\n    eval(context) {\n        return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n    },\n\n    clone(context) {\n        return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n    },\n\n    // it concatenates (joins) all selectors in selector array\n    findSelfSelectors(selectors) {\n        let selfElements = [], i, selectorElements;\n\n        for (i = 0; i < selectors.length; i++) {\n            selectorElements = selectors[i].elements;\n            // duplicate the logic in genCSS function inside the selector node.\n            // future TODO - move both logics into the selector joiner visitor\n            if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\n                selectorElements[0].combinator.value = ' ';\n            }\n            selfElements = selfElements.concat(selectors[i].elements);\n        }\n\n        this.selfSelectors = [new Selector(selfElements)];\n        this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n    }\n});\n\nExtend.next_id = 0;\nexport default Extend;\n", "import Node from './node';\nimport Variable from './variable';\nimport Ruleset from './ruleset';\nimport DetachedRuleset from './detached-ruleset';\nimport LessError from '../less-error';\n\nconst VariableCall = function(variable, index, currentFileInfo) {\n    this.variable = variable;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.allowRoot = true;\n};\n\nVariableCall.prototype = Object.assign(new Node(), {\n    type: 'VariableCall',\n\n    eval(context) {\n        let rules;\n        let detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\n        const error = new LessError({message: `Could not evaluate variable call ${this.variable}`});\n\n        if (!detachedRuleset.ruleset) {\n            if (detachedRuleset.rules) {\n                rules = detachedRuleset;\n            }\n            else if (Array.isArray(detachedRuleset)) {\n                rules = new Ruleset('', detachedRuleset);\n            }\n            else if (Array.isArray(detachedRuleset.value)) {\n                rules = new Ruleset('', detachedRuleset.value);\n            }\n            else {\n                throw error;\n            }\n            detachedRuleset = new DetachedRuleset(rules);\n        }\n\n        if (detachedRuleset.ruleset) {\n            return detachedRuleset.callEval(context);\n        }\n        throw error;\n    }\n});\n\nexport default VariableCall;\n", "import Node from './node';\nimport Variable from './variable';\nimport Ruleset from './ruleset';\nimport Selector from './selector';\n\nconst NamespaceValue = function(ruleCall, lookups, index, fileInfo) {\n    this.value = ruleCall;\n    this.lookups = lookups;\n    this._index = index;\n    this._fileInfo = fileInfo;\n};\n\nNamespaceValue.prototype = Object.assign(new Node(), {\n    type: 'NamespaceValue',\n\n    eval(context) {\n        let i, j, name, rules = this.value.eval(context);\n        \n        for (i = 0; i < this.lookups.length; i++) {\n            name = this.lookups[i];\n\n            /**\n             * Eval'd DRs return rulesets.\n             * Eval'd mixins return rules, so let's make a ruleset if we need it.\n             * We need to do this because of late parsing of values\n             */\n            if (Array.isArray(rules)) {\n                rules = new Ruleset([new Selector()], rules);\n            }\n\n            if (name === '') {\n                rules = rules.lastDeclaration();\n            }\n            else if (name.charAt(0) === '@') {\n                if (name.charAt(1) === '@') {\n                    name = `@${new Variable(name.substr(1)).eval(context).value}`;\n                }\n                if (rules.variables) {\n                    rules = rules.variable(name);\n                }\n                \n                if (!rules) {\n                    throw { type: 'Name',\n                        message: `variable ${name} not found`,\n                        filename: this.fileInfo().filename,\n                        index: this.getIndex() };\n                }\n            }\n            else {\n                if (name.substring(0, 2) === '$@') {\n                    name = `$${new Variable(name.substr(1)).eval(context).value}`;\n                }\n                else {\n                    name = name.charAt(0) === '$' ? name : `$${name}`;\n                }\n                if (rules.properties) {\n                    rules = rules.property(name);\n                }\n            \n                if (!rules) {\n                    throw { type: 'Name',\n                        message: `property \"${name.substr(1)}\" not found`,\n                        filename: this.fileInfo().filename,\n                        index: this.getIndex() };\n                }\n                // Properties are an array of values, since a ruleset can have multiple props.\n                // We pick the last one (the \"cascaded\" value)\n                rules = rules[rules.length - 1];\n            }\n\n            if (rules.value) {\n                rules = rules.eval(context).value;\n            }\n            if (rules.ruleset) {\n                rules = rules.ruleset.eval(context);\n            }\n        }\n        return rules;\n    }\n});\n\nexport default NamespaceValue;\n", "import Selector from './selector';\nimport Element from './element';\nimport Ruleset from './ruleset';\nimport Declaration from './declaration';\nimport DetachedRuleset from './detached-ruleset';\nimport Expression from './expression';\nimport contexts from '../contexts';\nimport * as utils from '../utils';\n\nconst Definition = function(name, params, rules, condition, variadic, frames, visibilityInfo) {\n    this.name = name || 'anonymous mixin';\n    this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\n    this.params = params;\n    this.condition = condition;\n    this.variadic = variadic;\n    this.arity = params.length;\n    this.rules = rules;\n    this._lookups = {};\n    const optionalParameters = [];\n    this.required = params.reduce(function (count, p) {\n        if (!p.name || (p.name && !p.value)) {\n            return count + 1;\n        }\n        else {\n            optionalParameters.push(p.name);\n            return count;\n        }\n    }, 0);\n    this.optionalParameters = optionalParameters;\n    this.frames = frames;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n}\n\nDefinition.prototype = Object.assign(new Ruleset(), {\n    type: 'MixinDefinition',\n    evalFirst: true,\n\n    accept(visitor) {\n        if (this.params && this.params.length) {\n            this.params = visitor.visitArray(this.params);\n        }\n        this.rules = visitor.visitArray(this.rules);\n        if (this.condition) {\n            this.condition = visitor.visit(this.condition);\n        }\n    },\n\n    evalParams(context, mixinEnv, args, evaldArguments) {\n        /* jshint boss:true */\n        const frame = new Ruleset(null, null);\n\n        let varargs;\n        let arg;\n        const params = utils.copyArray(this.params);\n        let i;\n        let j;\n        let val;\n        let name;\n        let isNamedFound;\n        let argIndex;\n        let argsLength = 0;\n\n        if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\n            frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\n        }\n        mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\n\n        if (args) {\n            args = utils.copyArray(args);\n            argsLength = args.length;\n\n            for (i = 0; i < argsLength; i++) {\n                arg = args[i];\n                if (name = (arg && arg.name)) {\n                    isNamedFound = false;\n                    for (j = 0; j < params.length; j++) {\n                        if (!evaldArguments[j] && name === params[j].name) {\n                            evaldArguments[j] = arg.value.eval(context);\n                            frame.prependRule(new Declaration(name, arg.value.eval(context)));\n                            isNamedFound = true;\n                            break;\n                        }\n                    }\n                    if (isNamedFound) {\n                        args.splice(i, 1);\n                        i--;\n                        continue;\n                    } else {\n                        throw { type: 'Runtime', message: `Named argument for ${this.name} ${args[i].name} not found` };\n                    }\n                }\n            }\n        }\n        argIndex = 0;\n        for (i = 0; i < params.length; i++) {\n            if (evaldArguments[i]) { continue; }\n\n            arg = args && args[argIndex];\n\n            if (name = params[i].name) {\n                if (params[i].variadic) {\n                    varargs = [];\n                    for (j = argIndex; j < argsLength; j++) {\n                        varargs.push(args[j].value.eval(context));\n                    }\n                    frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\n                } else {\n                    val = arg && arg.value;\n                    if (val) {\n                        // This was a mixin call, pass in a detached ruleset of it's eval'd rules\n                        if (Array.isArray(val)) {\n                            val = new DetachedRuleset(new Ruleset('', val));\n                        }\n                        else {\n                            val = val.eval(context);\n                        }\n                    } else if (params[i].value) {\n                        val = params[i].value.eval(mixinEnv);\n                        frame.resetCache();\n                    } else {\n                        throw { type: 'Runtime', message: `wrong number of arguments for ${this.name} (${argsLength} for ${this.arity})` };\n                    }\n\n                    frame.prependRule(new Declaration(name, val));\n                    evaldArguments[i] = val;\n                }\n            }\n\n            if (params[i].variadic && args) {\n                for (j = argIndex; j < argsLength; j++) {\n                    evaldArguments[j] = args[j].value.eval(context);\n                }\n            }\n            argIndex++;\n        }\n\n        return frame;\n    },\n\n    makeImportant() {\n        const rules = !this.rules ? this.rules : this.rules.map(function (r) {\n            if (r.makeImportant) {\n                return r.makeImportant(true);\n            } else {\n                return r;\n            }\n        });\n        const result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\n        return result;\n    },\n\n    eval(context) {\n        return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || utils.copyArray(context.frames));\n    },\n\n    evalCall(context, args, important) {\n        const _arguments = [];\n        const mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\n        const frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\n        let rules;\n        let ruleset;\n\n        frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\n\n        rules = utils.copyArray(this.rules);\n\n        ruleset = new Ruleset(null, rules);\n        ruleset.originalRuleset = this;\n        ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\n        if (important) {\n            ruleset = ruleset.makeImportant();\n        }\n        return ruleset;\n    },\n\n    matchCondition(args, context) {\n        if (this.condition && !this.condition.eval(\n            new contexts.Eval(context,\n                [this.evalParams(context, /* the parameter variables */\n                    new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\n                    .concat(this.frames || []) // the parent namespace/mixin frames\n                    .concat(context.frames)))) { // the current environment frames\n            return false;\n        }\n        return true;\n    },\n\n    matchArgs(args, context) {\n        const allArgsCnt = (args && args.length) || 0;\n        let len;\n        const optionalParameters = this.optionalParameters;\n        const requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\n            if (optionalParameters.indexOf(p.name) < 0) {\n                return count + 1;\n            } else {\n                return count;\n            }\n        }, 0);\n\n        if (!this.variadic) {\n            if (requiredArgsCnt < this.required) {\n                return false;\n            }\n            if (allArgsCnt > this.params.length) {\n                return false;\n            }\n        } else {\n            if (requiredArgsCnt < (this.required - 1)) {\n                return false;\n            }\n        }\n\n        // check patterns\n        len = Math.min(requiredArgsCnt, this.arity);\n\n        for (let i = 0; i < len; i++) {\n            if (!this.params[i].name && !this.params[i].variadic) {\n                if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n});\n\nexport default Definition;\n", "import Node from './node';\nimport Selector from './selector';\nimport MixinDefinition from './mixin-definition';\nimport defaultFunc from '../functions/default';\n\nconst MixinCall = function(elements, args, index, currentFileInfo, important) {\n    this.selector = new Selector(elements);\n    this.arguments = args || [];\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.important = important;\n    this.allowRoot = true;\n    this.setParent(this.selector, this);\n};\n\nMixinCall.prototype = Object.assign(new Node(), {\n    type: 'MixinCall',\n\n    accept(visitor) {\n        if (this.selector) {\n            this.selector = visitor.visit(this.selector);\n        }\n        if (this.arguments.length) {\n            this.arguments = visitor.visitArray(this.arguments);\n        }\n    },\n\n    eval(context) {\n        let mixins;\n        let mixin;\n        let mixinPath;\n        const args = [];\n        let arg;\n        let argValue;\n        const rules = [];\n        let match = false;\n        let i;\n        let m;\n        let f;\n        let isRecursive;\n        let isOneFound;\n        const candidates = [];\n        let candidate;\n        const conditionResult = [];\n        let defaultResult;\n        const defFalseEitherCase = -1;\n        const defNone = 0;\n        const defTrue = 1;\n        const defFalse = 2;\n        let count;\n        let originalRuleset;\n        let noArgumentsFilter;\n\n        this.selector = this.selector.eval(context);\n\n        function calcDefGroup(mixin, mixinPath) {\n            let f, p, namespace;\n\n            for (f = 0; f < 2; f++) {\n                conditionResult[f] = true;\n                defaultFunc.value(f);\n                for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n                    namespace = mixinPath[p];\n                    if (namespace.matchCondition) {\n                        conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n                    }\n                }\n                if (mixin.matchCondition) {\n                    conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n                }\n            }\n            if (conditionResult[0] || conditionResult[1]) {\n                if (conditionResult[0] != conditionResult[1]) {\n                    return conditionResult[1] ?\n                        defTrue : defFalse;\n                }\n\n                return defNone;\n            }\n            return defFalseEitherCase;\n        }\n\n        for (i = 0; i < this.arguments.length; i++) {\n            arg = this.arguments[i];\n            argValue = arg.value.eval(context);\n            if (arg.expand && Array.isArray(argValue.value)) {\n                argValue = argValue.value;\n                for (m = 0; m < argValue.length; m++) {\n                    args.push({value: argValue[m]});\n                }\n            } else {\n                args.push({name: arg.name, value: argValue});\n            }\n        }\n\n        noArgumentsFilter = function(rule) {return rule.matchArgs(null, context);};\n\n        for (i = 0; i < context.frames.length; i++) {\n            if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n                isOneFound = true;\n\n                // To make `default()` function independent of definition order we have two \"subpasses\" here.\n                // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n                // and build candidate list with corresponding flags. Then, when we know all possible matches,\n                // we make a final decision.\n\n                for (m = 0; m < mixins.length; m++) {\n                    mixin = mixins[m].rule;\n                    mixinPath = mixins[m].path;\n                    isRecursive = false;\n                    for (f = 0; f < context.frames.length; f++) {\n                        if ((!(mixin instanceof MixinDefinition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                            isRecursive = true;\n                            break;\n                        }\n                    }\n                    if (isRecursive) {\n                        continue;\n                    }\n\n                    if (mixin.matchArgs(args, context)) {\n                        candidate = {mixin, group: calcDefGroup(mixin, mixinPath)};\n\n                        if (candidate.group !== defFalseEitherCase) {\n                            candidates.push(candidate);\n                        }\n\n                        match = true;\n                    }\n                }\n\n                defaultFunc.reset();\n\n                count = [0, 0, 0];\n                for (m = 0; m < candidates.length; m++) {\n                    count[candidates[m].group]++;\n                }\n\n                if (count[defNone] > 0) {\n                    defaultResult = defFalse;\n                } else {\n                    defaultResult = defTrue;\n                    if ((count[defTrue] + count[defFalse]) > 1) {\n                        throw { type: 'Runtime',\n                            message: `Ambiguous use of \\`default()\\` found when matching for \\`${this.format(args)}\\``,\n                            index: this.getIndex(), filename: this.fileInfo().filename };\n                    }\n                }\n\n                for (m = 0; m < candidates.length; m++) {\n                    candidate = candidates[m].group;\n                    if ((candidate === defNone) || (candidate === defaultResult)) {\n                        try {\n                            mixin = candidates[m].mixin;\n                            if (!(mixin instanceof MixinDefinition)) {\n                                originalRuleset = mixin.originalRuleset || mixin;\n                                mixin = new MixinDefinition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                                mixin.originalRuleset = originalRuleset;\n                            }\n                            const newRules = mixin.evalCall(context, args, this.important).rules;\n                            this._setVisibilityToReplacement(newRules);\n                            Array.prototype.push.apply(rules, newRules);\n                        } catch (e) {\n                            throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\n                        }\n                    }\n                }\n\n                if (match) {\n                    return rules;\n                }\n            }\n        }\n        if (isOneFound) {\n            throw { type:    'Runtime',\n                message: `No matching definition was found for \\`${this.format(args)}\\``,\n                index:   this.getIndex(), filename: this.fileInfo().filename };\n        } else {\n            throw { type:    'Name',\n                message: `${this.selector.toCSS().trim()} is undefined`,\n                index:   this.getIndex(), filename: this.fileInfo().filename };\n        }\n    },\n\n    _setVisibilityToReplacement(replacement) {\n        let i, rule;\n        if (this.blocksVisibility()) {\n            for (i = 0; i < replacement.length; i++) {\n                rule = replacement[i];\n                rule.addVisibilityBlock();\n            }\n        }\n    },\n\n    format(args) {\n        return `${this.selector.toCSS().trim()}(${args ? args.map(function (a) {\n            let argValue = '';\n            if (a.name) {\n                argValue += `${a.name}:`;\n            }\n            if (a.value.toCSS) {\n                argValue += a.value.toCSS();\n            } else {\n                argValue += '???';\n            }\n            return argValue;\n        }).join(', ') : ''})`;\n    }\n});\n\nexport default MixinCall;\n", "import Node from './node';\nimport Color from './color';\nimport AtRule from './atrule';\nimport DetachedRuleset from './detached-ruleset';\nimport Operation from './operation';\nimport Dimension from './dimension';\nimport Unit from './unit';\nimport Keyword from './keyword';\nimport Variable from './variable';\nimport Property from './property';\nimport Ruleset from './ruleset';\nimport Element from './element';\nimport Attribute from './attribute';\nimport Combinator from './combinator';\nimport Selector from './selector';\nimport Quoted from './quoted';\nimport Expression from './expression';\nimport Declaration from './declaration';\nimport Call from './call';\nimport URL from './url';\nimport Import from './import';\nimport Comment from './comment';\nimport Anonymous from './anonymous';\nimport Value from './value';\nimport JavaScript from './javascript';\nimport Assignment from './assignment';\nimport Condition from './condition';\nimport Paren from './paren';\nimport Media from './media';\nimport UnicodeDescriptor from './unicode-descriptor';\nimport Negative from './negative';\nimport Extend from './extend';\nimport VariableCall from './variable-call';\nimport NamespaceValue from './namespace-value';\n\n// mixins\nimport MixinCall from './mixin-call';\nimport MixinDefinition from './mixin-definition';\n\nexport default {\n    Node, Color, AtRule, DetachedRuleset, Operation,\n    Dimension, Unit, Keyword, Variable, Property,\n    Ruleset, Element, Attribute, Combinator, Selector,\n    Quoted, Expression, Declaration, Call, URL, Import,\n    Comment, Anonymous, Value, JavaScript, Assignment,\n    Condition, Paren, Media, UnicodeDescriptor, Negative,\n    Extend, VariableCall, NamespaceValue,\n    mixin: {\n        Call: MixinCall,\n        Definition: MixinDefinition\n    }\n};", "import functionRegistry from '../functions/function-registry';\nimport LessError from '../less-error';\n\nclass AbstractPluginLoader {\n    constructor() {\n        // Implemented by Node.js plugin loader\n        this.require = function() {\n            return null;\n        }\n    }\n\n    evalPlugin(contents, context, imports, pluginOptions, fileInfo) {\n\n        let loader, registry, pluginObj, localModule, pluginManager, filename, result;\n\n        pluginManager = context.pluginManager;\n\n        if (fileInfo) {\n            if (typeof fileInfo === 'string') {\n                filename = fileInfo;\n            }\n            else {\n                filename = fileInfo.filename;\n            }\n        }\n        const shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\n\n        if (filename) {\n            pluginObj = pluginManager.get(filename);\n\n            if (pluginObj) {\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n                if (result) {\n                    return result;\n                }\n                try {\n                    if (pluginObj.use) {\n                        pluginObj.use.call(this.context, pluginObj);\n                    }\n                }\n                catch (e) {\n                    e.message = e.message || 'Error during @plugin call';\n                    return new LessError(e, imports, filename);\n                }\n                return pluginObj;\n            }\n        }\n        localModule = {\n            exports: {},\n            pluginManager,\n            fileInfo\n        };\n        registry = functionRegistry.create();\n\n        const registerPlugin = function(obj) {\n            pluginObj = obj;\n        };\n\n        try {\n            loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\n            loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\n        }\n        catch (e) {\n            return new LessError(e, imports, filename);\n        }\n\n        if (!pluginObj) {\n            pluginObj = localModule.exports;\n        }\n        pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n\n        if (pluginObj instanceof LessError) {\n            return pluginObj;\n        }\n\n        if (pluginObj) {\n            pluginObj.imports = imports;\n            pluginObj.filename = filename;\n\n            // For < 3.x (or unspecified minVersion) - setOptions() before install()\n            if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n                if (result) {\n                    return result;\n                }\n            }\n\n            // Run on first load\n            pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n            pluginObj.functions = registry.getLocalFunctions();\n\n            // Need to call setOptions again because the pluginObj might have functions\n            result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n            if (result) {\n                return result;\n            }\n\n            // Run every @plugin call\n            try {\n                if (pluginObj.use) {\n                    pluginObj.use.call(this.context, pluginObj);\n                }\n            }\n            catch (e) {\n                e.message = e.message || 'Error during @plugin call';\n                return new LessError(e, imports, filename);\n            }\n\n        }\n        else {\n            return new LessError({ message: 'Not a valid plugin' }, imports, filename);\n        }\n\n        return pluginObj;\n\n    }\n\n    trySetOptions(plugin, filename, name, options) {\n        if (options && !plugin.setOptions) {\n            return new LessError({\n                message: `Options have been provided but the plugin ${name} does not support any options.`\n            });\n        }\n        try {\n            plugin.setOptions && plugin.setOptions(options);\n        }\n        catch (e) {\n            return new LessError(e);\n        }\n    }\n\n    validatePlugin(plugin, filename, name) {\n        if (plugin) {\n            // support plugins being a function\n            // so that the plugin can be more usable programmatically\n            if (typeof plugin === 'function') {\n                plugin = new plugin();\n            }\n\n            if (plugin.minVersion) {\n                if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n                    return new LessError({\n                        message: `Plugin ${name} requires version ${this.versionToString(plugin.minVersion)}`\n                    });\n                }\n            }\n            return plugin;\n        }\n        return null;\n    }\n\n    compareVersion(aVersion, bVersion) {\n        if (typeof aVersion === 'string') {\n            aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n            aVersion.shift();\n        }\n        for (let i = 0; i < aVersion.length; i++) {\n            if (aVersion[i] !== bVersion[i]) {\n                return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n            }\n        }\n        return 0;\n    }\n\n    versionToString(version) {\n        let versionString = '';\n        for (let i = 0; i < version.length; i++) {\n            versionString += (versionString ? '.' : '') + version[i];\n        }\n        return versionString;\n    }\n\n    printUsage(plugins) {\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.printUsage) {\n                plugin.printUsage();\n            }\n        }\n    }\n}\n\nexport default AbstractPluginLoader;\n\n", "import tree from '../tree';\n\nconst _visitArgs = { visitDeeper: true };\nlet _hasIndexed = false;\n\nfunction _noop(node) {\n    return node;\n}\n\nfunction indexNodeTypes(parent, ticker) {\n    // add .typeIndex to tree node types for lookup table\n    let key, child;\n    for (key in parent) { \n        /* eslint guard-for-in: 0 */\n        child = parent[key];\n        switch (typeof child) {\n            case 'function':\n                // ignore bound functions directly on tree which do not have a prototype\n                // or aren't nodes\n                if (child.prototype && child.prototype.type) {\n                    child.prototype.typeIndex = ticker++;\n                }\n                break;\n            case 'object':\n                ticker = indexNodeTypes(child, ticker);\n                break;\n        \n        }\n    }\n    return ticker;\n}\n\nclass Visitor {\n    constructor(implementation) {\n        this._implementation = implementation;\n        this._visitInCache = {};\n        this._visitOutCache = {};\n\n        if (!_hasIndexed) {\n            indexNodeTypes(tree, 1);\n            _hasIndexed = true;\n        }\n    }\n\n    visit(node) {\n        if (!node) {\n            return node;\n        }\n\n        const nodeTypeIndex = node.typeIndex;\n        if (!nodeTypeIndex) {\n            // MixinCall args aren't a node type?\n            if (node.value && node.value.typeIndex) {\n                this.visit(node.value);\n            }\n            return node;\n        }\n\n        const impl = this._implementation;\n        let func = this._visitInCache[nodeTypeIndex];\n        let funcOut = this._visitOutCache[nodeTypeIndex];\n        const visitArgs = _visitArgs;\n        let fnName;\n\n        visitArgs.visitDeeper = true;\n\n        if (!func) {\n            fnName = `visit${node.type}`;\n            func = impl[fnName] || _noop;\n            funcOut = impl[`${fnName}Out`] || _noop;\n            this._visitInCache[nodeTypeIndex] = func;\n            this._visitOutCache[nodeTypeIndex] = funcOut;\n        }\n\n        if (func !== _noop) {\n            const newNode = func.call(impl, node, visitArgs);\n            if (node && impl.isReplacing) {\n                node = newNode;\n            }\n        }\n\n        if (visitArgs.visitDeeper && node) {\n            if (node.length) {\n                for (let i = 0, cnt = node.length; i < cnt; i++) {\n                    if (node[i].accept) {\n                        node[i].accept(this);\n                    }\n                }\n            } else if (node.accept) {\n                node.accept(this);\n            }\n        }\n\n        if (funcOut != _noop) {\n            funcOut.call(impl, node);\n        }\n\n        return node;\n    }\n\n    visitArray(nodes, nonReplacing) {\n        if (!nodes) {\n            return nodes;\n        }\n\n        const cnt = nodes.length;\n        let i;\n\n        // Non-replacing\n        if (nonReplacing || !this._implementation.isReplacing) {\n            for (i = 0; i < cnt; i++) {\n                this.visit(nodes[i]);\n            }\n            return nodes;\n        }\n\n        // Replacing\n        const out = [];\n        for (i = 0; i < cnt; i++) {\n            const evald = this.visit(nodes[i]);\n            if (evald === undefined) { continue; }\n            if (!evald.splice) {\n                out.push(evald);\n            } else if (evald.length) {\n                this.flatten(evald, out);\n            }\n        }\n        return out;\n    }\n\n    flatten(arr, out) {\n        if (!out) {\n            out = [];\n        }\n\n        let cnt, i, item, nestedCnt, j, nestedItem;\n\n        for (i = 0, cnt = arr.length; i < cnt; i++) {\n            item = arr[i];\n            if (item === undefined) {\n                continue;\n            }\n            if (!item.splice) {\n                out.push(item);\n                continue;\n            }\n\n            for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n                nestedItem = item[j];\n                if (nestedItem === undefined) {\n                    continue;\n                }\n                if (!nestedItem.splice) {\n                    out.push(nestedItem);\n                } else if (nestedItem.length) {\n                    this.flatten(nestedItem, out);\n                }\n            }\n        }\n\n        return out;\n    }\n}\n\nexport default Visitor;\n", "class ImportSequencer {\n    constructor(onSequencerEmpty) {\n        this.imports = [];\n        this.variableImports = [];\n        this._onSequencerEmpty = onSequencerEmpty;\n        this._currentDepth = 0;\n    }\n\n    addImport(callback) {\n        const importSequencer = this,\n            importItem = {\n                callback,\n                args: null,\n                isReady: false\n            };\n        this.imports.push(importItem);\n        return function() {\n            importItem.args = Array.prototype.slice.call(arguments, 0);\n            importItem.isReady = true;\n            importSequencer.tryRun();\n        };\n    }\n\n    addVariableImport(callback) {\n        this.variableImports.push(callback);\n    }\n\n    tryRun() {\n        this._currentDepth++;\n        try {\n            while (true) {\n                while (this.imports.length > 0) {\n                    const importItem = this.imports[0];\n                    if (!importItem.isReady) {\n                        return;\n                    }\n                    this.imports = this.imports.slice(1);\n                    importItem.callback.apply(null, importItem.args);\n                }\n                if (this.variableImports.length === 0) {\n                    break;\n                }\n                const variableImport = this.variableImports[0];\n                this.variableImports = this.variableImports.slice(1);\n                variableImport();\n            }\n        } finally {\n            this._currentDepth--;\n        }\n        if (this._currentDepth === 0 && this._onSequencerEmpty) {\n            this._onSequencerEmpty();\n        }\n    }\n}\n\nexport default ImportSequencer;\n", "import contexts from '../contexts';\nimport Visitor from './visitor';\nimport ImportSequencer from './import-sequencer';\nimport * as utils from '../utils';\n\nconst ImportVisitor = function(importer, finish) {\n\n    this._visitor = new Visitor(this);\n    this._importer = importer;\n    this._finish = finish;\n    this.context = new contexts.Eval();\n    this.importCount = 0;\n    this.onceFileDetectionMap = {};\n    this.recursionDetector = {};\n    this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n};\n\nImportVisitor.prototype = {\n    isReplacing: false,\n    run: function (root) {\n        try {\n            // process the contents\n            this._visitor.visit(root);\n        }\n        catch (e) {\n            this.error = e;\n        }\n\n        this.isFinished = true;\n        this._sequencer.tryRun();\n    },\n    _onSequencerEmpty: function() {\n        if (!this.isFinished) {\n            return;\n        }\n        this._finish(this.error);\n    },\n    visitImport: function (importNode, visitArgs) {\n        const inlineCSS = importNode.options.inline;\n\n        if (!importNode.css || inlineCSS) {\n\n            const context = new contexts.Eval(this.context, utils.copyArray(this.context.frames));\n            const importParent = context.frames[0];\n\n            this.importCount++;\n            if (importNode.isVariableImport()) {\n                this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n            } else {\n                this.processImportNode(importNode, context, importParent);\n            }\n        }\n        visitArgs.visitDeeper = false;\n    },\n    processImportNode: function(importNode, context, importParent) {\n        let evaldImportNode;\n        const inlineCSS = importNode.options.inline;\n\n        try {\n            evaldImportNode = importNode.evalForImport(context);\n        } catch (e) {\n            if (!e.filename) { e.index = importNode.getIndex(); e.filename = importNode.fileInfo().filename; }\n            // attempt to eval properly and treat as css\n            importNode.css = true;\n            // if that fails, this error will be thrown\n            importNode.error = e;\n        }\n\n        if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n\n            if (evaldImportNode.options.multiple) {\n                context.importMultiple = true;\n            }\n\n            // try appending if we haven't determined if it is css or not\n            const tryAppendLessExtension = evaldImportNode.css === undefined;\n\n            for (let i = 0; i < importParent.rules.length; i++) {\n                if (importParent.rules[i] === importNode) {\n                    importParent.rules[i] = evaldImportNode;\n                    break;\n                }\n            }\n\n            const onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\n\n            this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(),\n                evaldImportNode.options, sequencedOnImported);\n        } else {\n            this.importCount--;\n            if (this.isFinished) {\n                this._sequencer.tryRun();\n            }\n        }\n    },\n    onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\n        if (e) {\n            if (!e.filename) {\n                e.index = importNode.getIndex(); e.filename = importNode.fileInfo().filename;\n            }\n            this.error = e;\n        }\n\n        const importVisitor = this,\n            inlineCSS = importNode.options.inline,\n            isPlugin = importNode.options.isPlugin,\n            isOptional = importNode.options.optional,\n            duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n\n        if (!context.importMultiple) {\n            if (duplicateImport) {\n                importNode.skip = true;\n            } else {\n                importNode.skip = function() {\n                    if (fullPath in importVisitor.onceFileDetectionMap) {\n                        return true;\n                    }\n                    importVisitor.onceFileDetectionMap[fullPath] = true;\n                    return false;\n                };\n            }\n        }\n\n        if (!fullPath && isOptional) {\n            importNode.skip = true;\n        }\n\n        if (root) {\n            importNode.root = root;\n            importNode.importedFilename = fullPath;\n\n            if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n                importVisitor.recursionDetector[fullPath] = true;\n\n                const oldContext = this.context;\n                this.context = context;\n                try {\n                    this._visitor.visit(root);\n                } catch (e) {\n                    this.error = e;\n                }\n                this.context = oldContext;\n            }\n        }\n\n        importVisitor.importCount--;\n\n        if (importVisitor.isFinished) {\n            importVisitor._sequencer.tryRun();\n        }\n    },\n    visitDeclaration: function (declNode, visitArgs) {\n        if (declNode.value.type === 'DetachedRuleset') {\n            this.context.frames.unshift(declNode);\n        } else {\n            visitArgs.visitDeeper = false;\n        }\n    },\n    visitDeclarationOut: function(declNode) {\n        if (declNode.value.type === 'DetachedRuleset') {\n            this.context.frames.shift();\n        }\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        this.context.frames.unshift(atRuleNode);\n    },\n    visitAtRuleOut: function (atRuleNode) {\n        this.context.frames.shift();\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        this.context.frames.unshift(mixinDefinitionNode);\n    },\n    visitMixinDefinitionOut: function (mixinDefinitionNode) {\n        this.context.frames.shift();\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        this.context.frames.unshift(rulesetNode);\n    },\n    visitRulesetOut: function (rulesetNode) {\n        this.context.frames.shift();\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        this.context.frames.unshift(mediaNode.rules[0]);\n    },\n    visitMediaOut: function (mediaNode) {\n        this.context.frames.shift();\n    }\n};\nexport default ImportVisitor;\n", "class SetTreeVisibilityVisitor {\n    constructor(visible) {\n        this.visible = visible;\n    }\n\n    run(root) {\n        this.visit(root);\n    }\n\n    visitArray(nodes) {\n        if (!nodes) {\n            return nodes;\n        }\n\n        const cnt = nodes.length;\n        let i;\n        for (i = 0; i < cnt; i++) {\n            this.visit(nodes[i]);\n        }\n        return nodes;\n    }\n\n    visit(node) {\n        if (!node) {\n            return node;\n        }\n        if (node.constructor === Array) {\n            return this.visitArray(node);\n        }\n\n        if (!node.blocksVisibility || node.blocksVisibility()) {\n            return node;\n        }\n        if (this.visible) {\n            node.ensureVisibility();\n        } else {\n            node.ensureInvisibility();\n        }\n\n        node.accept(this);\n        return node;\n    }\n}\n\nexport default SetTreeVisibilityVisitor;", "import tree from '../tree';\nimport Visitor from './visitor';\nimport logger from '../logger';\nimport * as utils from '../utils';\n\n/* jshint loopfunc:true */\n\nclass ExtendFinderVisitor {\n    constructor() {\n        this._visitor = new Visitor(this);\n        this.contexts = [];\n        this.allExtendsStack = [[]];\n    }\n\n    run(root) {\n        root = this._visitor.visit(root);\n        root.allExtends = this.allExtendsStack[0];\n        return root;\n    }\n\n    visitDeclaration(declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitRuleset(rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n            return;\n        }\n\n        let i;\n        let j;\n        let extend;\n        const allSelectorsExtendList = [];\n        let extendList;\n\n        // get &:extend(.a); rules which apply to all selectors in this ruleset\n        const rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\n        for (i = 0; i < ruleCnt; i++) {\n            if (rulesetNode.rules[i] instanceof tree.Extend) {\n                allSelectorsExtendList.push(rules[i]);\n                rulesetNode.extendOnEveryPath = true;\n            }\n        }\n\n        // now find every selector and apply the extends that apply to all extends\n        // and the ones which apply to an individual extend\n        const paths = rulesetNode.paths;\n        for (i = 0; i < paths.length; i++) {\n            const selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\n\n            extendList = selExtendList ? utils.copyArray(selExtendList).concat(allSelectorsExtendList)\n                : allSelectorsExtendList;\n\n            if (extendList) {\n                extendList = extendList.map(function(allSelectorsExtend) {\n                    return allSelectorsExtend.clone();\n                });\n            }\n\n            for (j = 0; j < extendList.length; j++) {\n                this.foundExtends = true;\n                extend = extendList[j];\n                extend.findSelfSelectors(selectorPath);\n                extend.ruleset = rulesetNode;\n                if (j === 0) { extend.firstExtendOnThisSelectorPath = true; }\n                this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n            }\n        }\n\n        this.contexts.push(rulesetNode.selectors);\n    }\n\n    visitRulesetOut(rulesetNode) {\n        if (!rulesetNode.root) {\n            this.contexts.length = this.contexts.length - 1;\n        }\n    }\n\n    visitMedia(mediaNode, visitArgs) {\n        mediaNode.allExtends = [];\n        this.allExtendsStack.push(mediaNode.allExtends);\n    }\n\n    visitMediaOut(mediaNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    }\n\n    visitAtRule(atRuleNode, visitArgs) {\n        atRuleNode.allExtends = [];\n        this.allExtendsStack.push(atRuleNode.allExtends);\n    }\n\n    visitAtRuleOut(atRuleNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    }\n}\n\nclass ProcessExtendsVisitor {\n    constructor() {\n        this._visitor = new Visitor(this);\n    }\n\n    run(root) {\n        const extendFinder = new ExtendFinderVisitor();\n        this.extendIndices = {};\n        extendFinder.run(root);\n        if (!extendFinder.foundExtends) { return root; }\n        root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n        this.allExtendsStack = [root.allExtends];\n        const newRoot = this._visitor.visit(root);\n        this.checkExtendsForNonMatched(root.allExtends);\n        return newRoot;\n    }\n\n    checkExtendsForNonMatched(extendList) {\n        const indices = this.extendIndices;\n        extendList.filter(function(extend) {\n            return !extend.hasFoundMatches && extend.parent_ids.length == 1;\n        }).forEach(function(extend) {\n            let selector = '_unknown_';\n            try {\n                selector = extend.selector.toCSS({});\n            }\n            catch (_) {}\n\n            if (!indices[`${extend.index} ${selector}`]) {\n                indices[`${extend.index} ${selector}`] = true;\n                logger.warn(`extend '${selector}' has no matches`);\n            }\n        });\n    }\n\n    doExtendChaining(extendsList, extendsListTarget, iterationCount) {\n        //\n        // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n        // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n        // this means this new extend can then go and alter other extends\n        //\n        // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n        // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n        // processed if we look at each selector at a time, as is done in visitRuleset\n\n        let extendIndex;\n\n        let targetExtendIndex;\n        let matches;\n        const extendsToAdd = [];\n        let newSelector;\n        const extendVisitor = this;\n        let selectorPath;\n        let extend;\n        let targetExtend;\n        let newExtend;\n\n        iterationCount = iterationCount || 0;\n\n        // loop through comparing every extend with every target extend.\n        // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n        // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n        // and the second is the target.\n        // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n        // case when processing media queries\n        for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n            for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n\n                extend = extendsList[extendIndex];\n                targetExtend = extendsListTarget[targetExtendIndex];\n\n                // look for circular references\n                if ( extend.parent_ids.indexOf( targetExtend.object_id ) >= 0 ) { continue; }\n\n                // find a match in the target extends self selector (the bit before :extend)\n                selectorPath = [targetExtend.selfSelectors[0]];\n                matches = extendVisitor.findMatch(extend, selectorPath);\n\n                if (matches.length) {\n                    extend.hasFoundMatches = true;\n\n                    // we found a match, so for each self selector..\n                    extend.selfSelectors.forEach(function(selfSelector) {\n                        const info = targetExtend.visibilityInfo();\n\n                        // process the extend as usual\n                        newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\n\n                        // but now we create a new extend from it\n                        newExtend = new(tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\n                        newExtend.selfSelectors = newSelector;\n\n                        // add the extend onto the list of extends for that selector\n                        newSelector[newSelector.length - 1].extendList = [newExtend];\n\n                        // record that we need to add it.\n                        extendsToAdd.push(newExtend);\n                        newExtend.ruleset = targetExtend.ruleset;\n\n                        // remember its parents for circular references\n                        newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\n\n                        // only process the selector once.. if we have :extend(.a,.b) then multiple\n                        // extends will look at the same selector path, so when extending\n                        // we know that any others will be duplicates in terms of what is added to the css\n                        if (targetExtend.firstExtendOnThisSelectorPath) {\n                            newExtend.firstExtendOnThisSelectorPath = true;\n                            targetExtend.ruleset.paths.push(newSelector);\n                        }\n                    });\n                }\n            }\n        }\n\n        if (extendsToAdd.length) {\n            // try to detect circular references to stop a stack overflow.\n            // may no longer be needed.\n            this.extendChainCount++;\n            if (iterationCount > 100) {\n                let selectorOne = '{unable to calculate}';\n                let selectorTwo = '{unable to calculate}';\n                try {\n                    selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n                    selectorTwo = extendsToAdd[0].selector.toCSS();\n                }\n                catch (e) {}\n                throw { message: `extend circular reference detected. One of the circular extends is currently:${selectorOne}:extend(${selectorTwo})`};\n            }\n\n            // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n            // d extending e...\n            return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n        } else {\n            return extendsToAdd;\n        }\n    }\n\n    visitDeclaration(ruleNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitSelector(selectorNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitRuleset(rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n            return;\n        }\n        let matches;\n        let pathIndex;\n        let extendIndex;\n        const allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\n        const selectorsToAdd = [];\n        const extendVisitor = this;\n        let selectorPath;\n\n        // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n\n        for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n            for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n                selectorPath = rulesetNode.paths[pathIndex];\n\n                // extending extends happens initially, before the main pass\n                if (rulesetNode.extendOnEveryPath) { continue; }\n                const extendList = selectorPath[selectorPath.length - 1].extendList;\n                if (extendList && extendList.length) { continue; }\n\n                matches = this.findMatch(allExtends[extendIndex], selectorPath);\n\n                if (matches.length) {\n                    allExtends[extendIndex].hasFoundMatches = true;\n\n                    allExtends[extendIndex].selfSelectors.forEach(function(selfSelector) {\n                        let extendedSelectors;\n                        extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n                        selectorsToAdd.push(extendedSelectors);\n                    });\n                }\n            }\n        }\n        rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n    }\n\n    findMatch(extend, haystackSelectorPath) {\n        //\n        // look through the haystack selector path to try and find the needle - extend.selector\n        // returns an array of selector matches that can then be replaced\n        //\n        let haystackSelectorIndex;\n\n        let hackstackSelector;\n        let hackstackElementIndex;\n        let haystackElement;\n        let targetCombinator;\n        let i;\n        const extendVisitor = this;\n        const needleElements = extend.selector.elements;\n        const potentialMatches = [];\n        let potentialMatch;\n        const matches = [];\n\n        // loop through the haystack elements\n        for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n            hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n\n            for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n\n                haystackElement = hackstackSelector.elements[hackstackElementIndex];\n\n                // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n                if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\n                    potentialMatches.push({pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\n                        initialCombinator: haystackElement.combinator});\n                }\n\n                for (i = 0; i < potentialMatches.length; i++) {\n                    potentialMatch = potentialMatches[i];\n\n                    // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n                    // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n                    // work out what the resulting combinator will be\n                    targetCombinator = haystackElement.combinator.value;\n                    if (targetCombinator === '' && hackstackElementIndex === 0) {\n                        targetCombinator = ' ';\n                    }\n\n                    // if we don't match, null our match to indicate failure\n                    if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\n                        (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\n                        potentialMatch = null;\n                    } else {\n                        potentialMatch.matched++;\n                    }\n\n                    // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n                    if (potentialMatch) {\n                        potentialMatch.finished = potentialMatch.matched === needleElements.length;\n                        if (potentialMatch.finished &&\n                            (!extend.allowAfter &&\n                                (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\n                            potentialMatch = null;\n                        }\n                    }\n                    // if null we remove, if not, we are still valid, so either push as a valid match or continue\n                    if (potentialMatch) {\n                        if (potentialMatch.finished) {\n                            potentialMatch.length = needleElements.length;\n                            potentialMatch.endPathIndex = haystackSelectorIndex;\n                            potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n                            potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n                            matches.push(potentialMatch);\n                        }\n                    } else {\n                        potentialMatches.splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n\n    isElementValuesEqual(elementValue1, elementValue2) {\n        if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\n            return elementValue1 === elementValue2;\n        }\n        if (elementValue1 instanceof tree.Attribute) {\n            if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n                return false;\n            }\n            if (!elementValue1.value || !elementValue2.value) {\n                if (elementValue1.value || elementValue2.value) {\n                    return false;\n                }\n                return true;\n            }\n            elementValue1 = elementValue1.value.value || elementValue1.value;\n            elementValue2 = elementValue2.value.value || elementValue2.value;\n            return elementValue1 === elementValue2;\n        }\n        elementValue1 = elementValue1.value;\n        elementValue2 = elementValue2.value;\n        if (elementValue1 instanceof tree.Selector) {\n            if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n                return false;\n            }\n            for (let i = 0; i  < elementValue1.elements.length; i++) {\n                if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\n                    if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\n                        return false;\n                    }\n                }\n                if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    extendSelector(matches, selectorPath, replacementSelector, isVisible) {\n\n        // for a set of matches, replace each match with the replacement selector\n\n        let currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\n\n        for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n            match = matches[matchIndex];\n            selector = selectorPath[match.pathIndex];\n            firstElement = new tree.Element(\n                match.initialCombinator,\n                replacementSelector.elements[0].value,\n                replacementSelector.elements[0].isVariable,\n                replacementSelector.elements[0].getIndex(),\n                replacementSelector.elements[0].fileInfo()\n            );\n\n            if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n                path[path.length - 1].elements = path[path.length - 1]\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n                currentSelectorPathElementIndex = 0;\n                currentSelectorPathIndex++;\n            }\n\n            newElements = selector.elements\n                .slice(currentSelectorPathElementIndex, match.index)\n                .concat([firstElement])\n                .concat(replacementSelector.elements.slice(1));\n\n            if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n                path[path.length - 1].elements =\n                    path[path.length - 1].elements.concat(newElements);\n            } else {\n                path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n\n                path.push(new tree.Selector(\n                    newElements\n                ));\n            }\n            currentSelectorPathIndex = match.endPathIndex;\n            currentSelectorPathElementIndex = match.endPathElementIndex;\n            if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n                currentSelectorPathElementIndex = 0;\n                currentSelectorPathIndex++;\n            }\n        }\n\n        if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n            path[path.length - 1].elements = path[path.length - 1]\n                .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n            currentSelectorPathIndex++;\n        }\n\n        path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n        path = path.map(function (currentValue) {\n            // we can re-use elements here, because the visibility property matters only for selectors\n            const derived = currentValue.createDerived(currentValue.elements);\n            if (isVisible) {\n                derived.ensureVisibility();\n            } else {\n                derived.ensureInvisibility();\n            }\n            return derived;\n        });\n        return path;\n    }\n\n    visitMedia(mediaNode, visitArgs) {\n        let newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n    }\n\n    visitMediaOut(mediaNode) {\n        const lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n    }\n\n    visitAtRule(atRuleNode, visitArgs) {\n        let newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n    }\n\n    visitAtRuleOut(atRuleNode) {\n        const lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n    }\n}\n\nexport default ProcessExtendsVisitor;\n", "import Visitor from './visitor';\n\nclass JoinSelectorVisitor {\n    constructor() {\n        this.contexts = [[]];\n        this._visitor = new Visitor(this);\n    }\n\n    run(root) {\n        return this._visitor.visit(root);\n    }\n\n    visitDeclaration(declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitRuleset(rulesetNode, visitArgs) {\n        const context = this.contexts[this.contexts.length - 1];\n        const paths = [];\n        let selectors;\n\n        this.contexts.push(paths);\n\n        if (!rulesetNode.root) {\n            selectors = rulesetNode.selectors;\n            if (selectors) {\n                selectors = selectors.filter(function(selector) { return selector.getIsOutput(); });\n                rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\n                if (selectors) { rulesetNode.joinSelectors(paths, context, selectors); }\n            }\n            if (!selectors) { rulesetNode.rules = null; }\n            rulesetNode.paths = paths;\n        }\n    }\n\n    visitRulesetOut(rulesetNode) {\n        this.contexts.length = this.contexts.length - 1;\n    }\n\n    visitMedia(mediaNode, visitArgs) {\n        const context = this.contexts[this.contexts.length - 1];\n        mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\n    }\n\n    visitAtRule(atRuleNode, visitArgs) {\n        const context = this.contexts[this.contexts.length - 1];\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n            atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\n        }\n    }\n}\n\nexport default JoinSelectorVisitor;\n", "import tree from '../tree';\nimport Visitor from './visitor';\n\nclass CSSVisitorUtils {\n    constructor(context) {\n        this._visitor = new Visitor(this);\n        this._context = context;\n    }\n\n    containsSilentNonBlockedChild(bodyRules) {\n        let rule;\n        if (!bodyRules) {\n            return false;\n        }\n        for (let r = 0; r < bodyRules.length; r++) {\n            rule = bodyRules[r];\n            if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n                // the atrule contains something that was referenced (likely by extend)\n                // therefore it needs to be shown in output too\n                return true;\n            }\n        }\n        return false;\n    }\n\n    keepOnlyVisibleChilds(owner) {\n        if (owner && owner.rules) {\n            owner.rules = owner.rules.filter(thing => thing.isVisible());\n        }\n    }\n\n    isEmpty(owner) {\n        return (owner && owner.rules) \n            ? (owner.rules.length === 0) : true;\n    }\n\n    hasVisibleSelector(rulesetNode) {\n        return (rulesetNode && rulesetNode.paths)\n            ? (rulesetNode.paths.length > 0) : false;\n    }\n\n    resolveVisibility(node, originalRules) {\n        if (!node.blocksVisibility()) {\n            if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n                return ;\n            }\n\n            return node;\n        }\n\n        const compiledRulesBody = node.rules[0];\n        this.keepOnlyVisibleChilds(compiledRulesBody);\n\n        if (this.isEmpty(compiledRulesBody)) {\n            return ;\n        }\n\n        node.ensureVisibility();\n        node.removeVisibilityBlock();\n\n        return node;\n    }\n\n    isVisibleRuleset(rulesetNode) {\n        if (rulesetNode.firstRoot) {\n            return true;\n        }\n\n        if (this.isEmpty(rulesetNode)) {\n            return false;\n        }\n\n        if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n            return false;\n        }\n\n        return true;\n    }\n}\n\nconst ToCSSVisitor = function(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n    this.utils = new CSSVisitorUtils(context);\n};\n\nToCSSVisitor.prototype = {\n    isReplacing: true,\n    run: function (root) {\n        return this._visitor.visit(root);\n    },\n\n    visitDeclaration: function (declNode, visitArgs) {\n        if (declNode.blocksVisibility() || declNode.variable) {\n            return;\n        }\n        return declNode;\n    },\n\n    visitMixinDefinition: function (mixinNode, visitArgs) {\n        // mixin definitions do not get eval'd - this means they keep state\n        // so we have to clear that state here so it isn't used if toCSS is called twice\n        mixinNode.frames = [];\n    },\n\n    visitExtend: function (extendNode, visitArgs) {\n    },\n\n    visitComment: function (commentNode, visitArgs) {\n        if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n            return;\n        }\n        return commentNode;\n    },\n\n    visitMedia: function(mediaNode, visitArgs) {\n        const originalRules = mediaNode.rules[0].rules;\n        mediaNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n\n        return this.utils.resolveVisibility(mediaNode, originalRules);\n    },\n\n    visitImport: function (importNode, visitArgs) {\n        if (importNode.blocksVisibility()) {\n            return ;\n        }\n        return importNode;\n    },\n\n    visitAtRule: function(atRuleNode, visitArgs) {\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n            return this.visitAtRuleWithBody(atRuleNode, visitArgs);\n        } else {\n            return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\n        }\n    },\n\n    visitAnonymous: function(anonymousNode, visitArgs) {\n        if (!anonymousNode.blocksVisibility()) {\n            anonymousNode.accept(this._visitor);\n            return anonymousNode;\n        }\n    },\n\n    visitAtRuleWithBody: function(atRuleNode, visitArgs) {\n        // if there is only one nested ruleset and that one has no path, then it is\n        // just fake ruleset\n        function hasFakeRuleset(atRuleNode) {\n            const bodyRules = atRuleNode.rules;\n            return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n        }\n        function getBodyRules(atRuleNode) {\n            const nodeRules = atRuleNode.rules;\n            if (hasFakeRuleset(atRuleNode)) {\n                return nodeRules[0].rules;\n            }\n\n            return nodeRules;\n        }\n        // it is still true that it is only one ruleset in array\n        // this is last such moment\n        // process childs\n        const originalRules = getBodyRules(atRuleNode);\n        atRuleNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n\n        if (!this.utils.isEmpty(atRuleNode)) {\n            this._mergeRules(atRuleNode.rules[0].rules);\n        }\n\n        return this.utils.resolveVisibility(atRuleNode, originalRules);\n    },\n\n    visitAtRuleWithoutBody: function(atRuleNode, visitArgs) {\n        if (atRuleNode.blocksVisibility()) {\n            return;\n        }\n\n        if (atRuleNode.name === '@charset') {\n            // Only output the debug info together with subsequent @charset definitions\n            // a comment (or @media statement) before the actual @charset atrule would\n            // be considered illegal css as it has to be on the first line\n            if (this.charset) {\n                if (atRuleNode.debugInfo) {\n                    const comment = new tree.Comment(`/* ${atRuleNode.toCSS(this._context).replace(/\\n/g, '')} */\\n`);\n                    comment.debugInfo = atRuleNode.debugInfo;\n                    return this._visitor.visit(comment);\n                }\n                return;\n            }\n            this.charset = true;\n        }\n\n        return atRuleNode;\n    },\n\n    checkValidNodes: function(rules, isRoot) {\n        if (!rules) {\n            return;\n        }\n\n        for (let i = 0; i < rules.length; i++) {\n            const ruleNode = rules[i];\n            if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\n                throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n            if (ruleNode instanceof tree.Call) {\n                throw { message: `Function '${ruleNode.name}' did not return a root node`,\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n            if (ruleNode.type && !ruleNode.allowRoot) {\n                throw { message: `${ruleNode.type} node returned by a function is not valid here`,\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n        }\n    },\n\n    visitRuleset: function (rulesetNode, visitArgs) {\n        // at this point rulesets are nested into each other\n        let rule;\n\n        const rulesets = [];\n\n        this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n\n        if (!rulesetNode.root) {\n            // remove invisible paths\n            this._compileRulesetPaths(rulesetNode);\n\n            // remove rulesets from this ruleset body and compile them separately\n            const nodeRules = rulesetNode.rules;\n\n            let nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n            for (let i = 0; i < nodeRuleCnt; ) {\n                rule = nodeRules[i];\n                if (rule && rule.rules) {\n                    // visit because we are moving them out from being a child\n                    rulesets.push(this._visitor.visit(rule));\n                    nodeRules.splice(i, 1);\n                    nodeRuleCnt--;\n                    continue;\n                }\n                i++;\n            }\n            // accept the visitor to remove rules and refactor itself\n            // then we can decide nogw whether we want it or not\n            // compile body\n            if (nodeRuleCnt > 0) {\n                rulesetNode.accept(this._visitor);\n            } else {\n                rulesetNode.rules = null;\n            }\n            visitArgs.visitDeeper = false;\n        } else { // if (! rulesetNode.root) {\n            rulesetNode.accept(this._visitor);\n            visitArgs.visitDeeper = false;\n        }\n\n        if (rulesetNode.rules) {\n            this._mergeRules(rulesetNode.rules);\n            this._removeDuplicateRules(rulesetNode.rules);\n        }\n\n        // now decide whether we keep the ruleset\n        if (this.utils.isVisibleRuleset(rulesetNode)) {\n            rulesetNode.ensureVisibility();\n            rulesets.splice(0, 0, rulesetNode);\n        }\n\n        if (rulesets.length === 1) {\n            return rulesets[0];\n        }\n        return rulesets;\n    },\n\n    _compileRulesetPaths: function(rulesetNode) {\n        if (rulesetNode.paths) {\n            rulesetNode.paths = rulesetNode.paths\n                .filter(p => {\n                    let i;\n                    if (p[0].elements[0].combinator.value === ' ') {\n                        p[0].elements[0].combinator = new(tree.Combinator)('');\n                    }\n                    for (i = 0; i < p.length; i++) {\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n        }\n    },\n\n    _removeDuplicateRules: function(rules) {\n        if (!rules) { return; }\n\n        // remove duplicates\n        const ruleCache = {};\n\n        let ruleList;\n        let rule;\n        let i;\n\n        for (i = rules.length - 1; i >= 0 ; i--) {\n            rule = rules[i];\n            if (rule instanceof tree.Declaration) {\n                if (!ruleCache[rule.name]) {\n                    ruleCache[rule.name] = rule;\n                } else {\n                    ruleList = ruleCache[rule.name];\n                    if (ruleList instanceof tree.Declaration) {\n                        ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n                    }\n                    const ruleCSS = rule.toCSS(this._context);\n                    if (ruleList.indexOf(ruleCSS) !== -1) {\n                        rules.splice(i, 1);\n                    } else {\n                        ruleList.push(ruleCSS);\n                    }\n                }\n            }\n        }\n    },\n\n    _mergeRules: function(rules) {\n        if (!rules) {\n            return; \n        }\n\n        const groups    = {};\n        const groupsArr = [];\n\n        for (let i = 0; i < rules.length; i++) {\n            const rule = rules[i];\n            if (rule.merge) {\n                const key = rule.name;\n                groups[key] ? rules.splice(i--, 1) : \n                    groupsArr.push(groups[key] = []);\n                groups[key].push(rule);\n            }\n        }\n\n        groupsArr.forEach(group => {\n            if (group.length > 0) {\n                const result = group[0];\n                let space  = [];\n                const comma  = [new tree.Expression(space)];\n                group.forEach(rule => {\n                    if ((rule.merge === '+') && (space.length > 0)) {\n                        comma.push(new tree.Expression(space = []));\n                    }\n                    space.push(rule.value);\n                    result.important = result.important || rule.important;\n                });\n                result.value = new tree.Value(comma);\n            }\n        });\n    }\n};\n\nexport default ToCSSVisitor;\n", "import Visitor from './visitor';\nimport ImportVisitor from './import-visitor';\nimport MarkVisibleSelectorsVisitor from './set-tree-visibility-visitor';\nimport ExtendVisitor from './extend-visitor';\nimport JoinSelectorVisitor from './join-selector-visitor';\nimport ToCSSVisitor from './to-css-visitor';\n\nexport default {\n    Visitor,\n    ImportVisitor,\n    MarkVisibleSelectorsVisitor,\n    ExtendVisitor,\n    JoinSelectorVisitor,\n    ToCSSVisitor\n};\n", "// Split the input into chunks.\nexport default function (input, fail) {\n    const len = input.length;\n    let level = 0;\n    let parenLevel = 0;\n    let lastOpening;\n    let lastOpeningParen;\n    let lastMultiComment;\n    let lastMultiCommentEndBrace;\n    const chunks = [];\n    let emitFrom = 0;\n    let chunkerCurrentIndex;\n    let currentChunkStartIndex;\n    let cc;\n    let cc2;\n    let matched;\n\n    function emitChunk(force) {\n        const len = chunkerCurrentIndex - emitFrom;\n        if (((len < 512) && !force) || !len) {\n            return;\n        }\n        chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n        emitFrom = chunkerCurrentIndex + 1;\n    }\n\n    for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n        cc = input.charCodeAt(chunkerCurrentIndex);\n        if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\n            // a-z or whitespace\n            continue;\n        }\n\n        switch (cc) {\n            case 40:                        // (\n                parenLevel++;\n                lastOpeningParen = chunkerCurrentIndex;\n                continue;\n            case 41:                        // )\n                if (--parenLevel < 0) {\n                    return fail('missing opening `(`', chunkerCurrentIndex);\n                }\n                continue;\n            case 59:                        // ;\n                if (!parenLevel) { emitChunk(); }\n                continue;\n            case 123:                       // {\n                level++;\n                lastOpening = chunkerCurrentIndex;\n                continue;\n            case 125:                       // }\n                if (--level < 0) {\n                    return fail('missing opening `{`', chunkerCurrentIndex);\n                }\n                if (!level && !parenLevel) { emitChunk(); }\n                continue;\n            case 92:                        // \\\n                if (chunkerCurrentIndex < len - 1) { chunkerCurrentIndex++; continue; }\n                return fail('unescaped `\\\\`', chunkerCurrentIndex);\n            case 34:\n            case 39:\n            case 96:                        // \", ' and `\n                matched = 0;\n                currentChunkStartIndex = chunkerCurrentIndex;\n                for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                    cc2 = input.charCodeAt(chunkerCurrentIndex);\n                    if (cc2 > 96) { continue; }\n                    if (cc2 == cc) { matched = 1; break; }\n                    if (cc2 == 92) {        // \\\n                        if (chunkerCurrentIndex == len - 1) {\n                            return fail('unescaped `\\\\`', chunkerCurrentIndex);\n                        }\n                        chunkerCurrentIndex++;\n                    }\n                }\n                if (matched) { continue; }\n                return fail(`unmatched \\`${String.fromCharCode(cc)}\\``, currentChunkStartIndex);\n            case 47:                        // /, check for comment\n                if (parenLevel || (chunkerCurrentIndex == len - 1)) { continue; }\n                cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n                if (cc2 == 47) {\n                    // //, find lnfeed\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) { break; }\n                    }\n                } else if (cc2 == 42) {\n                    // /*, find */\n                    lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if (cc2 == 125) { lastMultiCommentEndBrace = chunkerCurrentIndex; }\n                        if (cc2 != 42) { continue; }\n                        if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) { break; }\n                    }\n                    if (chunkerCurrentIndex == len - 1) {\n                        return fail('missing closing `*/`', currentChunkStartIndex);\n                    }\n                    chunkerCurrentIndex++;\n                }\n                continue;\n            case 42:                       // *, check for unmatched */\n                if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\n                    return fail('unmatched `/*`', chunkerCurrentIndex);\n                }\n                continue;\n        }\n    }\n\n    if (level !== 0) {\n        if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\n            return fail('missing closing `}` or `*/`', lastOpening);\n        } else {\n            return fail('missing closing `}`', lastOpening);\n        }\n    } else if (parenLevel !== 0) {\n        return fail('missing closing `)`', lastOpeningParen);\n    }\n\n    emitChunk(true);\n    return chunks;\n};\n", "import chunker from './chunker';\n\nexport default () => {\n    let // Less input string\n        input;\n\n    let // current chunk\n        j;\n\n    const // holds state for backtracking\n        saveStack = [];\n\n    let // furthest index the parser has gone to\n        furthest;\n\n    let // if this is furthest we got to, this is the probably cause\n        furthestPossibleErrorMessage;\n\n    let // chunkified input\n        chunks;\n\n    let // current chunk\n        current;\n\n    let // index of current chunk, in `input`\n        currentPos;\n\n    const parserInput = {};\n    const CHARCODE_SPACE = 32;\n    const CHARCODE_TAB = 9;\n    const CHARCODE_LF = 10;\n    const CHARCODE_CR = 13;\n    const CHARCODE_PLUS = 43;\n    const CHARCODE_COMMA = 44;\n    const CHARCODE_FORWARD_SLASH = 47;\n    const CHARCODE_9 = 57;\n\n    function skipWhitespace(length) {\n        const oldi = parserInput.i;\n        const oldj = j;\n        const curr = parserInput.i - currentPos;\n        const endIndex = parserInput.i + current.length - curr;\n        const mem = (parserInput.i += length);\n        const inp = input;\n        let c;\n        let nextChar;\n        let comment;\n\n        for (; parserInput.i < endIndex; parserInput.i++) {\n            c = inp.charCodeAt(parserInput.i);\n\n            if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\n                nextChar = inp.charAt(parserInput.i + 1);\n                if (nextChar === '/') {\n                    comment = {index: parserInput.i, isLineComment: true};\n                    let nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\n                    if (nextNewLine < 0) {\n                        nextNewLine = endIndex;\n                    }\n                    parserInput.i = nextNewLine;\n                    comment.text = inp.substr(comment.index, parserInput.i - comment.index);\n                    parserInput.commentStore.push(comment);\n                    continue;\n                } else if (nextChar === '*') {\n                    const nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\n                    if (nextStarSlash >= 0) {\n                        comment = {\n                            index: parserInput.i,\n                            text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\n                            isLineComment: false\n                        };\n                        parserInput.i += comment.text.length - 1;\n                        parserInput.commentStore.push(comment);\n                        continue;\n                    }\n                }\n                break;\n            }\n\n            if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\n                break;\n            }\n        }\n\n        current = current.slice(length + parserInput.i - mem + curr);\n        currentPos = parserInput.i;\n\n        if (!current.length) {\n            if (j < chunks.length - 1) {\n                current = chunks[++j];\n                skipWhitespace(0); // skip space at the beginning of a chunk\n                return true; // things changed\n            }\n            parserInput.finished = true;\n        }\n\n        return oldi !== parserInput.i || oldj !== j;\n    }\n\n    parserInput.save = () => {\n        currentPos = parserInput.i;\n        saveStack.push( { current, i: parserInput.i, j });\n    };\n    parserInput.restore = possibleErrorMessage => {\n\n        if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\n            furthest = parserInput.i;\n            furthestPossibleErrorMessage = possibleErrorMessage;\n        }\n        const state = saveStack.pop();\n        current = state.current;\n        currentPos = parserInput.i = state.i;\n        j = state.j;\n    };\n    parserInput.forget = () => {\n        saveStack.pop();\n    };\n    parserInput.isWhitespace = offset => {\n        const pos = parserInput.i + (offset || 0);\n        const code = input.charCodeAt(pos);\n        return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\n    };\n\n    // Specialization of $(tok)\n    parserInput.$re = tok => {\n        if (parserInput.i > currentPos) {\n            current = current.slice(parserInput.i - currentPos);\n            currentPos = parserInput.i;\n        }\n\n        const m = tok.exec(current);\n        if (!m) {\n            return null;\n        }\n\n        skipWhitespace(m[0].length);\n        if (typeof m === 'string') {\n            return m;\n        }\n\n        return m.length === 1 ? m[0] : m;\n    };\n\n    parserInput.$char = tok => {\n        if (input.charAt(parserInput.i) !== tok) {\n            return null;\n        }\n        skipWhitespace(1);\n        return tok;\n    };\n\n    parserInput.$str = tok => {\n        const tokLength = tok.length;\n\n        // https://jsperf.com/string-startswith/21\n        for (let i = 0; i < tokLength; i++) {\n            if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                return null;\n            }\n        }\n\n        skipWhitespace(tokLength);\n        return tok;\n    };\n\n    parserInput.$quoted = loc => {\n        const pos = loc || parserInput.i;\n        const startChar = input.charAt(pos);\n\n        if (startChar !== '\\'' && startChar !== '\"') {\n            return;\n        }\n        const length = input.length;\n        const currentPosition = pos;\n\n        for (let i = 1; i + currentPosition < length; i++) {\n            const nextChar = input.charAt(i + currentPosition);\n            switch (nextChar) {\n                case '\\\\':\n                    i++;\n                    continue;\n                case '\\r':\n                case '\\n':\n                    break;\n                case startChar:\n                    const str = input.substr(currentPosition, i + 1);\n                    if (!loc && loc !== 0) {\n                        skipWhitespace(i + 1);\n                        return str\n                    }\n                    return [startChar, str];\n                default:\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Permissive parsing. Ignores everything except matching {} [] () and quotes\n     * until matching token (outside of blocks)\n     */\n    parserInput.$parseUntil = tok => {\n        let quote = '';\n        let returnVal = null;\n        let inComment = false;\n        let blockDepth = 0;\n        const blockStack = [];\n        const parseGroups = [];\n        const length = input.length;\n        const startPos = parserInput.i;\n        let lastPos = parserInput.i;\n        let i = parserInput.i;\n        let loop = true;\n        let testChar;\n\n        if (typeof tok === 'string') {\n            testChar = char => char === tok\n        } else {\n            testChar = char => tok.test(char)\n        }\n\n        do {\n            let prevChar;\n            let nextChar = input.charAt(i);\n            if (blockDepth === 0 && testChar(nextChar)) {\n                returnVal = input.substr(lastPos, i - lastPos);\n                if (returnVal) {\n                    parseGroups.push(returnVal);\n                }\n                else {\n                    parseGroups.push(' ');\n                }\n                returnVal = parseGroups;\n                skipWhitespace(i - startPos);\n                loop = false\n            } else {\n                if (inComment) {\n                    if (nextChar === '*' && \n                        input.charAt(i + 1) === '/') {\n                        i++;\n                        blockDepth--;\n                        inComment = false;\n                    }\n                    i++;\n                    continue;\n                }\n                switch (nextChar) {\n                    case '\\\\':\n                        i++;\n                        nextChar = input.charAt(i);\n                        parseGroups.push(input.substr(lastPos, i - lastPos + 1));\n                        lastPos = i + 1;\n                        break;\n                    case '/':\n                        if (input.charAt(i + 1) === '*') {\n                            i++;\n                            inComment = true;\n                            blockDepth++;\n                        }\n                        break;\n                    case '\\'':\n                    case '\"':\n                        quote = parserInput.$quoted(i);\n                        if (quote) {\n                            parseGroups.push(input.substr(lastPos, i - lastPos), quote);\n                            i += quote[1].length - 1;\n                            lastPos = i + 1;\n                        }\n                        else {\n                            skipWhitespace(i - startPos);\n                            returnVal = nextChar;\n                            loop = false;\n                        }\n                        break;\n                    case '{':\n                        blockStack.push('}');\n                        blockDepth++;\n                        break;\n                    case '(':\n                        blockStack.push(')');\n                        blockDepth++;\n                        break;\n                    case '[':\n                        blockStack.push(']');\n                        blockDepth++;\n                        break;\n                    case '}':\n                    case ')':\n                    case ']':\n                        const expected = blockStack.pop();\n                        if (nextChar === expected) {\n                            blockDepth--;\n                        } else {\n                            // move the parser to the error and return expected\n                            skipWhitespace(i - startPos);\n                            returnVal = expected;\n                            loop = false;\n                        }\n                }\n                i++;\n                if (i > length) {\n                    loop = false;\n                }\n            }\n            prevChar = nextChar;\n        } while (loop);\n\n        return returnVal ? returnVal : null;\n    }\n\n    parserInput.autoCommentAbsorb = true;\n    parserInput.commentStore = [];\n    parserInput.finished = false;\n\n    // Same as $(), but don't change the state of the parser,\n    // just return the match.\n    parserInput.peek = tok => {\n        if (typeof tok === 'string') {\n            // https://jsperf.com/string-startswith/21\n            for (let i = 0; i < tok.length; i++) {\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return tok.test(current);\n        }\n    };\n\n    // Specialization of peek()\n    // TODO remove or change some currentChar calls to peekChar\n    parserInput.peekChar = tok => input.charAt(parserInput.i) === tok;\n\n    parserInput.currentChar = () => input.charAt(parserInput.i);\n\n    parserInput.prevChar = () => input.charAt(parserInput.i - 1);\n\n    parserInput.getInput = () => input;\n\n    parserInput.peekNotNumeric = () => {\n        const c = input.charCodeAt(parserInput.i);\n        // Is the first char of the dimension 0-9, '.', '+' or '-'\n        return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\n    };\n\n    parserInput.start = (str, chunkInput, failFunction) => {\n        input = str;\n        parserInput.i = j = currentPos = furthest = 0;\n\n        // chunking apparently makes things quicker (but my tests indicate\n        // it might actually make things slower in node at least)\n        // and it is a non-perfect parse - it can't recognise\n        // unquoted urls, meaning it can't distinguish comments\n        // meaning comments with quotes or {}() in them get 'counted'\n        // and then lead to parse errors.\n        // In addition if the chunking chunks in the wrong place we might\n        // not be able to parse a parser statement in one go\n        // this is officially deprecated but can be switched on via an option\n        // in the case it causes too much performance issues.\n        if (chunkInput) {\n            chunks = chunker(str, failFunction);\n        } else {\n            chunks = [str];\n        }\n\n        current = chunks[0];\n\n        skipWhitespace(0);\n    };\n\n    parserInput.end = () => {\n        let message;\n        const isFinished = parserInput.i >= input.length;\n\n        if (parserInput.i < furthest) {\n            message = furthestPossibleErrorMessage;\n            parserInput.i = furthest;\n        }\n        return {\n            isFinished,\n            furthest: parserInput.i,\n            furthestPossibleErrorMessage: message,\n            furthestReachedEnd: parserInput.i >= input.length - 1,\n            furthestChar: input[parserInput.i]\n        };\n    };\n\n    return parserInput;\n};\n", "import LessError from '../less-error';\nimport tree from '../tree';\nimport visitors from '../visitors';\nimport getParserInput from './parser-input';\nimport * as utils from '../utils';\nimport functionRegistry from '../functions/function-registry';\n\n//\n// less.js - parser\n//\n//    A relatively straight-forward predictive parser.\n//    There is no tokenization/lexing stage, the input is parsed\n//    in one sweep.\n//\n//    To make the parser fast enough to run in the browser, several\n//    optimization had to be made:\n//\n//    - Matching and slicing on a huge input is often cause of slowdowns.\n//      The solution is to chunkify the input into smaller strings.\n//      The chunks are stored in the `chunks` var,\n//      `j` holds the current chunk index, and `currentPos` holds\n//      the index of the current chunk in relation to `input`.\n//      This gives us an almost 4x speed-up.\n//\n//    - In many cases, we don't need to match individual tokens;\n//      for example, if a value doesn't hold any variables, operations\n//      or dynamic references, the parser can effectively 'skip' it,\n//      treating it as a literal.\n//      An example would be '1px solid #000' - which evaluates to itself,\n//      we don't need to know what the individual components are.\n//      The drawback, of course is that you don't get the benefits of\n//      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\n//      and a smaller speed-up in the code-gen.\n//\n//\n//    Token matching is done with the `$` function, which either takes\n//    a terminal string or regexp, or a non-terminal function to call.\n//    It also takes care of moving all the indices forwards.\n//\n\nconst Parser = function Parser(context, imports, fileInfo) {\n    let parsers;\n    const parserInput = getParserInput();\n\n    function error(msg, type) {\n        throw new LessError(\n            {\n                index: parserInput.i,\n                filename: fileInfo.filename,\n                type: type || 'Syntax',\n                message: msg\n            },\n            imports\n        );\n    }\n\n    function expect(arg, msg) {\n        // some older browsers return typeof 'function' for RegExp\n        const result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\n        if (result) {\n            return result;\n        }\n        \n        error(msg || (typeof arg === 'string'\n            ? `expected '${arg}' got '${parserInput.currentChar()}'`\n            : 'unexpected token'));\n    }\n\n    // Specialization of expect()\n    function expectChar(arg, msg) {\n        if (parserInput.$char(arg)) {\n            return arg;\n        }\n        error(msg || `expected '${arg}' got '${parserInput.currentChar()}'`);\n    }\n\n    function getDebugInfo(index) {\n        const filename = fileInfo.filename;\n\n        return {\n            lineNumber: utils.getLocation(index, parserInput.getInput()).line + 1,\n            fileName: filename\n        };\n    }\n\n    /**\n     *  Used after initial parsing to create nodes on the fly\n     * \n     *  @param {String} str          - string to parse \n     *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\n     *  @param {Number} currentIndex - start number to begin indexing\n     *  @param {Object} fileInfo     - fileInfo to attach to created nodes\n     */\n    function parseNode(str, parseList, currentIndex, fileInfo, callback) {\n        let result;\n        const returnNodes = [];\n        const parser = parserInput;\n\n        try {\n            parser.start(str, false, function fail(msg, index) {\n                callback({\n                    message: msg,\n                    index: index + currentIndex\n                });\n            });\n            for (let x = 0, p, i; (p = parseList[x]); x++) {\n                i = parser.i;\n                result = parsers[p]();\n                if (result) {\n                    try {\n                        result._index = i + currentIndex;\n                        result._fileInfo = fileInfo;\n                    } catch (e) {}\n                    returnNodes.push(result);\n                }\n                else {\n                    returnNodes.push(null);\n                }\n            }\n\n            const endInfo = parser.end();\n            if (endInfo.isFinished) {\n                callback(null, returnNodes);\n            }\n            else {\n                callback(true, null);\n            }\n        } catch (e) {\n            throw new LessError({\n                index: e.index + currentIndex,\n                message: e.message\n            }, imports, fileInfo.filename);\n        }\n    }\n\n    //\n    // The Parser\n    //\n    return {\n        parserInput,\n        imports,\n        fileInfo,\n        parseNode,\n        //\n        // Parse an input string into an abstract syntax tree,\n        // @param str A string containing 'less' markup\n        // @param callback call `callback` when done.\n        // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\n        //\n        parse: function (str, callback, additionalData) {\n            let root;\n            let error = null;\n            let globalVars;\n            let modifyVars;\n            let ignored;\n            let preText = '';\n\n            globalVars = (additionalData && additionalData.globalVars) ? `${Parser.serializeVars(additionalData.globalVars)}\\n` : '';\n            modifyVars = (additionalData && additionalData.modifyVars) ? `\\n${Parser.serializeVars(additionalData.modifyVars)}` : '';\n\n            if (context.pluginManager) {\n                const preProcessors = context.pluginManager.getPreProcessors();\n                for (let i = 0; i < preProcessors.length; i++) {\n                    str = preProcessors[i].process(str, { context, imports, fileInfo });\n                }\n            }\n\n            if (globalVars || (additionalData && additionalData.banner)) {\n                preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\n                ignored = imports.contentsIgnoredChars;\n                ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\n                ignored[fileInfo.filename] += preText.length;\n            }\n\n            str = str.replace(/\\r\\n?/g, '\\n');\n            // Remove potential UTF Byte Order Mark\n            str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\n            imports.contents[fileInfo.filename] = str;\n\n            // Start with the primary rule.\n            // The whole syntax tree is held under a Ruleset node,\n            // with the `root` property set to true, so no `{}` are\n            // output. The callback is called when the input is parsed.\n            try {\n                parserInput.start(str, context.chunkInput, function fail(msg, index) {\n                    throw new LessError({\n                        index,\n                        type: 'Parse',\n                        message: msg,\n                        filename: fileInfo.filename\n                    }, imports);\n                });\n\n                tree.Node.prototype.parse = this;\n                root = new tree.Ruleset(null, this.parsers.primary());\n                tree.Node.prototype.rootNode = root;\n                root.root = true;\n                root.firstRoot = true;\n                root.functionRegistry = functionRegistry.inherit();\n                \n            } catch (e) {\n                return callback(new LessError(e, imports, fileInfo.filename));\n            }\n\n            // If `i` is smaller than the `input.length - 1`,\n            // it means the parser wasn't able to parse the whole\n            // string, so we've got a parsing error.\n            //\n            // We try to extract a \\n delimited string,\n            // showing the line where the parse error occurred.\n            // We split it up into two parts (the part which parsed,\n            // and the part which didn't), so we can color them differently.\n            const endInfo = parserInput.end();\n            if (!endInfo.isFinished) {\n\n                let message = endInfo.furthestPossibleErrorMessage;\n\n                if (!message) {\n                    message = 'Unrecognised input';\n                    if (endInfo.furthestChar === '}') {\n                        message += '. Possibly missing opening \\'{\\'';\n                    } else if (endInfo.furthestChar === ')') {\n                        message += '. Possibly missing opening \\'(\\'';\n                    } else if (endInfo.furthestReachedEnd) {\n                        message += '. Possibly missing something';\n                    }\n                }\n\n                error = new LessError({\n                    type: 'Parse',\n                    message,\n                    index: endInfo.furthest,\n                    filename: fileInfo.filename\n                }, imports);\n            }\n\n            const finish = e => {\n                e = error || e || imports.error;\n\n                if (e) {\n                    if (!(e instanceof LessError)) {\n                        e = new LessError(e, imports, fileInfo.filename);\n                    }\n\n                    return callback(e);\n                }\n                else {\n                    return callback(null, root);\n                }\n            };\n\n            if (context.processImports !== false) {\n                new visitors.ImportVisitor(imports, finish)\n                    .run(root);\n            } else {\n                return finish();\n            }\n        },\n\n        //\n        // Here in, the parsing rules/functions\n        //\n        // The basic structure of the syntax tree generated is as follows:\n        //\n        //   Ruleset ->  Declaration -> Value -> Expression -> Entity\n        //\n        // Here's some Less code:\n        //\n        //    .class {\n        //      color: #fff;\n        //      border: 1px solid #000;\n        //      width: @w + 4px;\n        //      > .child {...}\n        //    }\n        //\n        // And here's what the parse tree might look like:\n        //\n        //     Ruleset (Selector '.class', [\n        //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\n        //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\n        //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\n        //         Ruleset (Selector [Element '>', '.child'], [...])\n        //     ])\n        //\n        //  In general, most rules will try to parse a token with the `$re()` function, and if the return\n        //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\n        //  first, before parsing, that's when we use `peek()`.\n        //\n        parsers: parsers = {\n            //\n            // The `primary` rule is the *entry* and *exit* point of the parser.\n            // The rules here can appear at any level of the parse tree.\n            //\n            // The recursive nature of the grammar is an interplay between the `block`\n            // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\n            // as represented by this simplified grammar:\n            //\n            //     primary  \u2192  (ruleset | declaration)+\n            //     ruleset  \u2192  selector+ block\n            //     block    \u2192  '{' primary '}'\n            //\n            // Only at one point is the primary rule not called from the\n            // block rule: at the root level.\n            //\n            primary: function () {\n                const mixin = this.mixin;\n                let root = [];\n                let node;\n\n                while (true) {\n                    while (true) {\n                        node = this.comment();\n                        if (!node) { break; }\n                        root.push(node);\n                    }\n                    // always process comments before deciding if finished\n                    if (parserInput.finished) {\n                        break;\n                    }\n                    if (parserInput.peek('}')) {\n                        break;\n                    }\n\n                    node = this.extendRule();\n                    if (node) {\n                        root = root.concat(node);\n                        continue;\n                    }\n\n                    node = mixin.definition() || this.declaration() || mixin.call(false, false) || \n                        this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\n                    if (node) {\n                        root.push(node);\n                    } else {\n                        let foundSemiColon = false;\n                        while (parserInput.$char(';')) {\n                            foundSemiColon = true;\n                        }\n                        if (!foundSemiColon) {\n                            break;\n                        }\n                    }\n                }\n\n                return root;\n            },\n\n            // comments are collected by the main parsing mechanism and then assigned to nodes\n            // where the current structure allows it\n            comment: function () {\n                if (parserInput.commentStore.length) {\n                    const comment = parserInput.commentStore.shift();\n                    return new(tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\n                }\n            },\n\n            //\n            // Entities are tokens which can be found inside an Expression\n            //\n            entities: {\n                mixinLookup: function() {\n                    return parsers.mixin.call(true, true);\n                },\n                //\n                // A string, which supports escaping \" and '\n                //\n                //     \"milky way\" 'he\\'s the one!'\n                //\n                quoted: function (forceEscaped) {\n                    let str;\n                    const index = parserInput.i;\n                    let isEscaped = false;\n\n                    parserInput.save();\n                    if (parserInput.$char('~')) {\n                        isEscaped = true;\n                    } else if (forceEscaped) {\n                        parserInput.restore();\n                        return;\n                    }\n\n                    str = parserInput.$quoted();\n                    if (!str) {\n                        parserInput.restore();\n                        return;\n                    }\n                    parserInput.forget();\n\n                    return new(tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\n                },\n\n                //\n                // A catch-all word, such as:\n                //\n                //     black border-collapse\n                //\n                keyword: function () {\n                    const k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\n                    if (k) {\n                        return tree.Color.fromKeyword(k) || new(tree.Keyword)(k);\n                    }\n                },\n\n                //\n                // A function call\n                //\n                //     rgb(255, 0, 255)\n                //\n                // The arguments are parsed with the `entities.arguments` parser.\n                //\n                call: function () {\n                    let name;\n                    let args;\n                    let func;\n                    const index = parserInput.i;\n\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                    if (parserInput.peek(/^url\\(/i)) {\n                        return;\n                    }\n\n                    parserInput.save();\n\n                    name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\n                    if (!name) {\n                        parserInput.forget(); \n                        return;\n                    }\n\n                    name = name[1];\n                    func = this.customFuncCall(name);\n                    if (func) {\n                        args = func.parse();\n                        if (args && func.stop) {\n                            parserInput.forget();\n                            return args;\n                        }\n                    }\n\n                    args = this.arguments(args);\n\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore('Could not parse call arguments or missing \\')\\'');\n                        return;\n                    }\n\n                    parserInput.forget();\n\n                    return new(tree.Call)(name, args, index, fileInfo);\n                },\n                \n                //\n                // Parsing rules for functions with non-standard args, e.g.:\n                //\n                //     boolean(not(2 > 1))\n                //\n                //     This is a quick prototype, to be modified/improved when\n                //     more custom-parsed funcs come (e.g. `selector(...)`)\n                //\n\n                customFuncCall: function (name) {\n                    /* Ideally the table is to be moved out of here for faster perf.,\n                       but it's quite tricky since it relies on all these `parsers`\n                       and `expect` available only here */\n                    return {\n                        alpha:   f(parsers.ieAlpha, true),\n                        boolean: f(condition),\n                        'if':    f(condition)\n                    }[name.toLowerCase()];\n\n                    function f(parse, stop) {\n                        return {\n                            parse, // parsing function\n                            stop   // when true - stop after parse() and return its result, \n                            // otherwise continue for plain args\n                        };\n                    }\n                \n                    function condition() {\n                        return [expect(parsers.condition, 'expected condition')];\n                    }\n                },\n\n                arguments: function (prevArgs) {\n                    let argsComma = prevArgs || [];\n                    const argsSemiColon = [];\n                    let isSemiColonSeparated;\n                    let value;\n\n                    parserInput.save();\n\n                    while (true) {\n                        if (prevArgs) {\n                            prevArgs = false;\n                        } else {\n                            value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\n                            if (!value) {\n                                break;\n                            }\n\n                            if (value.value && value.value.length == 1) {\n                                value = value.value[0];\n                            }\n\n                            argsComma.push(value);\n                        }\n\n                        if (parserInput.$char(',')) {\n                            continue;\n                        }\n\n                        if (parserInput.$char(';') || isSemiColonSeparated) {\n                            isSemiColonSeparated = true;\n                            value = (argsComma.length < 1) ? argsComma[0]\n                                : new tree.Value(argsComma);\n                            argsSemiColon.push(value);\n                            argsComma = [];\n                        }\n                    }\n\n                    parserInput.forget();\n                    return isSemiColonSeparated ? argsSemiColon : argsComma;\n                },\n                literal: function () {\n                    return this.dimension() ||\n                           this.color() ||\n                           this.quoted() ||\n                           this.unicodeDescriptor();\n                },\n\n                // Assignments are argument entities for calls.\n                // They are present in ie filter properties as shown below.\n                //\n                //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\n                //\n\n                assignment: function () {\n                    let key;\n                    let value;\n                    parserInput.save();\n                    key = parserInput.$re(/^\\w+(?=\\s?=)/i);\n                    if (!key) {\n                        parserInput.restore();\n                        return;\n                    }\n                    if (!parserInput.$char('=')) {\n                        parserInput.restore();\n                        return;\n                    }\n                    value = parsers.entity();\n                    if (value) {\n                        parserInput.forget();\n                        return new(tree.Assignment)(key, value);\n                    } else {\n                        parserInput.restore();\n                    }\n                },\n\n                //\n                // Parse url() tokens\n                //\n                // We use a specific rule for urls, because they don't really behave like\n                // standard function calls. The difference is that the argument doesn't have\n                // to be enclosed within a string, so it can't be parsed as an Expression.\n                //\n                url: function () {\n                    let value;\n                    const index = parserInput.i;\n\n                    parserInput.autoCommentAbsorb = false;\n\n                    if (!parserInput.$str('url(')) {\n                        parserInput.autoCommentAbsorb = true;\n                        return;\n                    }\n\n                    value = this.quoted() || this.variable() || this.property() ||\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\n\n                    parserInput.autoCommentAbsorb = true;\n\n                    expectChar(')');\n\n                    return new(tree.URL)((value.value != null || \n                        value instanceof tree.Variable || \n                        value instanceof tree.Property) ?\n                        value : new(tree.Anonymous)(value, index), index, fileInfo);\n                },\n\n                //\n                // A Variable entity, such as `@fink`, in\n                //\n                //     width: @fink + 2px\n                //\n                // We use a different parser for variable definitions,\n                // see `parsers.variable`.\n                //\n                variable: function () {\n                    let ch;\n                    let name;\n                    const index = parserInput.i;\n\n                    parserInput.save();\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\n                        ch = parserInput.currentChar();\n                        if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\n                            // this may be a VariableCall lookup\n                            const result = parsers.variableCall(name);\n                            if (result) {\n                                parserInput.forget();\n                                return result;\n                            }\n                        }\n                        parserInput.forget();\n                        return new(tree.Variable)(name, index, fileInfo);\n                    }\n                    parserInput.restore();\n                },\n\n                // A variable entity using the protective {} e.g. @{var}\n                variableCurly: function () {\n                    let curly;\n                    const index = parserInput.i;\n\n                    if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\n                        return new(tree.Variable)(`@${curly[1]}`, index, fileInfo);\n                    }\n                },\n                //\n                // A Property accessor, such as `$color`, in\n                //\n                //     background-color: $color\n                //\n                property: function () {\n                    let name;\n                    const index = parserInput.i;\n\n                    if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\n                        return new(tree.Property)(name, index, fileInfo);\n                    }\n                },\n\n                // A property entity useing the protective {} e.g. ${prop}\n                propertyCurly: function () {\n                    let curly;\n                    const index = parserInput.i;\n\n                    if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\n                        return new(tree.Property)(`$${curly[1]}`, index, fileInfo);\n                    }\n                },\n                //\n                // A Hexadecimal color\n                //\n                //     #4F3C2F\n                //\n                // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\n                //\n                color: function () {\n                    let rgb;\n                    parserInput.save();\n\n                    if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\n                        if (!rgb[2]) {\n                            parserInput.forget();\n                            return new(tree.Color)(rgb[1], undefined, rgb[0]);\n                        } \n                    }\n                    parserInput.restore();\n                },\n\n                colorKeyword: function () {\n                    parserInput.save();\n                    const autoCommentAbsorb = parserInput.autoCommentAbsorb;\n                    parserInput.autoCommentAbsorb = false;\n                    const k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\n                    parserInput.autoCommentAbsorb = autoCommentAbsorb;\n                    if (!k) {\n                        parserInput.forget();\n                        return;\n                    }\n                    parserInput.restore();\n                    const color = tree.Color.fromKeyword(k);\n                    if (color) {\n                        parserInput.$str(k);\n                        return color;\n                    }\n                },\n\n                //\n                // A Dimension, that is, a number and a unit\n                //\n                //     0.5em 95%\n                //\n                dimension: function () {\n                    if (parserInput.peekNotNumeric()) {\n                        return;\n                    }\n\n                    const value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\n                    if (value) {\n                        return new(tree.Dimension)(value[1], value[2]);\n                    }\n                },\n\n                //\n                // A unicode descriptor, as is used in unicode-range\n                //\n                // U+0??  or U+00A1-00A9\n                //\n                unicodeDescriptor: function () {\n                    let ud;\n\n                    ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\n                    if (ud) {\n                        return new(tree.UnicodeDescriptor)(ud[0]);\n                    }\n                },\n\n                //\n                // JavaScript code to be evaluated\n                //\n                //     `window.location.href`\n                //\n                javascript: function () {\n                    let js;\n                    const index = parserInput.i;\n\n                    parserInput.save();\n\n                    const escape = parserInput.$char('~');\n                    const jsQuote = parserInput.$char('`');\n\n                    if (!jsQuote) {\n                        parserInput.restore();\n                        return;\n                    }\n\n                    js = parserInput.$re(/^[^`]*`/);\n                    if (js) {\n                        parserInput.forget();\n                        return new(tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\n                    }\n                    parserInput.restore('invalid javascript definition');\n                }\n            },\n\n            //\n            // The variable part of a variable definition. Used in the `rule` parser\n            //\n            //     @fink:\n            //\n            variable: function () {\n                let name;\n\n                if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) { return name[1]; }\n            },\n\n            //\n            // Call a variable value to retrieve a detached ruleset\n            // or a value from a detached ruleset's rules.\n            //\n            //     @fink();\n            //     @fink;\n            //     color: @fink[@color];\n            //\n            variableCall: function (parsedName) {\n                let lookups;\n                const i = parserInput.i;\n                const inValue = !!parsedName;\n                let name = parsedName;\n\n                parserInput.save();\n\n                if (name || (parserInput.currentChar() === '@'\n                    && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\n\n                    lookups = this.mixin.ruleLookups();\n\n                    if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\n                        parserInput.restore('Missing \\'[...]\\' lookup in variable call');\n                        return;\n                    }\n\n                    if (!inValue) {\n                        name = name[1];\n                    }\n\n                    const call = new tree.VariableCall(name, i, fileInfo);\n                    if (!inValue && parsers.end()) {\n                        parserInput.forget();\n                        return call;\n                    }\n                    else {\n                        parserInput.forget();\n                        return new tree.NamespaceValue(call, lookups, i, fileInfo);\n                    }\n                }\n\n                parserInput.restore();\n            },\n\n            //\n            // extend syntax - used to extend selectors\n            //\n            extend: function(isRule) {\n                let elements;\n                let e;\n                const index = parserInput.i;\n                let option;\n                let extendList;\n                let extend;\n\n                if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\n                    return;\n                }\n\n                do {\n                    option = null;\n                    elements = null;\n                    while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\n                        e = this.element();\n                        if (!e) {\n                            break;\n                        }\n                        if (elements) {\n                            elements.push(e);\n                        } else {\n                            elements = [ e ];\n                        }\n                    }\n\n                    option = option && option[1];\n                    if (!elements) {\n                        error('Missing target selector for :extend().');\n                    }\n                    extend = new(tree.Extend)(new(tree.Selector)(elements), option, index, fileInfo);\n                    if (extendList) {\n                        extendList.push(extend);\n                    } else {\n                        extendList = [ extend ];\n                    }\n                } while (parserInput.$char(','));\n\n                expect(/^\\)/);\n\n                if (isRule) {\n                    expect(/^;/);\n                }\n\n                return extendList;\n            },\n\n            //\n            // extendRule - used in a rule to extend all the parent selectors\n            //\n            extendRule: function() {\n                return this.extend(true);\n            },\n\n            //\n            // Mixins\n            //\n            mixin: {\n                //\n                // A Mixin call, with an optional argument list\n                //\n                //     #mixins > .square(#fff);\n                //     #mixins.square(#fff);\n                //     .rounded(4px, black);\n                //     .button;\n                //\n                // We can lookup / return a value using the lookup syntax:\n                //\n                //     color: #mixin.square(#fff)[@color];\n                //\n                // The `while` loop is there because mixins can be\n                // namespaced, but we only support the child and descendant\n                // selector for now.\n                //\n                call: function (inValue, getLookup) {\n                    const s = parserInput.currentChar();\n                    let important = false;\n                    let lookups;\n                    const index = parserInput.i;\n                    let elements;\n                    let args;\n                    let hasParens;\n\n                    if (s !== '.' && s !== '#') { return; }\n\n                    parserInput.save(); // stop us absorbing part of an invalid selector\n\n                    elements = this.elements();\n\n                    if (elements) {\n                        if (parserInput.$char('(')) {\n                            args = this.args(true).args;\n                            expectChar(')');\n                            hasParens = true;\n                        }\n\n                        if (getLookup !== false) {\n                            lookups = this.ruleLookups();\n                        }\n                        if (getLookup === true && !lookups) {\n                            parserInput.restore();\n                            return;\n                        }\n\n                        if (inValue && !lookups && !hasParens) {\n                            // This isn't a valid in-value mixin call\n                            parserInput.restore();\n                            return;\n                        }\n\n                        if (!inValue && parsers.important()) {\n                            important = true;\n                        }\n\n                        if (inValue || parsers.end()) {\n                            parserInput.forget();\n                            const mixin = new(tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\n                            if (lookups) {\n                                return new tree.NamespaceValue(mixin, lookups);\n                            }\n                            else {\n                                return mixin;\n                            }\n                        }\n                    }\n\n                    parserInput.restore();\n                },\n                /**\n                 * Matching elements for mixins\n                 * (Start with . or # and can have > )\n                 */\n                elements: function() {\n                    let elements;\n                    let e;\n                    let c;\n                    let elem;\n                    let elemIndex;\n                    const re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\n                    while (true) {\n                        elemIndex = parserInput.i;\n                        e = parserInput.$re(re);\n                        \n                        if (!e) {\n                            break;\n                        }\n                        elem = new(tree.Element)(c, e, false, elemIndex, fileInfo);\n                        if (elements) {\n                            elements.push(elem);\n                        } else {\n                            elements = [ elem ];\n                        }\n                        c = parserInput.$char('>');\n                    }\n                    return elements;\n                },\n                args: function (isCall) {\n                    const entities = parsers.entities;\n                    const returner = { args:null, variadic: false };\n                    let expressions = [];\n                    const argsSemiColon = [];\n                    const argsComma = [];\n                    let isSemiColonSeparated;\n                    let expressionContainsNamed;\n                    let name;\n                    let nameLoop;\n                    let value;\n                    let arg;\n                    let expand;\n                    let hasSep = true;\n\n                    parserInput.save();\n\n                    while (true) {\n                        if (isCall) {\n                            arg = parsers.detachedRuleset() || parsers.expression();\n                        } else {\n                            parserInput.commentStore.length = 0;\n                            if (parserInput.$str('...')) {\n                                returner.variadic = true;\n                                if (parserInput.$char(';') && !isSemiColonSeparated) {\n                                    isSemiColonSeparated = true;\n                                }\n                                (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                    .push({ variadic: true });\n                                break;\n                            }\n                            arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\n                        }\n\n                        if (!arg || !hasSep) {\n                            break;\n                        }\n\n                        nameLoop = null;\n                        if (arg.throwAwayComments) {\n                            arg.throwAwayComments();\n                        }\n                        value = arg;\n                        let val = null;\n\n                        if (isCall) {\n                            // Variable\n                            if (arg.value && arg.value.length == 1) {\n                                val = arg.value[0];\n                            }\n                        } else {\n                            val = arg;\n                        }\n\n                        if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\n                            if (parserInput.$char(':')) {\n                                if (expressions.length > 0) {\n                                    if (isSemiColonSeparated) {\n                                        error('Cannot mix ; and , as delimiter types');\n                                    }\n                                    expressionContainsNamed = true;\n                                }\n\n                                value = parsers.detachedRuleset() || parsers.expression();\n\n                                if (!value) {\n                                    if (isCall) {\n                                        error('could not understand value for named argument');\n                                    } else {\n                                        parserInput.restore();\n                                        returner.args = [];\n                                        return returner;\n                                    }\n                                }\n                                nameLoop = (name = val.name);\n                            } else if (parserInput.$str('...')) {\n                                if (!isCall) {\n                                    returner.variadic = true;\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\n                                        isSemiColonSeparated = true;\n                                    }\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                        .push({ name: arg.name, variadic: true });\n                                    break;\n                                } else {\n                                    expand = true;\n                                }\n                            } else if (!isCall) {\n                                name = nameLoop = val.name;\n                                value = null;\n                            }\n                        }\n\n                        if (value) {\n                            expressions.push(value);\n                        }\n\n                        argsComma.push({ name:nameLoop, value, expand });\n\n                        if (parserInput.$char(',')) {\n                            hasSep = true;\n                            continue;\n                        }\n                        hasSep = parserInput.$char(';') === ';';\n\n                        if (hasSep || isSemiColonSeparated) {\n\n                            if (expressionContainsNamed) {\n                                error('Cannot mix ; and , as delimiter types');\n                            }\n\n                            isSemiColonSeparated = true;\n\n                            if (expressions.length > 1) {\n                                value = new(tree.Value)(expressions);\n                            }\n                            argsSemiColon.push({ name, value, expand });\n\n                            name = null;\n                            expressions = [];\n                            expressionContainsNamed = false;\n                        }\n                    }\n\n                    parserInput.forget();\n                    returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\n                    return returner;\n                },\n                //\n                // A Mixin definition, with a list of parameters\n                //\n                //     .rounded (@radius: 2px, @color) {\n                //        ...\n                //     }\n                //\n                // Until we have a finer grained state-machine, we have to\n                // do a look-ahead, to make sure we don't have a mixin call.\n                // See the `rule` function for more information.\n                //\n                // We start by matching `.rounded (`, and then proceed on to\n                // the argument list, which has optional default values.\n                // We store the parameters in `params`, with a `value` key,\n                // if there is a value, such as in the case of `@radius`.\n                //\n                // Once we've got our params list, and a closing `)`, we parse\n                // the `{...}` block.\n                //\n                definition: function () {\n                    let name;\n                    let params = [];\n                    let match;\n                    let ruleset;\n                    let cond;\n                    let variadic = false;\n                    if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\n                        parserInput.peek(/^[^{]*\\}/)) {\n                        return;\n                    }\n\n                    parserInput.save();\n\n                    match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\n                    if (match) {\n                        name = match[1];\n\n                        const argInfo = this.args(false);\n                        params = argInfo.args;\n                        variadic = argInfo.variadic;\n\n                        // .mixincall(\"@{a}\");\n                        // looks a bit like a mixin definition..\n                        // also\n                        // .mixincall(@a: {rule: set;});\n                        // so we have to be nice and restore\n                        if (!parserInput.$char(')')) {\n                            parserInput.restore('Missing closing \\')\\'');\n                            return;\n                        }\n\n                        parserInput.commentStore.length = 0;\n\n                        if (parserInput.$str('when')) { // Guard\n                            cond = expect(parsers.conditions, 'expected condition');\n                        }\n\n                        ruleset = parsers.block();\n\n                        if (ruleset) {\n                            parserInput.forget();\n                            return new(tree.mixin.Definition)(name, params, ruleset, cond, variadic);\n                        } else {\n                            parserInput.restore();\n                        }\n                    } else {\n                        parserInput.restore();\n                    }\n                },\n            \n                ruleLookups: function() {\n                    let rule;\n                    let args;\n                    const lookups = [];\n\n                    if (parserInput.currentChar() !== '[') { \n                        return;\n                    }\n\n                    while (true) {\n                        parserInput.save();\n                        args = null;\n                        rule = this.lookupValue();\n                        if (!rule && rule !== '') {\n                            parserInput.restore();\n                            break;\n                        }\n                        lookups.push(rule);\n                        parserInput.forget();\n                    }\n                    if (lookups.length > 0) {\n                        return lookups;\n                    }\n                },\n    \n                lookupValue: function() {\n                    parserInput.save();\n    \n                    if (!parserInput.$char('[')) { \n                        parserInput.restore();\n                        return;\n                    }\n    \n                    const name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\n    \n                    if (!parserInput.$char(']')) {\n                        parserInput.restore();\n                        return;\n                    } \n\n                    if (name || name === '') {\n                        parserInput.forget();\n                        return name;\n                    }\n    \n                    parserInput.restore();\n                }\n            },\n            //\n            // Entities are the smallest recognized token,\n            // and can be found inside a rule's value.\n            //\n            entity: function () {\n                const entities = this.entities;\n\n                return this.comment() || entities.literal() || entities.variable() || entities.url() ||\n                    entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\n                    entities.javascript();\n            },\n\n            //\n            // A Declaration terminator. Note that we use `peek()` to check for '}',\n            // because the `block` rule will be expecting it, but we still need to make sure\n            // it's there, if ';' was omitted.\n            //\n            end: function () {\n                return parserInput.$char(';') || parserInput.peek('}');\n            },\n\n            //\n            // IE's alpha function\n            //\n            //     alpha(opacity=88)\n            //\n            ieAlpha: function () {\n                let value;\n\n                // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                if (!parserInput.$re(/^opacity=/i)) { return; }\n                value = parserInput.$re(/^\\d+/);\n                if (!value) {\n                    value = expect(parsers.entities.variable, 'Could not parse alpha');\n                    value = `@{${value.name.slice(1)}}`;\n                }\n                expectChar(')');\n                return new tree.Quoted('', `alpha(opacity=${value})`);\n            },\n\n            //\n            // A Selector Element\n            //\n            //     div\n            //     + h1\n            //     #socks\n            //     input[type=\"text\"]\n            //\n            // Elements are the building blocks for Selectors,\n            // they are made out of a `Combinator` (see combinator rule),\n            // and an element name, such as a tag a class, or `*`.\n            //\n            element: function () {\n                let e;\n                let c;\n                let v;\n                const index = parserInput.i;\n\n                c = this.combinator();\n\n                e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\n                    parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\n                    parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\n                    parserInput.$re(/^\\([^&()@]+\\)/) ||  parserInput.$re(/^[\\.#:](?=@)/) ||\n                    this.entities.variableCurly();\n\n                if (!e) {\n                    parserInput.save();\n                    if (parserInput.$char('(')) {\n                        if ((v = this.selector(false)) && parserInput.$char(')')) {\n                            e = new(tree.Paren)(v);\n                            parserInput.forget();\n                        } else {\n                            parserInput.restore('Missing closing \\')\\'');\n                        }\n                    } else {\n                        parserInput.forget();\n                    }\n                }\n\n                if (e) { return new(tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo); }\n            },\n\n            //\n            // Combinators combine elements together, in a Selector.\n            //\n            // Because our parser isn't white-space sensitive, special care\n            // has to be taken, when parsing the descendant combinator, ` `,\n            // as it's an empty space. We have to check the previous character\n            // in the input, to see if it's a ` ` character. More info on how\n            // we deal with this in *combinator.js*.\n            //\n            combinator: function () {\n                let c = parserInput.currentChar();\n\n                if (c === '/') {\n                    parserInput.save();\n                    const slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\n                    if (slashedCombinator) {\n                        parserInput.forget();\n                        return new(tree.Combinator)(slashedCombinator);\n                    }\n                    parserInput.restore();\n                }\n\n                if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\n                    parserInput.i++;\n                    if (c === '^' && parserInput.currentChar() === '^') {\n                        c = '^^';\n                        parserInput.i++;\n                    }\n                    while (parserInput.isWhitespace()) { parserInput.i++; }\n                    return new(tree.Combinator)(c);\n                } else if (parserInput.isWhitespace(-1)) {\n                    return new(tree.Combinator)(' ');\n                } else {\n                    return new(tree.Combinator)(null);\n                }\n            },\n            //\n            // A CSS Selector\n            // with less extensions e.g. the ability to extend and guard\n            //\n            //     .class > div + h1\n            //     li a:hover\n            //\n            // Selectors are made out of one or more Elements, see above.\n            //\n            selector: function (isLess) {\n                const index = parserInput.i;\n                let elements;\n                let extendList;\n                let c;\n                let e;\n                let allExtends;\n                let when;\n                let condition;\n                isLess = isLess !== false;\n                while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\n                    if (when) {\n                        condition = expect(this.conditions, 'expected condition');\n                    } else if (condition) {\n                        error('CSS guard can only be used at the end of selector');\n                    } else if (extendList) {\n                        if (allExtends) {\n                            allExtends = allExtends.concat(extendList);\n                        } else {\n                            allExtends = extendList;\n                        }\n                    } else {\n                        if (allExtends) { error('Extend can only be used at the end of selector'); }\n                        c = parserInput.currentChar();\n                        if (elements) {\n                            elements.push(e);\n                        } else {\n                            elements = [ e ];\n                        }\n                        e = null;\n                    }\n                    if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\n                        break;\n                    }\n                }\n\n                if (elements) { return new(tree.Selector)(elements, allExtends, condition, index, fileInfo); }\n                if (allExtends) { error('Extend must be used to extend a selector, it cannot be used on its own'); }\n            },\n            selectors: function () {\n                let s;\n                let selectors;\n                while (true) {\n                    s = this.selector();\n                    if (!s) {\n                        break;\n                    }\n                    if (selectors) {\n                        selectors.push(s);\n                    } else {\n                        selectors = [ s ];\n                    }\n                    parserInput.commentStore.length = 0;\n                    if (s.condition && selectors.length > 1) {\n                        error(\"Guards are only currently allowed on a single selector.\");\n                    }\n                    if (!parserInput.$char(',')) { break; }\n                    if (s.condition) {\n                        error(\"Guards are only currently allowed on a single selector.\");\n                    }\n                    parserInput.commentStore.length = 0;\n                }\n                return selectors;\n            },\n            attribute: function () {\n                if (!parserInput.$char('[')) { return; }\n\n                const entities = this.entities;\n                let key;\n                let val;\n                let op;\n\n                if (!(key = entities.variableCurly())) {\n                    key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\n                }\n\n                op = parserInput.$re(/^[|~*$^]?=/);\n                if (op) {\n                    val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\n                }\n\n                expectChar(']');\n\n                return new(tree.Attribute)(key, op, val);\n            },\n\n            //\n            // The `block` rule is used by `ruleset` and `mixin.definition`.\n            // It's a wrapper around the `primary` rule, with added `{}`.\n            //\n            block: function () {\n                let content;\n                if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\n                    return content;\n                }\n            },\n\n            blockRuleset: function() {\n                let block = this.block();\n\n                if (block) {\n                    block = new tree.Ruleset(null, block);\n                }\n                return block;\n            },\n\n            detachedRuleset: function() {\n                let argInfo;\n                let params;\n                let variadic;\n\n                parserInput.save();\n                if (parserInput.$re(/^[.#]\\(/)) {\n                    /**\n                     * DR args currently only implemented for each() function, and not \n                     * yet settable as `@dr: #(@arg) {}`\n                     * This should be done when DRs are merged with mixins.\n                     * See: https://github.com/less/less-meta/issues/16\n                     */\n                    argInfo = this.mixin.args(false);\n                    params = argInfo.args;\n                    variadic = argInfo.variadic;\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore();\n                        return;\n                    }\n                }\n                const blockRuleset = this.blockRuleset();\n                if (blockRuleset) {\n                    parserInput.forget();\n                    if (params) {\n                        return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\n                    }\n                    return new tree.DetachedRuleset(blockRuleset);\n                }\n                parserInput.restore();\n            },\n\n            //\n            // div, .class, body > p {...}\n            //\n            ruleset: function () {\n                let selectors;\n                let rules;\n                let debugInfo;\n\n                parserInput.save();\n\n                if (context.dumpLineNumbers) {\n                    debugInfo = getDebugInfo(parserInput.i);\n                }\n\n                selectors = this.selectors();\n\n                if (selectors && (rules = this.block())) {\n                    parserInput.forget();\n                    const ruleset = new(tree.Ruleset)(selectors, rules, context.strictImports);\n                    if (context.dumpLineNumbers) {\n                        ruleset.debugInfo = debugInfo;\n                    }\n                    return ruleset;\n                } else {\n                    parserInput.restore();\n                }\n            },\n            declaration: function () {\n                let name;\n                let value;\n                const index = parserInput.i;\n                let hasDR;\n                const c = parserInput.currentChar();\n                let important;\n                let merge;\n                let isVariable;\n\n                if (c === '.' || c === '#' || c === '&' || c === ':') { return; }\n\n                parserInput.save();\n\n                name = this.variable() || this.ruleProperty();\n                if (name) {\n                    isVariable = typeof name === 'string';\n\n                    if (isVariable) {\n                        value = this.detachedRuleset();\n                        if (value) {\n                            hasDR = true;\n                        }\n                    }\n\n                    parserInput.commentStore.length = 0;\n                    if (!value) {\n                        // a name returned by this.ruleProperty() is always an array of the form:\n                        // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\n                        // where each item is a tree.Keyword or tree.Variable\n                        merge = !isVariable && name.length > 1 && name.pop().value;\n\n                        // Custom property values get permissive parsing\n                        if (name[0].value && name[0].value.slice(0, 2) === '--') {\n                            value = this.permissiveValue();\n                        }\n                        // Try to store values as anonymous\n                        // If we need the value later we'll re-parse it in ruleset.parseValue\n                        else {\n                            value = this.anonymousValue();\n                        }\n                        if (value) {\n                            parserInput.forget();\n                            // anonymous values absorb the end ';' which is required for them to work\n                            return new(tree.Declaration)(name, value, false, merge, index, fileInfo);\n                        }\n\n                        if (!value) {\n                            value = this.value();\n                        }\n\n                        if (value) {\n                            important = this.important();\n                        } else if (isVariable) {\n                            // As a last resort, try permissiveValue\n                            value = this.permissiveValue();\n                        }\n                    }\n\n                    if (value && (this.end() || hasDR)) {\n                        parserInput.forget();\n                        return new(tree.Declaration)(name, value, important, merge, index, fileInfo);\n                    }\n                    else {\n                        parserInput.restore();\n                    }\n                } else {\n                    parserInput.restore();\n                }\n            },\n            anonymousValue: function () {\n                const index = parserInput.i;\n                const match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\n                if (match) {\n                    return new(tree.Anonymous)(match[1], index);\n                }\n            },\n            /**\n             * Used for custom properties, at-rules, and variables (as fallback)\n             * Parses almost anything inside of {} [] () \"\" blocks\n             * until it reaches outer-most tokens.\n             * \n             * First, it will try to parse comments and entities to reach\n             * the end. This is mostly like the Expression parser except no\n             * math is allowed.\n             */\n            permissiveValue: function (untilTokens) {\n                let i;\n                let e;\n                let done;\n                let value;\n                const tok = untilTokens || ';';\n                const index = parserInput.i;\n                const result = [];\n\n                function testCurrentChar() {\n                    const char = parserInput.currentChar();\n                    if (typeof tok === 'string') {\n                        return char === tok;\n                    } else {\n                        return tok.test(char);\n                    }\n                }\n                if (testCurrentChar()) {\n                    return;\n                }\n                value = [];\n                do {\n                    e = this.comment();\n                    if (e) {\n                        value.push(e);\n                        continue;\n                    }\n                    e = this.entity();\n                    if (e) {\n                        value.push(e);\n                    }\n                } while (e);\n\n                done = testCurrentChar();\n\n                if (value.length > 0) {\n                    value = new(tree.Expression)(value);\n                    if (done) {\n                        return value;\n                    }\n                    else {\n                        result.push(value);\n                    }\n                    // Preserve space before $parseUntil as it will not\n                    if (parserInput.prevChar() === ' ') {\n                        result.push(new tree.Anonymous(' ', index));\n                    }\n                }\n                parserInput.save();\n\n                value = parserInput.$parseUntil(tok);\n\n                if (value) {\n                    if (typeof value === 'string') {\n                        error(`Expected '${value}'`, 'Parse');\n                    }\n                    if (value.length === 1 && value[0] === ' ') {\n                        parserInput.forget();\n                        return new tree.Anonymous('', index);\n                    }\n                    let item;\n                    for (i = 0; i < value.length; i++) {\n                        item = value[i];\n                        if (Array.isArray(item)) {\n                            // Treat actual quotes as normal quoted values\n                            result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\n                        }\n                        else {\n                            if (i === value.length - 1) {\n                                item = item.trim();\n                            }\n                            // Treat like quoted values, but replace vars like unquoted expressions\n                            const quote = new tree.Quoted('\\'', item, true, index, fileInfo);\n                            quote.variableRegex = /@([\\w-]+)/g;\n                            quote.propRegex = /\\$([\\w-]+)/g;\n                            result.push(quote);\n                        }\n                    }\n                    parserInput.forget();\n                    return new tree.Expression(result, true);\n                }\n                parserInput.restore();\n            },\n\n            //\n            // An @import atrule\n            //\n            //     @import \"lib\";\n            //\n            // Depending on our environment, importing is done differently:\n            // In the browser, it's an XHR request, in Node, it would be a\n            // file-system operation. The function used for importing is\n            // stored in `import`, which we pass to the Import constructor.\n            //\n            'import': function () {\n                let path;\n                let features;\n                const index = parserInput.i;\n\n                const dir = parserInput.$re(/^@import?\\s+/);\n\n                if (dir) {\n                    const options = (dir ? this.importOptions() : null) || {};\n\n                    if ((path = this.entities.quoted() || this.entities.url())) {\n                        features = this.mediaFeatures();\n\n                        if (!parserInput.$char(';')) {\n                            parserInput.i = index;\n                            error('missing semi-colon or unrecognised media features on import');\n                        }\n                        features = features && new(tree.Value)(features);\n                        return new(tree.Import)(path, features, options, index, fileInfo);\n                    }\n                    else {\n                        parserInput.i = index;\n                        error('malformed import statement');\n                    }\n                }\n            },\n\n            importOptions: function() {\n                let o;\n                const options = {};\n                let optionName;\n                let value;\n\n                // list of options, surrounded by parens\n                if (!parserInput.$char('(')) { return null; }\n                do {\n                    o = this.importOption();\n                    if (o) {\n                        optionName = o;\n                        value = true;\n                        switch (optionName) {\n                            case 'css':\n                                optionName = 'less';\n                                value = false;\n                                break;\n                            case 'once':\n                                optionName = 'multiple';\n                                value = false;\n                                break;\n                        }\n                        options[optionName] = value;\n                        if (!parserInput.$char(',')) { break; }\n                    }\n                } while (o);\n                expectChar(')');\n                return options;\n            },\n\n            importOption: function() {\n                const opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\n                if (opt) {\n                    return opt[1];\n                }\n            },\n\n            mediaFeature: function () {\n                const entities = this.entities;\n                const nodes = [];\n                let e;\n                let p;\n                parserInput.save();\n                do {\n                    e = entities.keyword() || entities.variable() || entities.mixinLookup();\n                    if (e) {\n                        nodes.push(e);\n                    } else if (parserInput.$char('(')) {\n                        p = this.property();\n                        e = this.value();\n                        if (parserInput.$char(')')) {\n                            if (p && e) {\n                                nodes.push(new(tree.Paren)(new(tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\n                            } else if (e) {\n                                nodes.push(new(tree.Paren)(e));\n                            } else {\n                                error('badly formed media feature definition');\n                            }\n                        } else {\n                            error('Missing closing \\')\\'', 'Parse');\n                        }\n                    }\n                } while (e);\n\n                parserInput.forget();\n                if (nodes.length > 0) {\n                    return new(tree.Expression)(nodes);\n                }\n            },\n\n            mediaFeatures: function () {\n                const entities = this.entities;\n                const features = [];\n                let e;\n                do {\n                    e = this.mediaFeature();\n                    if (e) {\n                        features.push(e);\n                        if (!parserInput.$char(',')) { break; }\n                    } else {\n                        e = entities.variable() || entities.mixinLookup();\n                        if (e) {\n                            features.push(e);\n                            if (!parserInput.$char(',')) { break; }\n                        }\n                    }\n                } while (e);\n\n                return features.length > 0 ? features : null;\n            },\n\n            media: function () {\n                let features;\n                let rules;\n                let media;\n                let debugInfo;\n                const index = parserInput.i;\n\n                if (context.dumpLineNumbers) {\n                    debugInfo = getDebugInfo(index);\n                }\n\n                parserInput.save();\n\n                if (parserInput.$str('@media')) {\n                    features = this.mediaFeatures();\n\n                    rules = this.block();\n\n                    if (!rules) {\n                        error('media definitions require block statements after any features');\n                    }\n\n                    parserInput.forget();\n\n                    media = new(tree.Media)(rules, features, index, fileInfo);\n                    if (context.dumpLineNumbers) {\n                        media.debugInfo = debugInfo;\n                    }\n\n                    return media;\n                }\n\n                parserInput.restore();\n            },\n\n            //\n\n            // A @plugin directive, used to import plugins dynamically.\n            //\n            //     @plugin (args) \"lib\";\n            //\n            plugin: function () {\n                let path;\n                let args;\n                let options;\n                const index = parserInput.i;\n                const dir   = parserInput.$re(/^@plugin?\\s+/);\n\n                if (dir) {\n                    args = this.pluginArgs();\n\n                    if (args) {\n                        options = {\n                            pluginArgs: args,\n                            isPlugin: true\n                        };\n                    }\n                    else {\n                        options = { isPlugin: true };\n                    }\n\n                    if ((path = this.entities.quoted() || this.entities.url())) {\n\n                        if (!parserInput.$char(';')) {\n                            parserInput.i = index;\n                            error('missing semi-colon on @plugin');\n                        }\n                        return new(tree.Import)(path, null, options, index, fileInfo);\n                    }\n                    else {\n                        parserInput.i = index;\n                        error('malformed @plugin statement');\n                    }\n                }\n            },\n\n            pluginArgs: function() {\n                // list of options, surrounded by parens\n                parserInput.save();\n                if (!parserInput.$char('(')) {\n                    parserInput.restore();\n                    return null;\n                }\n                const args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\n                if (args[1]) {\n                    parserInput.forget();\n                    return args[1].trim();\n                }\n                else { \n                    parserInput.restore();\n                    return null;\n                }\n            },\n\n            //\n            // A CSS AtRule\n            //\n            //     @charset \"utf-8\";\n            //\n            atrule: function () {\n                const index = parserInput.i;\n                let name;\n                let value;\n                let rules;\n                let nonVendorSpecificName;\n                let hasIdentifier;\n                let hasExpression;\n                let hasUnknown;\n                let hasBlock = true;\n                let isRooted = true;\n\n                if (parserInput.currentChar() !== '@') { return; }\n\n                value = this['import']() || this.plugin() || this.media();\n                if (value) {\n                    return value;\n                }\n\n                parserInput.save();\n\n                name = parserInput.$re(/^@[a-z-]+/);\n\n                if (!name) { return; }\n\n                nonVendorSpecificName = name;\n                if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\n                    nonVendorSpecificName = `@${name.slice(name.indexOf('-', 2) + 1)}`;\n                }\n\n                switch (nonVendorSpecificName) {\n                    case '@charset':\n                        hasIdentifier = true;\n                        hasBlock = false;\n                        break;\n                    case '@namespace':\n                        hasExpression = true;\n                        hasBlock = false;\n                        break;\n                    case '@keyframes':\n                    case '@counter-style':\n                        hasIdentifier = true;\n                        break;\n                    case '@document':\n                    case '@supports':\n                        hasUnknown = true;\n                        isRooted = false;\n                        break;\n                    default:\n                        hasUnknown = true;\n                        break;\n                }\n\n                parserInput.commentStore.length = 0;\n\n                if (hasIdentifier) {\n                    value = this.entity();\n                    if (!value) {\n                        error(`expected ${name} identifier`);\n                    }\n                } else if (hasExpression) {\n                    value = this.expression();\n                    if (!value) {\n                        error(`expected ${name} expression`);\n                    }\n                } else if (hasUnknown) {\n                    value = this.permissiveValue(/^[{;]/);\n                    hasBlock = (parserInput.currentChar() === '{');\n                    if (!value) {\n                        if (!hasBlock && parserInput.currentChar() !== ';') {\n                            error(`${name} rule is missing block or ending semi-colon`);\n                        }\n                    }\n                    else if (!value.value) {\n                        value = null;\n                    }\n                }\n\n                if (hasBlock) {\n                    rules = this.blockRuleset();\n                }\n\n                if (rules || (!hasBlock && value && parserInput.$char(';'))) {\n                    parserInput.forget();\n                    return new(tree.AtRule)(name, value, rules, index, fileInfo,\n                        context.dumpLineNumbers ? getDebugInfo(index) : null,\n                        isRooted\n                    );\n                }\n\n                parserInput.restore('at-rule options not recognised');\n            },\n\n            //\n            // A Value is a comma-delimited list of Expressions\n            //\n            //     font-family: Baskerville, Georgia, serif;\n            //\n            // In a Rule, a Value represents everything after the `:`,\n            // and before the `;`.\n            //\n            value: function () {\n                let e;\n                const expressions = [];\n                const index = parserInput.i;\n\n                do {\n                    e = this.expression();\n                    if (e) {\n                        expressions.push(e);\n                        if (!parserInput.$char(',')) { break; }\n                    }\n                } while (e);\n\n                if (expressions.length > 0) {\n                    return new(tree.Value)(expressions, index);\n                }\n            },\n            important: function () {\n                if (parserInput.currentChar() === '!') {\n                    return parserInput.$re(/^! *important/);\n                }\n            },\n            sub: function () {\n                let a;\n                let e;\n\n                parserInput.save();\n                if (parserInput.$char('(')) {\n                    a = this.addition();\n                    if (a && parserInput.$char(')')) {\n                        parserInput.forget();\n                        e = new(tree.Expression)([a]);\n                        e.parens = true;\n                        return e;\n                    }\n                    parserInput.restore('Expected \\')\\'');\n                    return;\n                }\n                parserInput.restore();\n            },\n            multiplication: function () {\n                let m;\n                let a;\n                let op;\n                let operation;\n                let isSpaced;\n                m = this.operand();\n                if (m) {\n                    isSpaced = parserInput.isWhitespace(-1);\n                    while (true) {\n                        if (parserInput.peek(/^\\/[*\\/]/)) {\n                            break;\n                        }\n\n                        parserInput.save();\n\n                        op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\n\n                        if (!op) { parserInput.forget(); break; }\n\n                        a = this.operand();\n\n                        if (!a) { parserInput.restore(); break; }\n                        parserInput.forget();\n\n                        m.parensInOp = true;\n                        a.parensInOp = true;\n                        operation = new(tree.Operation)(op, [operation || m, a], isSpaced);\n                        isSpaced = parserInput.isWhitespace(-1);\n                    }\n                    return operation || m;\n                }\n            },\n            addition: function () {\n                let m;\n                let a;\n                let op;\n                let operation;\n                let isSpaced;\n                m = this.multiplication();\n                if (m) {\n                    isSpaced = parserInput.isWhitespace(-1);\n                    while (true) {\n                        op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\n                        if (!op) {\n                            break;\n                        }\n                        a = this.multiplication();\n                        if (!a) {\n                            break;\n                        }\n\n                        m.parensInOp = true;\n                        a.parensInOp = true;\n                        operation = new(tree.Operation)(op, [operation || m, a], isSpaced);\n                        isSpaced = parserInput.isWhitespace(-1);\n                    }\n                    return operation || m;\n                }\n            },\n            conditions: function () {\n                let a;\n                let b;\n                const index = parserInput.i;\n                let condition;\n\n                a = this.condition(true);\n                if (a) {\n                    while (true) {\n                        if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\n                            break;\n                        }\n                        b = this.condition(true);\n                        if (!b) {\n                            break;\n                        }\n                        condition = new(tree.Condition)('or', condition || a, b, index);\n                    }\n                    return condition || a;\n                }\n            },\n            condition: function (needsParens) {\n                let result;\n                let logical;\n                let next;\n                function or() {\n                    return parserInput.$str('or');\n                }\n\n                result = this.conditionAnd(needsParens);\n                if (!result) {\n                    return ;\n                }\n                logical = or();\n                if (logical) {\n                    next = this.condition(needsParens);\n                    if (next) {\n                        result = new(tree.Condition)(logical, result, next);\n                    } else {\n                        return ;\n                    }\n                }\n                return result;\n            },\n            conditionAnd: function (needsParens) {\n                let result;\n                let logical;\n                let next;\n                const self = this;\n                function insideCondition() {\n                    const cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\n                    if (!cond && !needsParens) {\n                        return self.atomicCondition(needsParens);\n                    }\n                    return cond;\n                }\n                function and() {\n                    return parserInput.$str('and');\n                }\n\n                result = insideCondition();\n                if (!result) {\n                    return ;\n                }\n                logical = and();\n                if (logical) {\n                    next = this.conditionAnd(needsParens);\n                    if (next) {\n                        result = new(tree.Condition)(logical, result, next);\n                    } else {\n                        return ;\n                    }\n                }\n                return result;\n            },\n            negatedCondition: function (needsParens) {\n                if (parserInput.$str('not')) {\n                    const result = this.parenthesisCondition(needsParens);\n                    if (result) {\n                        result.negate = !result.negate;\n                    }\n                    return result;\n                }\n            },\n            parenthesisCondition: function (needsParens) {\n                function tryConditionFollowedByParenthesis(me) {\n                    let body;\n                    parserInput.save();\n                    body = me.condition(needsParens);\n                    if (!body) {\n                        parserInput.restore();\n                        return ;\n                    }\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore();\n                        return ;\n                    }\n                    parserInput.forget();\n                    return body;\n                }\n\n                let body;\n                parserInput.save();\n                if (!parserInput.$str('(')) {\n                    parserInput.restore();\n                    return ;\n                }\n                body = tryConditionFollowedByParenthesis(this);\n                if (body) {\n                    parserInput.forget();\n                    return body;\n                }\n\n                body = this.atomicCondition(needsParens);\n                if (!body) {\n                    parserInput.restore();\n                    return ;\n                }\n                if (!parserInput.$char(')')) {\n                    parserInput.restore(`expected ')' got '${parserInput.currentChar()}'`);\n                    return ;\n                }\n                parserInput.forget();\n                return body;\n            },\n            atomicCondition: function (needsParens) {\n                const entities = this.entities;\n                const index = parserInput.i;\n                let a;\n                let b;\n                let c;\n                let op;\n\n                function cond() {\n                    return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\n                }\n                cond = cond.bind(this);\n\n                a = cond();\n                if (a) {\n                    if (parserInput.$char('>')) {\n                        if (parserInput.$char('=')) {\n                            op = '>=';\n                        } else {\n                            op = '>';\n                        }\n                    } else\n                    if (parserInput.$char('<')) {\n                        if (parserInput.$char('=')) {\n                            op = '<=';\n                        } else {\n                            op = '<';\n                        }\n                    } else\n                    if (parserInput.$char('=')) {\n                        if (parserInput.$char('>')) {\n                            op = '=>';\n                        } else if (parserInput.$char('<')) {\n                            op = '=<';\n                        } else {\n                            op = '=';\n                        }\n                    }\n                    if (op) {\n                        b = cond();\n                        if (b) {\n                            c = new(tree.Condition)(op, a, b, index, false);\n                        } else {\n                            error('expected expression');\n                        }\n                    } else {\n                        c = new(tree.Condition)('=', a, new(tree.Keyword)('true'), index, false);\n                    }\n                    return c;\n                }\n            },\n\n            //\n            // An operand is anything that can be part of an operation,\n            // such as a Color, or a Variable\n            //\n            operand: function () {\n                const entities = this.entities;\n                let negate;\n\n                if (parserInput.peek(/^-[@\\$\\(]/)) {\n                    negate = parserInput.$char('-');\n                }\n\n                let o = this.sub() || entities.dimension() ||\n                        entities.color() || entities.variable() ||\n                        entities.property() || entities.call() ||\n                        entities.quoted(true) || entities.colorKeyword() ||\n                        entities.mixinLookup();\n\n                if (negate) {\n                    o.parensInOp = true;\n                    o = new(tree.Negative)(o);\n                }\n\n                return o;\n            },\n\n            //\n            // Expressions either represent mathematical operations,\n            // or white-space delimited Entities.\n            //\n            //     1px solid black\n            //     @var * 2\n            //\n            expression: function () {\n                const entities = [];\n                let e;\n                let delim;\n                const index = parserInput.i;\n\n                do {\n                    e = this.comment();\n                    if (e) {\n                        entities.push(e);\n                        continue;\n                    }\n                    e = this.addition() || this.entity();\n\n                    if (e instanceof tree.Comment) {\n                        e = null;\n                    }\n\n                    if (e) {\n                        entities.push(e);\n                        // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\n                        if (!parserInput.peek(/^\\/[\\/*]/)) {\n                            delim = parserInput.$char('/');\n                            if (delim) {\n                                entities.push(new(tree.Anonymous)(delim, index));\n                            }\n                        }\n                    }\n                } while (e);\n                if (entities.length > 0) {\n                    return new(tree.Expression)(entities);\n                }\n            },\n            property: function () {\n                const name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\n                if (name) {\n                    return name[1];\n                }\n            },\n            ruleProperty: function () {\n                let name = [];\n                const index = [];\n                let s;\n                let k;\n\n                parserInput.save();\n\n                const simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\n                if (simpleProperty) {\n                    name = [new(tree.Keyword)(simpleProperty[1])];\n                    parserInput.forget();\n                    return name;\n                }\n\n                function match(re) {\n                    const i = parserInput.i;\n                    const chunk = parserInput.$re(re);\n                    if (chunk) {\n                        index.push(i);\n                        return name.push(chunk[1]);\n                    }\n                }\n\n                match(/^(\\*?)/);\n                while (true) {\n                    if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\n                        break;\n                    }\n                }\n\n                if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\n                    parserInput.forget();\n\n                    // at last, we have the complete match now. move forward,\n                    // convert name particles to tree objects and return:\n                    if (name[0] === '') {\n                        name.shift();\n                        index.shift();\n                    }\n                    for (k = 0; k < name.length; k++) {\n                        s = name[k];\n                        name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\n                            new(tree.Keyword)(s) :\n                            (s.charAt(0) === '@' ?\n                                new(tree.Variable)(`@${s.slice(2, -1)}`, index[k], fileInfo) :\n                                new(tree.Property)(`$${s.slice(2, -1)}`, index[k], fileInfo));\n                    }\n                    return name;\n                }\n                parserInput.restore();\n            }\n        }\n    };\n};\nParser.serializeVars = vars => {\n    let s = '';\n\n    for (const name in vars) {\n        if (Object.hasOwnProperty.call(vars, name)) {\n            const value = vars[name];\n            s += `${((name[0] === '@') ? '' : '@') + name}: ${value}${(String(value).slice(-1) === ';') ? '' : ';'}`;\n        }\n    }\n\n    return s;\n};\n\nexport default Parser;\n", "import Anonymous from '../tree/anonymous';\nimport Keyword from '../tree/keyword';\n\nfunction boolean(condition) {\n    return condition ? Keyword.True : Keyword.False;\n}\n\n/**\n * Functions with evalArgs set to false are sent context\n * as the first argument.\n */\nfunction If(context, condition, trueValue, falseValue) {\n    return condition.eval(context) ? trueValue.eval(context)\n        : (falseValue ? falseValue.eval(context) : new Anonymous);\n}\nIf.evalArgs = false;\n\nfunction isdefined(context, variable) {\n    try {\n        variable.eval(context);\n        return Keyword.True;\n    } catch (e) {\n        return Keyword.False;\n    }\n}\n\nisdefined.evalArgs = false;\n\nexport default { isdefined, boolean, 'if': If };\n", "import Dimension from '../tree/dimension';\nimport Color from '../tree/color';\nimport Quoted from '../tree/quoted';\nimport Anonymous from '../tree/anonymous';\nimport Expression from '../tree/expression';\nimport Operation from '../tree/operation';\nlet colorFunctions;\n\nfunction clamp(val) {\n    return Math.min(1, Math.max(0, val));\n}\nfunction hsla(origColor, hsl) {\n    const color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\n    if (color) {\n        if (origColor.value && \n            /^(rgb|hsl)/.test(origColor.value)) {\n            color.value = origColor.value;\n        } else {\n            color.value = 'rgb';\n        }\n        return color;\n    }\n}\nfunction toHSL(color) {\n    if (color.toHSL) {\n        return color.toHSL();\n    } else {\n        throw new Error('Argument cannot be evaluated to a color');\n    }\n}\n\nfunction toHSV(color) {\n    if (color.toHSV) {\n        return color.toHSV();\n    } else {\n        throw new Error('Argument cannot be evaluated to a color');\n    }\n}\n\nfunction number(n) {\n    if (n instanceof Dimension) {\n        return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n    } else if (typeof n === 'number') {\n        return n;\n    } else {\n        throw {\n            type: 'Argument',\n            message: 'color functions take numbers as parameters'\n        };\n    }\n}\nfunction scaled(n, size) {\n    if (n instanceof Dimension && n.unit.is('%')) {\n        return parseFloat(n.value * size / 100);\n    } else {\n        return number(n);\n    }\n}\ncolorFunctions = {\n    rgb: function (r, g, b) {\n        let a = 1\n        /**\n         * Comma-less syntax\n         *   e.g. rgb(0 128 255 / 50%)\n         */\n        if (r instanceof Expression) {\n            const val = r.value\n            r = val[0]\n            g = val[1]\n            b = val[2]\n            /** \n             * @todo - should this be normalized in\n             *   function caller? Or parsed differently?\n             */\n            if (b instanceof Operation) {\n                const op = b\n                b = op.operands[0]\n                a = op.operands[1]\n            }\n        }\n        const color = colorFunctions.rgba(r, g, b, a);\n        if (color) {\n            color.value = 'rgb';\n            return color;\n        }\n    },\n    rgba: function (r, g, b, a) {\n        try {\n            if (r instanceof Color) {\n                if (g) {\n                    a = number(g);\n                } else {\n                    a = r.alpha;\n                }\n                return new Color(r.rgb, a, 'rgba');\n            }\n            const rgb = [r, g, b].map(c => scaled(c, 255));\n            a = number(a);\n            return new Color(rgb, a, 'rgba');\n        }\n        catch (e) {}\n    },\n    hsl: function (h, s, l) {\n        let a = 1\n        if (h instanceof Expression) {\n            const val = h.value\n            h = val[0]\n            s = val[1]\n            l = val[2]\n\n            if (l instanceof Operation) {\n                const op = l\n                l = op.operands[0]\n                a = op.operands[1]\n            }\n        }\n        const color = colorFunctions.hsla(h, s, l, a);\n        if (color) {\n            color.value = 'hsl';\n            return color;\n        }\n    },\n    hsla: function (h, s, l, a) {\n        try {\n            if (h instanceof Color) {\n                if (s) {\n                    a = number(s);\n                } else {\n                    a = h.alpha;\n                }\n                return new Color(h.rgb, a, 'hsla');\n            }\n\n            let m1;\n            let m2;\n\n            function hue(h) {\n                h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\n                if (h * 6 < 1) {\n                    return m1 + (m2 - m1) * h * 6;\n                }\n                else if (h * 2 < 1) {\n                    return m2;\n                }\n                else if (h * 3 < 2) {\n                    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n                }\n                else {\n                    return m1;\n                }\n            }\n\n            h = (number(h) % 360) / 360;\n            s = clamp(number(s));l = clamp(number(l));a = clamp(number(a));\n\n            m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n            m1 = l * 2 - m2;\n\n            const rgb = [\n                hue(h + 1 / 3) * 255,\n                hue(h)       * 255,\n                hue(h - 1 / 3) * 255\n            ];\n            a = number(a);\n            return new Color(rgb, a, 'hsla');\n        }\n        catch (e) {}\n    },\n\n    hsv: function(h, s, v) {\n        return colorFunctions.hsva(h, s, v, 1.0);\n    },\n\n    hsva: function(h, s, v, a) {\n        h = ((number(h) % 360) / 360) * 360;\n        s = number(s);v = number(v);a = number(a);\n\n        let i;\n        let f;\n        i = Math.floor((h / 60) % 6);\n        f = (h / 60) - i;\n\n        const vs = [v,\n            v * (1 - s),\n            v * (1 - f * s),\n            v * (1 - (1 - f) * s)];\n        const perm = [[0, 3, 1],\n            [2, 0, 1],\n            [1, 0, 3],\n            [1, 2, 0],\n            [3, 1, 0],\n            [0, 1, 2]];\n\n        return colorFunctions.rgba(vs[perm[i][0]] * 255,\n            vs[perm[i][1]] * 255,\n            vs[perm[i][2]] * 255,\n            a);\n    },\n\n    hue: function (color) {\n        return new Dimension(toHSL(color).h);\n    },\n    saturation: function (color) {\n        return new Dimension(toHSL(color).s * 100, '%');\n    },\n    lightness: function (color) {\n        return new Dimension(toHSL(color).l * 100, '%');\n    },\n    hsvhue: function(color) {\n        return new Dimension(toHSV(color).h);\n    },\n    hsvsaturation: function (color) {\n        return new Dimension(toHSV(color).s * 100, '%');\n    },\n    hsvvalue: function (color) {\n        return new Dimension(toHSV(color).v * 100, '%');\n    },\n    red: function (color) {\n        return new Dimension(color.rgb[0]);\n    },\n    green: function (color) {\n        return new Dimension(color.rgb[1]);\n    },\n    blue: function (color) {\n        return new Dimension(color.rgb[2]);\n    },\n    alpha: function (color) {\n        return new Dimension(toHSL(color).a);\n    },\n    luma: function (color) {\n        return new Dimension(color.luma() * color.alpha * 100, '%');\n    },\n    luminance: function (color) {\n        const luminance =\n            (0.2126 * color.rgb[0] / 255) +\n                (0.7152 * color.rgb[1] / 255) +\n                (0.0722 * color.rgb[2] / 255);\n\n        return new Dimension(luminance * color.alpha * 100, '%');\n    },\n    saturate: function (color, amount, method) {\n        // filter: saturate(3.2);\n        // should be kept as is, so check for color\n        if (!color.rgb) {\n            return null;\n        }\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.s +=  hsl.s * amount.value / 100;\n        }\n        else {\n            hsl.s += amount.value / 100;\n        }\n        hsl.s = clamp(hsl.s);\n        return hsla(color, hsl);\n    },\n    desaturate: function (color, amount, method) {\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.s -=  hsl.s * amount.value / 100;\n        }\n        else {\n            hsl.s -= amount.value / 100;\n        }\n        hsl.s = clamp(hsl.s);\n        return hsla(color, hsl);\n    },\n    lighten: function (color, amount, method) {\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.l +=  hsl.l * amount.value / 100;\n        }\n        else {\n            hsl.l += amount.value / 100;\n        }\n        hsl.l = clamp(hsl.l);\n        return hsla(color, hsl);\n    },\n    darken: function (color, amount, method) {\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.l -=  hsl.l * amount.value / 100;\n        }\n        else {\n            hsl.l -= amount.value / 100;\n        }\n        hsl.l = clamp(hsl.l);\n        return hsla(color, hsl);\n    },\n    fadein: function (color, amount, method) {\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.a +=  hsl.a * amount.value / 100;\n        }\n        else {\n            hsl.a += amount.value / 100;\n        }\n        hsl.a = clamp(hsl.a);\n        return hsla(color, hsl);\n    },\n    fadeout: function (color, amount, method) {\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.a -=  hsl.a * amount.value / 100;\n        }\n        else {\n            hsl.a -= amount.value / 100;\n        }\n        hsl.a = clamp(hsl.a);\n        return hsla(color, hsl);\n    },\n    fade: function (color, amount) {\n        const hsl = toHSL(color);\n\n        hsl.a = amount.value / 100;\n        hsl.a = clamp(hsl.a);\n        return hsla(color, hsl);\n    },\n    spin: function (color, amount) {\n        const hsl = toHSL(color);\n        const hue = (hsl.h + amount.value) % 360;\n\n        hsl.h = hue < 0 ? 360 + hue : hue;\n\n        return hsla(color, hsl);\n    },\n    //\n    // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\n    // http://sass-lang.com\n    //\n    mix: function (color1, color2, weight) {\n        if (!weight) {\n            weight = new Dimension(50);\n        }\n        const p = weight.value / 100.0;\n        const w = p * 2 - 1;\n        const a = toHSL(color1).a - toHSL(color2).a;\n\n        const w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        const w2 = 1 - w1;\n\n        const rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\n            color1.rgb[1] * w1 + color2.rgb[1] * w2,\n            color1.rgb[2] * w1 + color2.rgb[2] * w2];\n\n        const alpha = color1.alpha * p + color2.alpha * (1 - p);\n\n        return new Color(rgb, alpha);\n    },\n    greyscale: function (color) {\n        return colorFunctions.desaturate(color, new Dimension(100));\n    },\n    contrast: function (color, dark, light, threshold) {\n        // filter: contrast(3.2);\n        // should be kept as is, so check for color\n        if (!color.rgb) {\n            return null;\n        }\n        if (typeof light === 'undefined') {\n            light = colorFunctions.rgba(255, 255, 255, 1.0);\n        }\n        if (typeof dark === 'undefined') {\n            dark = colorFunctions.rgba(0, 0, 0, 1.0);\n        }\n        // Figure out which is actually light and dark:\n        if (dark.luma() > light.luma()) {\n            const t = light;\n            light = dark;\n            dark = t;\n        }\n        if (typeof threshold === 'undefined') {\n            threshold = 0.43;\n        } else {\n            threshold = number(threshold);\n        }\n        if (color.luma() < threshold) {\n            return light;\n        } else {\n            return dark;\n        }\n    },\n    // Changes made in 2.7.0 - Reverted in 3.0.0\n    // contrast: function (color, color1, color2, threshold) {\n    //     // Return which of `color1` and `color2` has the greatest contrast with `color`\n    //     // according to the standard WCAG contrast ratio calculation.\n    //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    //     // The threshold param is no longer used, in line with SASS.\n    //     // filter: contrast(3.2);\n    //     // should be kept as is, so check for color\n    //     if (!color.rgb) {\n    //         return null;\n    //     }\n    //     if (typeof color1 === 'undefined') {\n    //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\n    //     }\n    //     if (typeof color2 === 'undefined') {\n    //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\n    //     }\n    //     var contrast1, contrast2;\n    //     var luma = color.luma();\n    //     var luma1 = color1.luma();\n    //     var luma2 = color2.luma();\n    //     // Calculate contrast ratios for each color\n    //     if (luma > luma1) {\n    //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\n    //     } else {\n    //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (luma > luma2) {\n    //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\n    //     } else {\n    //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (contrast1 > contrast2) {\n    //         return color1;\n    //     } else {\n    //         return color2;\n    //     }\n    // },\n    argb: function (color) {\n        return new Anonymous(color.toARGB());\n    },\n    color: function(c) {\n        if ((c instanceof Quoted) &&\n            (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\n            const val = c.value.slice(1);\n            return new Color(val, undefined, `#${val}`);\n        }\n        if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\n            c.value = undefined;\n            return c;\n        }\n        throw {\n            type:    'Argument',\n            message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\n        };\n    },\n    tint: function(color, amount) {\n        return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n    },\n    shade: function(color, amount) {\n        return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n    }\n};\n\nexport default colorFunctions;\n", "import Color from '../tree/color';\n\n// Color Blending\n// ref: http://www.w3.org/TR/compositing-1\n\nfunction colorBlend(mode, color1, color2) {\n    const ab = color1.alpha;        // result\n\n    let // backdrop\n        cb;\n\n    const as = color2.alpha;\n\n    let // source\n        cs;\n\n    let ar;\n    let cr;\n    const r = [];\n\n    ar = as + ab * (1 - as);\n    for (let i = 0; i < 3; i++) {\n        cb = color1.rgb[i] / 255;\n        cs = color2.rgb[i] / 255;\n        cr = mode(cb, cs);\n        if (ar) {\n            cr = (as * cs + ab * (cb -\n                  as * (cb + cs - cr))) / ar;\n        }\n        r[i] = cr * 255;\n    }\n\n    return new Color(r, ar);\n}\n\nconst colorBlendModeFunctions = {\n    multiply: function(cb, cs) {\n        return cb * cs;\n    },\n    screen: function(cb, cs) {\n        return cb + cs - cb * cs;\n    },\n    overlay: function(cb, cs) {\n        cb *= 2;\n        return (cb <= 1) ?\n            colorBlendModeFunctions.multiply(cb, cs) :\n            colorBlendModeFunctions.screen(cb - 1, cs);\n    },\n    softlight: function(cb, cs) {\n        let d = 1;\n        let e = cb;\n        if (cs > 0.5) {\n            e = 1;\n            d = (cb > 0.25) ? Math.sqrt(cb)\n                : ((16 * cb - 12) * cb + 4) * cb;\n        }\n        return cb - (1 - 2 * cs) * e * (d - cb);\n    },\n    hardlight: function(cb, cs) {\n        return colorBlendModeFunctions.overlay(cs, cb);\n    },\n    difference: function(cb, cs) {\n        return Math.abs(cb - cs);\n    },\n    exclusion: function(cb, cs) {\n        return cb + cs - 2 * cb * cs;\n    },\n\n    // non-w3c functions:\n    average: function(cb, cs) {\n        return (cb + cs) / 2;\n    },\n    negation: function(cb, cs) {\n        return 1 - Math.abs(cb + cs - 1);\n    }\n};\n\nfor (const f in colorBlendModeFunctions) {\n    if (colorBlendModeFunctions.hasOwnProperty(f)) {\n        colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\n    }\n}\n\nexport default colorBlend;\n", "import Quoted from '../tree/quoted';\nimport URL from '../tree/url';\nimport * as utils from '../utils';\nimport logger from '../logger';\n\nexport default environment => {\n    \n    const fallback = (functionThis, node) => new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context);    \n\n    return { 'data-uri': function(mimetypeNode, filePathNode) {\n\n        if (!filePathNode) {\n            filePathNode = mimetypeNode;\n            mimetypeNode = null;\n        }\n\n        let mimetype = mimetypeNode && mimetypeNode.value;\n        let filePath = filePathNode.value;\n        const currentFileInfo = this.currentFileInfo;\n        const currentDirectory = currentFileInfo.rewriteUrls ?\n            currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n\n        const fragmentStart = filePath.indexOf('#');\n        let fragment = '';\n        if (fragmentStart !== -1) {\n            fragment = filePath.slice(fragmentStart);\n            filePath = filePath.slice(0, fragmentStart);\n        }\n        const context = utils.clone(this.context);\n        context.rawBuffer = true;\n\n        const fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n\n        if (!fileManager) {\n            return fallback(this, filePathNode);\n        }\n\n        let useBase64 = false;\n\n        // detect the mimetype if not given\n        if (!mimetypeNode) {\n\n            mimetype = environment.mimeLookup(filePath);\n\n            if (mimetype === 'image/svg+xml') {\n                useBase64 = false;\n            } else {\n                // use base 64 unless it's an ASCII or UTF-8 format\n                const charset = environment.charsetLookup(mimetype);\n                useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n            }\n            if (useBase64) { mimetype += ';base64'; }\n        }\n        else {\n            useBase64 = /;base64$/.test(mimetype);\n        }\n\n        const fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n        if (!fileSync.contents) {\n            logger.warn(`Skipped data-uri embedding of ${filePath} because file not found`);\n            return fallback(this, filePathNode || mimetypeNode);\n        }\n        let buf = fileSync.contents;\n        if (useBase64 && !environment.encodeBase64) {\n            return fallback(this, filePathNode);\n        }\n\n        buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n\n        const uri = `data:${mimetype},${buf}${fragment}`;\n\n        return new URL(new Quoted(`\"${uri}\"`, uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n    }};\n};\n", "import Comment from '../tree/comment';\nimport Node from '../tree/node';\nimport Dimension from '../tree/dimension';\nimport Declaration from '../tree/declaration';\nimport Expression from '../tree/expression';\nimport Ruleset from '../tree/ruleset';\nimport Selector from '../tree/selector';\nimport Element from '../tree/element';\nimport Quote from '../tree/quoted';\nimport Value from '../tree/value';\n\nconst getItemsFromNode = node => {\n    // handle non-array values as an array of length 1\n    // return 'undefined' if index is invalid\n    const items = Array.isArray(node.value) ?\n        node.value : Array(node);\n\n    return items;\n};\n\nexport default {\n    _SELF: function(n) {\n        return n;\n    },\n    '~': function(...expr) {\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        return new Value(expr);\n    },\n    extract: function(values, index) {\n        // (1-based index)\n        index = index.value - 1;\n\n        return getItemsFromNode(values)[index];\n    },\n    length: function(values) {\n        return new Dimension(getItemsFromNode(values).length);\n    },\n    /**\n     * Creates a Less list of incremental values.\n     * Modeled after Lodash's range function, also exists natively in PHP\n     * \n     * @param {Dimension} [start=1]\n     * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\n     * @param {Dimension} [step=1] \n     */\n    range: function(start, end, step) {\n        let from;\n        let to;\n        let stepValue = 1;\n        const list = [];\n        if (end) {\n            to = end;\n            from = start.value;\n            if (step) {\n                stepValue = step.value;\n            }\n        }\n        else {\n            from = 1;\n            to = start;\n        }\n\n        for (let i = from; i <= to.value; i += stepValue) {\n            list.push(new Dimension(i, to.unit));\n        }\n\n        return new Expression(list);\n    },\n    each: function(list, rs) {\n        const rules = [];\n        let newRules;\n        let iterator;\n\n        const tryEval = val => {\n            if (val instanceof Node) {\n                return val.eval(this.context);\n            }\n            return val;\n        };\n\n        if (list.value && !(list instanceof Quote)) {\n            if (Array.isArray(list.value)) {\n                iterator = list.value.map(tryEval);\n            } else {\n                iterator = [tryEval(list.value)];\n            }\n        } else if (list.ruleset) {\n            iterator = tryEval(list.ruleset).rules;\n        } else if (list.rules) {\n            iterator = list.rules.map(tryEval);\n        } else if (Array.isArray(list)) {\n            iterator = list.map(tryEval);\n        } else {\n            iterator = [tryEval(list)];\n        }\n\n        let valueName = '@value';\n        let keyName = '@key';\n        let indexName = '@index';\n\n        if (rs.params) {\n            valueName = rs.params[0] && rs.params[0].name;\n            keyName = rs.params[1] && rs.params[1].name;\n            indexName = rs.params[2] && rs.params[2].name;\n            rs = rs.rules;\n        } else {\n            rs = rs.ruleset;\n        }\n\n        for (let i = 0; i < iterator.length; i++) {\n            let key;\n            let value;\n            const item = iterator[i];\n            if (item instanceof Declaration) {\n                key = typeof item.name === 'string' ? item.name : item.name[0].value;\n                value = item.value;\n            } else {\n                key = new Dimension(i + 1);\n                value = item;\n            }\n\n            if (item instanceof Comment) {\n                continue;\n            }\n\n            newRules = rs.rules.slice(0);\n            if (valueName) {\n                newRules.push(new Declaration(valueName,\n                    value,\n                    false, false, this.index, this.currentFileInfo));\n            }\n            if (indexName) {\n                newRules.push(new Declaration(indexName,\n                    new Dimension(i + 1),\n                    false, false, this.index, this.currentFileInfo));\n            }\n            if (keyName) {\n                newRules.push(new Declaration(keyName,\n                    key,\n                    false, false, this.index, this.currentFileInfo));\n            }\n\n            rules.push(new Ruleset([ new(Selector)([ new Element(\"\", '&') ]) ],\n                newRules,\n                rs.strictImports,\n                rs.visibilityInfo()\n            ));\n        }\n\n        return new Ruleset([ new(Selector)([ new Element(\"\", '&') ]) ],\n            rules,\n            rs.strictImports,\n            rs.visibilityInfo()\n        ).eval(this.context);\n    }\n};\n", "import Dimension from '../tree/dimension';\n\nconst MathHelper = (fn, unit, n) => {\n    if (!(n instanceof Dimension)) {\n        throw { type: 'Argument', message: 'argument must be a number' };\n    }\n    if (unit == null) {\n        unit = n.unit;\n    } else {\n        n = n.unify();\n    }\n    return new Dimension(fn(parseFloat(n.value)), unit);\n};\n\nexport default MathHelper;", "import mathHelper from './math-helper.js';\n\nconst mathFunctions = {\n    // name,  unit\n    ceil:  null,\n    floor: null,\n    sqrt:  null,\n    abs:   null,\n    tan:   '',\n    sin:   '',\n    cos:   '',\n    atan:  'rad',\n    asin:  'rad',\n    acos:  'rad'\n};\n\nfor (const f in mathFunctions) {\n    if (mathFunctions.hasOwnProperty(f)) {\n        mathFunctions[f] = mathHelper.bind(null, Math[f], mathFunctions[f]);\n    }\n}\n\nmathFunctions.round = (n, f) => {\n    const fraction = typeof f === 'undefined' ? 0 : f.value;\n    return mathHelper(num => num.toFixed(fraction), null, n);\n};\n\nexport default mathFunctions;\n", "import Dimension from '../tree/dimension';\nimport Anonymous from '../tree/anonymous';\nimport mathHelper from './math-helper.js';\n\nconst minMax = function (isMin, args) {\n    args = Array.prototype.slice.call(args);\n    switch (args.length) {\n        case 0: throw { type: 'Argument', message: 'one or more arguments required' };\n    }\n    let i; // key is the unit.toString() for unified Dimension values,\n    let j;\n    let current;\n    let currentUnified;\n    let referenceUnified;\n    let unit;\n    let unitStatic;\n    let unitClone;\n\n    const // elems only contains original argument values.\n        order  = [];\n\n    const values = {};\n    // value is the index into the order array.\n    for (i = 0; i < args.length; i++) {\n        current = args[i];\n        if (!(current instanceof Dimension)) {\n            if (Array.isArray(args[i].value)) {\n                Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n            }\n            continue;\n        }\n        currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n        unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n        unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\n        unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\n        j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\n        if (j === undefined) {\n            if (unitStatic !== undefined && unit !== unitStatic) {\n                throw { type: 'Argument', message: 'incompatible types' };\n            }\n            values[unit] = order.length;\n            order.push(current);\n            continue;\n        }\n        referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n        if ( isMin && currentUnified.value < referenceUnified.value ||\n            !isMin && currentUnified.value > referenceUnified.value) {\n            order[j] = current;\n        }\n    }\n    if (order.length == 1) {\n        return order[0];\n    }\n    args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\n    return new Anonymous(`${isMin ? 'min' : 'max'}(${args})`);\n};\n\nexport default {\n    min: function(...args) {\n        try {\n            return minMax(true, args);\n        } catch (e) {}\n    },\n    max: function(...args) {\n        try {\n            return minMax(false, args);\n        } catch (e) {}\n    },\n    convert: function (val, unit) {\n        return val.convertTo(unit.value);\n    },\n    pi: function () {\n        return new Dimension(Math.PI);\n    },\n    mod: function(a, b) {\n        return new Dimension(a.value % b.value, a.unit);\n    },\n    pow: function(x, y) {\n        if (typeof x === 'number' && typeof y === 'number') {\n            x = new Dimension(x);\n            y = new Dimension(y);\n        } else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n            throw { type: 'Argument', message: 'arguments must be numbers' };\n        }\n\n        return new Dimension(Math.pow(x.value, y.value), x.unit);\n    },\n    percentage: function (n) {\n        const result = mathHelper(num => num * 100, '%', n);\n\n        return result;\n    }\n};\n", "import Quoted from '../tree/quoted';\nimport Anonymous from '../tree/anonymous';\nimport JavaScript from '../tree/javascript';\n\nexport default {\n    e: function (str) {\n        return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\n    },\n    escape: function (str) {\n        return new Anonymous(\n            encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\n    },\n    replace: function (string, pattern, replacement, flags) {\n        let result = string.value;\n        replacement = (replacement.type === 'Quoted') ?\n            replacement.value : replacement.toCSS();\n        result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n        return new Quoted(string.quote || '', result, string.escaped);\n    },\n    '%': function (string /* arg, arg, ... */) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        let result = string.value;\n\n        for (let i = 0; i < args.length; i++) {\n            /* jshint loopfunc:true */\n            result = result.replace(/%[sda]/i, token => {\n                const value = ((args[i].type === 'Quoted') &&\n                    token.match(/s/i)) ? args[i].value : args[i].toCSS();\n                return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n            });\n        }\n        result = result.replace(/%%/g, '%');\n        return new Quoted(string.quote || '', result, string.escaped);\n    }\n};\n", "import Dimension from '../tree/dimension';\nimport Color from '../tree/color';\nimport Expression from '../tree/expression';\nimport Quoted from '../tree/quoted';\nimport URL from '../tree/url';\n\nexport default environment => {\n    return { 'svg-gradient': function(direction) {\n        let stops;\n        let gradientDirectionSvg;\n        let gradientType = 'linear';\n        let rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\n        const renderEnv = {compress: false};\n        let returner;\n        const directionValue = direction.toCSS(renderEnv);\n        let i;\n        let color;\n        let position;\n        let positionValue;\n        let alpha;\n\n        function throwArgumentDescriptor() {\n            throw { type: 'Argument',\n                message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\n                            ' end_color [end_position] or direction, color list' };\n        }\n\n        if (arguments.length == 2) {\n            if (arguments[1].value.length < 2) {\n                throwArgumentDescriptor();\n            }\n            stops = arguments[1].value;\n        } else if (arguments.length < 3) {\n            throwArgumentDescriptor();\n        } else {\n            stops = Array.prototype.slice.call(arguments, 1);\n        }\n\n        switch (directionValue) {\n            case 'to bottom':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n                break;\n            case 'to right':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case 'to bottom right':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n                break;\n            case 'to top right':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case 'ellipse':\n            case 'ellipse at center':\n                gradientType = 'radial';\n                gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n                rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n                break;\n            default:\n                throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\n                    ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\n        }\n        returner = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1 1\"><${gradientType}Gradient id=\"g\" ${gradientDirectionSvg}>`;\n\n        for (i = 0; i < stops.length; i += 1) {\n            if (stops[i] instanceof Expression) {\n                color = stops[i].value[0];\n                position = stops[i].value[1];\n            } else {\n                color = stops[i];\n                position = undefined;\n            }\n\n            if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\n                throwArgumentDescriptor();\n            }\n            positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\n            alpha = color.alpha;\n            returner += `<stop offset=\"${positionValue}\" stop-color=\"${color.toRGB()}\"${alpha < 1 ? ` stop-opacity=\"${alpha}\"` : ''}/>`;\n        }\n        returner += `</${gradientType}Gradient><rect ${rectangleDimension} fill=\"url(#g)\" /></svg>`;\n\n        returner = encodeURIComponent(returner);\n\n        returner = `data:image/svg+xml,${returner}`;\n        return new URL(new Quoted(`'${returner}'`, returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n    }};\n};\n", "import Keyword from '../tree/keyword';\nimport DetachedRuleset from '../tree/detached-ruleset';\nimport Dimension from '../tree/dimension';\nimport Color from '../tree/color';\nimport Quoted from '../tree/quoted';\nimport Anonymous from '../tree/anonymous';\nimport URL from '../tree/url';\nimport Operation from '../tree/operation';\n\nconst isa = (n, Type) => (n instanceof Type) ? Keyword.True : Keyword.False;\nconst isunit = (n, unit) => {\n    if (unit === undefined) {\n        throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\n    }\n    unit = typeof unit.value === 'string' ? unit.value : unit;\n    if (typeof unit !== 'string') {\n        throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\n    }\n    return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\n};\n\nexport default {\n    isruleset: function (n) {\n        return isa(n, DetachedRuleset);\n    },\n    iscolor: function (n) {\n        return isa(n, Color);\n    },\n    isnumber: function (n) {\n        return isa(n, Dimension);\n    },\n    isstring: function (n) {\n        return isa(n, Quoted);\n    },\n    iskeyword: function (n) {\n        return isa(n, Keyword);\n    },\n    isurl: function (n) {\n        return isa(n, URL);\n    },\n    ispixel: function (n) {\n        return isunit(n, 'px');\n    },\n    ispercentage: function (n) {\n        return isunit(n, '%');\n    },\n    isem: function (n) {\n        return isunit(n, 'em');\n    },\n    isunit,\n    unit: function (val, unit) {\n        if (!(val instanceof Dimension)) {\n            throw { type: 'Argument',\n                message: `the first argument to unit must be a number${val instanceof Operation ? '. Have you forgotten parenthesis?' : ''}` };\n        }\n        if (unit) {\n            if (unit instanceof Keyword) {\n                unit = unit.value;\n            } else {\n                unit = unit.toCSS();\n            }\n        } else {\n            unit = '';\n        }\n        return new Dimension(val.value, unit);\n    },\n    'get-unit': function (n) {\n        return new Anonymous(n.unit);\n    }\n};\n", "import functionRegistry from './function-registry';\nimport functionCaller from './function-caller';\n\nimport boolean from './boolean';\nimport defaultFunc from './default';\nimport color from './color';\nimport colorBlending from './color-blending';\nimport dataUri from './data-uri';\nimport list from './list';\nimport math from './math';\nimport number from './number';\nimport string from './string';\nimport svg from './svg';\nimport types from './types';\n\nexport default environment => {\n    const functions = { functionRegistry, functionCaller };\n\n    // register functions\n    functionRegistry.addMultiple(boolean);\n    functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\n    functionRegistry.addMultiple(color);\n    functionRegistry.addMultiple(colorBlending);\n    functionRegistry.addMultiple(dataUri(environment));\n    functionRegistry.addMultiple(list);\n    functionRegistry.addMultiple(math);\n    functionRegistry.addMultiple(number);\n    functionRegistry.addMultiple(string);\n    functionRegistry.addMultiple(svg(environment));\n    functionRegistry.addMultiple(types);\n\n    return functions;\n};\n", "import contexts from './contexts';\nimport visitor from './visitors';\nimport tree from './tree';\n\nexport default function(root, options) {\n    options = options || {};\n    let evaldRoot;\n    let variables = options.variables;\n    const evalEnv = new contexts.Eval(options);\n\n    //\n    // Allows setting variables with a hash, so:\n    //\n    //   `{ color: new tree.Color('#f01') }` will become:\n    //\n    //   new tree.Declaration('@color',\n    //     new tree.Value([\n    //       new tree.Expression([\n    //         new tree.Color('#f01')\n    //       ])\n    //     ])\n    //   )\n    //\n    if (typeof variables === 'object' && !Array.isArray(variables)) {\n        variables = Object.keys(variables).map(function (k) {\n            let value = variables[k];\n\n            if (!(value instanceof tree.Value)) {\n                if (!(value instanceof tree.Expression)) {\n                    value = new tree.Expression([value]);\n                }\n                value = new tree.Value([value]);\n            }\n            return new tree.Declaration(`@${k}`, value, false, null, 0);\n        });\n        evalEnv.frames = [new tree.Ruleset(null, variables)];\n    }\n\n    const visitors = [\n        new visitor.JoinSelectorVisitor(),\n        new visitor.MarkVisibleSelectorsVisitor(true),\n        new visitor.ExtendVisitor(),\n        new visitor.ToCSSVisitor({compress: Boolean(options.compress)})\n    ];\n\n    const preEvalVisitors = [];\n    let v;\n    let visitorIterator;\n\n    /**\n     * first() / get() allows visitors to be added while visiting\n     * \n     * @todo Add scoping for visitors just like functions for @plugin; right now they're global\n     */\n    if (options.pluginManager) {\n        visitorIterator = options.pluginManager.visitor();\n        for (var i = 0; i < 2; i++) {\n            visitorIterator.first();\n            while ((v = visitorIterator.get())) {\n                if (v.isPreEvalVisitor) {\n                    if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\n                        preEvalVisitors.push(v);\n                        v.run(root);\n                    }\n                }\n                else {\n                    if (i === 0 || visitors.indexOf(v) === -1) {\n                        if (v.isPreVisitor) {\n                            visitors.unshift(v);\n                        }\n                        else {\n                            visitors.push(v);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    evaldRoot = root.eval(evalEnv);\n\n    for (var i = 0; i < visitors.length; i++) {\n        visitors[i].run(evaldRoot);\n    }\n\n    // Run any remaining visitors added after eval pass\n    if (options.pluginManager) {\n        visitorIterator.first();\n        while ((v = visitorIterator.get())) {\n            if (visitors.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\n                v.run(evaldRoot);\n            }\n        }\n    }\n\n    return evaldRoot;\n};\n", "/**\n * Plugin Manager\n */\nclass PluginManager {\n    constructor(less) {\n        this.less = less;\n        this.visitors = [];\n        this.preProcessors = [];\n        this.postProcessors = [];\n        this.installedPlugins = [];\n        this.fileManagers = [];\n        this.iterator = -1;\n        this.pluginCache = {};\n        this.Loader = new less.PluginLoader(less);\n    }\n\n    /**\n     * Adds all the plugins in the array\n     * @param {Array} plugins\n     */\n    addPlugins(plugins) {\n        if (plugins) {\n            for (let i = 0; i < plugins.length; i++) {\n                this.addPlugin(plugins[i]);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param plugin\n     * @param {String} filename\n     */\n    addPlugin(plugin, filename, functionRegistry) {\n        this.installedPlugins.push(plugin);\n        if (filename) {\n            this.pluginCache[filename] = plugin;\n        }\n        if (plugin.install) {\n            plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n        }\n    }\n\n    /**\n     *\n     * @param filename\n     */\n    get(filename) {\n        return this.pluginCache[filename];\n    }\n\n    /**\n     * Adds a visitor. The visitor object has options on itself to determine\n     * when it should run.\n     * @param visitor\n     */\n    addVisitor(visitor) {\n        this.visitors.push(visitor);\n    }\n\n    /**\n     * Adds a pre processor object\n     * @param {object} preProcessor\n     * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\n     */\n    addPreProcessor(preProcessor, priority) {\n        let indexToInsertAt;\n        for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n            if (this.preProcessors[indexToInsertAt].priority >= priority) {\n                break;\n            }\n        }\n        this.preProcessors.splice(indexToInsertAt, 0, {preProcessor, priority});\n    }\n\n    /**\n     * Adds a post processor object\n     * @param {object} postProcessor\n     * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\n     */\n    addPostProcessor(postProcessor, priority) {\n        let indexToInsertAt;\n        for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n            if (this.postProcessors[indexToInsertAt].priority >= priority) {\n                break;\n            }\n        }\n        this.postProcessors.splice(indexToInsertAt, 0, {postProcessor, priority});\n    }\n\n    /**\n     *\n     * @param manager\n     */\n    addFileManager(manager) {\n        this.fileManagers.push(manager);\n    }\n\n    /**\n     *\n     * @returns {Array}\n     * @private\n     */\n    getPreProcessors() {\n        const preProcessors = [];\n        for (let i = 0; i < this.preProcessors.length; i++) {\n            preProcessors.push(this.preProcessors[i].preProcessor);\n        }\n        return preProcessors;\n    }\n\n    /**\n     *\n     * @returns {Array}\n     * @private\n     */\n    getPostProcessors() {\n        const postProcessors = [];\n        for (let i = 0; i < this.postProcessors.length; i++) {\n            postProcessors.push(this.postProcessors[i].postProcessor);\n        }\n        return postProcessors;\n    }\n\n    /**\n     *\n     * @returns {Array}\n     * @private\n     */\n    getVisitors() {\n        return this.visitors;\n    }\n\n    visitor() {\n        const self = this;\n        return {\n            first: function() {\n                self.iterator = -1;\n                return self.visitors[self.iterator];\n            },\n            get: function() {\n                self.iterator += 1;\n                return self.visitors[self.iterator];\n            }\n        };\n    }\n\n    /**\n     *\n     * @returns {Array}\n     * @private\n     */\n    getFileManagers() {\n        return this.fileManagers;\n    }\n}\n\nlet pm;\n\nconst PluginManagerFactory = function(less, newFactory) {\n    if (newFactory || !pm) {\n        pm = new PluginManager(less);\n    }\n    return pm;\n};\n\n//\nexport default PluginManagerFactory;\n", "export default function (environment) {\n    class SourceMapOutput {\n        constructor(options) {\n            this._css = [];\n            this._rootNode = options.rootNode;\n            this._contentsMap = options.contentsMap;\n            this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n            if (options.sourceMapFilename) {\n                this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n            }\n            this._outputFilename = options.outputFilename;\n            this.sourceMapURL = options.sourceMapURL;\n            if (options.sourceMapBasepath) {\n                this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n            }\n            if (options.sourceMapRootpath) {\n                this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n                if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n                    this._sourceMapRootpath += '/';\n                }\n            } else {\n                this._sourceMapRootpath = '';\n            }\n            this._outputSourceFiles = options.outputSourceFiles;\n            this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n\n            this._lineNumber = 0;\n            this._column = 0;\n        }\n\n        removeBasepath(path) {\n            if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\n                path = path.substring(this._sourceMapBasepath.length);\n                if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\n                    path = path.substring(1);\n                }\n            }\n\n            return path;\n        }\n\n        normalizeFilename(filename) {\n            filename = filename.replace(/\\\\/g, '/');\n            filename = this.removeBasepath(filename);\n            return (this._sourceMapRootpath || '') + filename;\n        }\n\n        add(chunk, fileInfo, index, mapLines) {\n\n            // ignore adding empty strings\n            if (!chunk) {\n                return;\n            }\n\n            let lines, sourceLines, columns, sourceColumns, i;\n\n            if (fileInfo && fileInfo.filename) {\n                let inputSource = this._contentsMap[fileInfo.filename];\n\n                // remove vars/banner added to the top of the file\n                if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n                    // adjust the index\n                    index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n                    if (index < 0) { index = 0; }\n                    // adjust the source\n                    inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n                }\n\n                /** \n                 * ignore empty content, or failsafe\n                 * if contents map is incorrect\n                 */\n                if (inputSource === undefined) {\n                    this._css.push(chunk);\n                    return;\n                }\n\n                inputSource = inputSource.substring(0, index);\n                sourceLines = inputSource.split('\\n');\n                sourceColumns = sourceLines[sourceLines.length - 1];\n            }\n\n            lines = chunk.split('\\n');\n            columns = lines[lines.length - 1];\n\n            if (fileInfo && fileInfo.filename) {\n                if (!mapLines) {\n                    this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column},\n                        original: { line: sourceLines.length, column: sourceColumns.length},\n                        source: this.normalizeFilename(fileInfo.filename)});\n                } else {\n                    for (i = 0; i < lines.length; i++) {\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0},\n                            original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0},\n                            source: this.normalizeFilename(fileInfo.filename)});\n                    }\n                }\n            }\n\n            if (lines.length === 1) {\n                this._column += columns.length;\n            } else {\n                this._lineNumber += lines.length - 1;\n                this._column = columns.length;\n            }\n\n            this._css.push(chunk);\n        }\n\n        isEmpty() {\n            return this._css.length === 0;\n        }\n\n        toCSS(context) {\n            this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\n\n            if (this._outputSourceFiles) {\n                for (const filename in this._contentsMap) {\n                    if (this._contentsMap.hasOwnProperty(filename)) {\n                        let source = this._contentsMap[filename];\n                        if (this._contentsIgnoredCharsMap[filename]) {\n                            source = source.slice(this._contentsIgnoredCharsMap[filename]);\n                        }\n                        this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n                    }\n                }\n            }\n\n            this._rootNode.genCSS(context, this);\n\n            if (this._css.length > 0) {\n                let sourceMapURL;\n                const sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n\n                if (this.sourceMapURL) {\n                    sourceMapURL = this.sourceMapURL;\n                } else if (this._sourceMapFilename) {\n                    sourceMapURL = this._sourceMapFilename;\n                }\n                this.sourceMapURL = sourceMapURL;\n\n                this.sourceMap = sourceMapContent;\n            }\n\n            return this._css.join('');\n        }\n    }\n\n    return SourceMapOutput;\n};\n", "export default function (SourceMapOutput, environment) {\n    class SourceMapBuilder {\n        constructor(options) {\n            this.options = options;\n        }\n\n        toCSS(rootNode, options, imports) {\n            const sourceMapOutput = new SourceMapOutput(\n                {\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n                    rootNode,\n                    contentsMap: imports.contents,\n                    sourceMapFilename: this.options.sourceMapFilename,\n                    sourceMapURL: this.options.sourceMapURL,\n                    outputFilename: this.options.sourceMapOutputFilename,\n                    sourceMapBasepath: this.options.sourceMapBasepath,\n                    sourceMapRootpath: this.options.sourceMapRootpath,\n                    outputSourceFiles: this.options.outputSourceFiles,\n                    sourceMapGenerator: this.options.sourceMapGenerator,\n                    sourceMapFileInline: this.options.sourceMapFileInline,    \n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\n                });\n\n            const css = sourceMapOutput.toCSS(options);\n            this.sourceMap = sourceMapOutput.sourceMap;\n            this.sourceMapURL = sourceMapOutput.sourceMapURL;\n            if (this.options.sourceMapInputFilename) {\n                this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n            }\n            if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n                this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n            }\n            return css + this.getCSSAppendage();\n        }\n\n        getCSSAppendage() {\n\n            let sourceMapURL = this.sourceMapURL;\n            if (this.options.sourceMapFileInline) {\n                if (this.sourceMap === undefined) {\n                    return '';\n                }\n                sourceMapURL = `data:application/json;base64,${environment.encodeBase64(this.sourceMap)}`;\n            }\n\n            if (this.options.disableSourcemapAnnotation) {\n                return '';\n            }\n\n            if (sourceMapURL) {\n                return `/*# sourceMappingURL=${sourceMapURL} */`;\n            }\n            return '';\n        }\n\n        getExternalSourceMap() {\n            return this.sourceMap;\n        }\n\n        setExternalSourceMap(sourceMap) {\n            this.sourceMap = sourceMap;\n        }\n\n        isInline() {\n            return this.options.sourceMapFileInline;\n        }\n\n        getSourceMapURL() {\n            return this.sourceMapURL;\n        }\n\n        getOutputFilename() {\n            return this.options.sourceMapOutputFilename;\n        }\n\n        getInputFilename() {\n            return this.sourceMapInputFilename;\n        }\n    }\n\n    return SourceMapBuilder;\n};\n", "import LessError from './less-error';\nimport transformTree from './transform-tree';\nimport logger from './logger';\n\nexport default function(SourceMapBuilder) {\n    class ParseTree {\n        constructor(root, imports) {\n            this.root = root;\n            this.imports = imports;\n        }\n\n        toCSS(options) {\n            let evaldRoot;\n            const result = {};\n            let sourceMapBuilder;\n            try {\n                evaldRoot = transformTree(this.root, options);\n            } catch (e) {\n                throw new LessError(e, this.imports);\n            }\n\n            try {\n                const compress = Boolean(options.compress);\n                if (compress) {\n                    logger.warn('The compress option has been deprecated. ' + \n                        'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\n                }\n\n                const toCSSOptions = {\n                    compress,\n                    dumpLineNumbers: options.dumpLineNumbers,\n                    strictUnits: Boolean(options.strictUnits),\n                    numPrecision: 8};\n\n                if (options.sourceMap) {\n                    sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n                    result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n                } else {\n                    result.css = evaldRoot.toCSS(toCSSOptions);\n                }\n            } catch (e) {\n                throw new LessError(e, this.imports);\n            }\n\n            if (options.pluginManager) {\n                const postProcessors = options.pluginManager.getPostProcessors();\n                for (let i = 0; i < postProcessors.length; i++) {\n                    result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options, imports: this.imports });\n                }\n            }\n            if (options.sourceMap) {\n                result.map = sourceMapBuilder.getExternalSourceMap();\n            }\n\n            result.imports = [];\n            for (const file in this.imports.files) {\n                if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\n                    result.imports.push(file);\n                }\n            }\n            return result;\n        }\n    }\n\n    return ParseTree;\n};\n", "import contexts from './contexts';\nimport Parser from './parser/parser';\nimport LessError from './less-error';\nimport * as utils from './utils';\nimport logger from './logger';\n\nexport default function(environment) {\n    // FileInfo = {\n    //  'rewriteUrls' - option - whether to adjust URL's to be relative\n    //  'filename' - full resolved filename of current file\n    //  'rootpath' - path to append to normal URLs for this node\n    //  'currentDirectory' - path to the current file, absolute\n    //  'rootFilename' - filename of the base file\n    //  'entryPath' - absolute path to the entry file\n    //  'reference' - whether the file should not be output and only output parts that are referenced\n\n    class ImportManager {\n        constructor(less, context, rootFileInfo) {\n            this.less = less;\n            this.rootFilename = rootFileInfo.filename;\n            this.paths = context.paths || [];  // Search paths, when importing\n            this.contents = {};             // map - filename to contents of all the files\n            this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n            this.mime = context.mime;\n            this.error = null;\n            this.context = context;\n            // Deprecated? Unused outside of here, could be useful.\n            this.queue = [];        // Files which haven't been imported yet\n            this.files = {};        // Holds the imported parse trees.\n        }\n\n        /**\n         * Add an import to be imported\n         * @param path - the raw path\n         * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\n         * @param currentFileInfo - the current file info (used for instance to work out relative paths)\n         * @param importOptions - import options\n         * @param callback - callback for when it is imported\n         */\n        push(path, tryAppendExtension, currentFileInfo, importOptions, callback) {\n            const importManager = this, pluginLoader = this.context.pluginManager.Loader;\n\n            this.queue.push(path);\n\n            const fileParsedFunc = function (e, root, fullPath) {\n                importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n\n                const importedEqualsRoot = fullPath === importManager.rootFilename;\n                if (importOptions.optional && e) {\n                    callback(null, {rules:[]}, false, null);\n                    logger.info(`The file ${fullPath} was skipped because it was not found and the import was marked optional.`);\n                }\n                else {\n                    // Inline imports aren't cached here.\n                    // If we start to cache them, please make sure they won't conflict with non-inline imports of the\n                    // same name as they used to do before this comment and the condition below have been added.\n                    if (!importManager.files[fullPath] && !importOptions.inline) {\n                        importManager.files[fullPath] = { root, options: importOptions };\n                    }\n                    if (e && !importManager.error) { importManager.error = e; }\n                    callback(e, root, importedEqualsRoot, fullPath);\n                }\n            };\n\n            const newFileInfo = {\n                rewriteUrls: this.context.rewriteUrls,\n                entryPath: currentFileInfo.entryPath,\n                rootpath: currentFileInfo.rootpath,\n                rootFilename: currentFileInfo.rootFilename\n            };\n\n            const fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n\n            if (!fileManager) {\n                fileParsedFunc({ message: `Could not find a file-manager for ${path}` });\n                return;\n            }\n\n            const loadFileCallback = function(loadedFile) {\n                let plugin;\n                const resolvedFilename = loadedFile.filename;\n                const contents = loadedFile.contents.replace(/^\\uFEFF/, '');\n\n                // Pass on an updated rootpath if path of imported file is relative and file\n                // is in a (sub|sup) directory\n                //\n                // Examples:\n                // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n                //   then rootpath should become 'less/module/nav/'\n                // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n                //   then rootpath should become 'less/../'\n                newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n                if (newFileInfo.rewriteUrls) {\n                    newFileInfo.rootpath = fileManager.join(\n                        (importManager.context.rootpath || ''),\n                        fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n\n                    if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n                        newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n                    }\n                }\n                newFileInfo.filename = resolvedFilename;\n\n                const newEnv = new contexts.Parse(importManager.context);\n\n                newEnv.processImports = false;\n                importManager.contents[resolvedFilename] = contents;\n\n                if (currentFileInfo.reference || importOptions.reference) {\n                    newFileInfo.reference = true;\n                }\n\n                if (importOptions.isPlugin) {\n                    plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\n                    if (plugin instanceof LessError) {\n                        fileParsedFunc(plugin, null, resolvedFilename);\n                    }\n                    else {\n                        fileParsedFunc(null, plugin, resolvedFilename);\n                    }\n                } else if (importOptions.inline) {\n                    fileParsedFunc(null, contents, resolvedFilename);\n                } else {\n                    // import (multiple) parse trees apparently get altered and can't be cached.\n                    // TODO: investigate why this is\n                    if (importManager.files[resolvedFilename]\n                        && !importManager.files[resolvedFilename].options.multiple\n                        && !importOptions.multiple) {\n\n                        fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\n                    }\n                    else {\n                        new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\n                            fileParsedFunc(e, root, resolvedFilename);\n                        });\n                    }\n                }\n            };\n            let loadedFile;\n            let promise;\n            const context = utils.clone(this.context);\n\n            if (tryAppendExtension) {\n                context.ext = importOptions.isPlugin ? '.js' : '.less';\n            }\n\n            if (importOptions.isPlugin) {\n                context.mime = 'application/javascript';\n\n                if (context.syncImport) {\n                    loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n                } else {\n                    promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n                }\n            }\n            else {\n                if (context.syncImport) {\n                    loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\n                } else {\n                    promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment,\n                        (err, loadedFile) => {\n                            if (err) {\n                                fileParsedFunc(err);\n                            } else {\n                                loadFileCallback(loadedFile);\n                            }\n                        });\n                }\n            }\n            if (loadedFile) {\n                if (!loadedFile.filename) {\n                    fileParsedFunc(loadedFile);\n                } else {\n                    loadFileCallback(loadedFile);\n                }\n            } else if (promise) {\n                promise.then(loadFileCallback, fileParsedFunc);\n            }\n        }\n    }\n\n    return ImportManager;\n};\n", "import contexts from './contexts';\nimport Parser from './parser/parser';\nimport PluginManager from './plugin-manager';\nimport LessError from './less-error';\nimport * as utils from './utils';\n\nexport default function(environment, ParseTree, ImportManager) {\n    const parse = function (input, options, callback) {\n\n        if (typeof options === 'function') {\n            callback = options;\n            options = utils.copyOptions(this.options, {});\n        }\n        else {\n            options = utils.copyOptions(this.options, options || {});\n        }\n\n        if (!callback) {\n            const self = this;\n            return new Promise(function (resolve, reject) {\n                parse.call(self, input, options, function(err, output) {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(output);\n                    }\n                });\n            });\n        } else {\n            let context;\n            let rootFileInfo;\n            const pluginManager = new PluginManager(this, !options.reUsePluginManager);\n\n            options.pluginManager = pluginManager;\n\n            context = new contexts.Parse(options);\n\n            if (options.rootFileInfo) {\n                rootFileInfo = options.rootFileInfo;\n            } else {\n                const filename = options.filename || 'input';\n                const entryPath = filename.replace(/[^\\/\\\\]*$/, '');\n                rootFileInfo = {\n                    filename,\n                    rewriteUrls: context.rewriteUrls,\n                    rootpath: context.rootpath || '',\n                    currentDirectory: entryPath,\n                    entryPath,\n                    rootFilename: filename\n                };\n                // add in a missing trailing slash\n                if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\n                    rootFileInfo.rootpath += '/';\n                }\n            }\n\n            const imports = new ImportManager(this, context, rootFileInfo);\n            this.importManager = imports;\n\n            // TODO: allow the plugins to be just a list of paths or names\n            // Do an async plugin queue like lessc\n\n            if (options.plugins) {\n                options.plugins.forEach(function(plugin) {\n                    let evalResult, contents;\n                    if (plugin.fileContent) {\n                        contents = plugin.fileContent.replace(/^\\uFEFF/, '');\n                        evalResult = pluginManager.Loader.evalPlugin(contents, context, imports, plugin.options, plugin.filename);\n                        if (evalResult instanceof LessError) {\n                            return callback(evalResult);\n                        }\n                    }\n                    else {\n                        pluginManager.addPlugin(plugin);\n                    }\n                });\n            }\n\n            new Parser(context, imports, rootFileInfo)\n                .parse(input, function (e, root) {\n                    if (e) { return callback(e); }\n                    callback(null, root, imports, options);\n                }, options);\n        }\n    };\n    return parse;\n};\n", "import * as utils from './utils';\n\nexport default function(environment, ParseTree, ImportManager) {\n    const render = function (input, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = utils.copyOptions(this.options, {});\n        }\n        else {\n            options = utils.copyOptions(this.options, options || {});\n        }\n\n        if (!callback) {\n            const self = this;\n            return new Promise(function (resolve, reject) {\n                render.call(self, input, options, function(err, output) {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(output);\n                    }\n                });\n            });\n        } else {\n            this.parse(input, options, function(err, root, imports, options) {\n                if (err) { return callback(err); }\n\n                let result;\n                try {\n                    const parseTree = new ParseTree(root, imports);\n                    result = parseTree.toCSS(options);\n                }\n                catch (err) { return callback(err); }\n\n                callback(null, result);\n            });\n        }\n    };\n\n    return render;\n};\n", "'use strict';\n\nfunction parseNodeVersion(version) {\n  var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n  if (!match) {\n    throw new Error('Unable to parse: ' + version);\n  }\n\n  var res = {\n    major: parseInt(match[1], 10),\n    minor: parseInt(match[2], 10),\n    patch: parseInt(match[3], 10),\n    pre: match[4] || '',\n    build: match[5] || '',\n  };\n\n  return res;\n}\n\nmodule.exports = parseNodeVersion;\n", "import Environment from './environment/environment';\nimport data from './data';\nimport tree from './tree';\nimport AbstractFileManager from './environment/abstract-file-manager';\nimport AbstractPluginLoader from './environment/abstract-plugin-loader';\nimport visitors from './visitors';\nimport Parser from './parser/parser';\nimport functions from './functions';\nimport contexts from './contexts';\nimport LessError from './less-error';\nimport transformTree from './transform-tree';\nimport * as utils from './utils';\nimport PluginManager from './plugin-manager';\nimport logger from './logger';\nimport SourceMapOutput from './source-map-output';\nimport SourceMapBuilder from './source-map-builder';\nimport ParseTree from './parse-tree';\nimport ImportManager from './import-manager';\nimport Parse from './parse';\nimport Render from './render';\nimport { version } from '../../package.json';\nimport parseVersion from 'parse-node-version';\n\nexport default function(environment, fileManagers) {\n    let sourceMapOutput, sourceMapBuilder, parseTree, importManager;\n\n    environment = new Environment(environment, fileManagers);\n    sourceMapOutput = SourceMapOutput(environment);\n    sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\n    parseTree = ParseTree(sourceMapBuilder);\n    importManager = ImportManager(environment);\n\n    const render = Render(environment, parseTree, importManager);\n    const parse = Parse(environment, parseTree, importManager);\n\n    const v = parseVersion(`v${version}`);\n    const initial = {\n        version: [v.major, v.minor, v.patch],\n        data,\n        tree,\n        Environment,\n        AbstractFileManager,\n        AbstractPluginLoader,\n        environment,\n        visitors,\n        Parser,\n        functions: functions(environment),\n        contexts,\n        SourceMapOutput: sourceMapOutput,\n        SourceMapBuilder: sourceMapBuilder,\n        ParseTree: parseTree,\n        ImportManager: importManager,\n        render,\n        parse,\n        LessError,\n        transformTree,\n        utils,\n        PluginManager,\n        logger\n    };\n\n    // Create a public API\n\n    const ctor = function(t) {\n        return function() {\n            const obj = Object.create(t.prototype);\n            t.apply(obj, Array.prototype.slice.call(arguments, 0));\n            return obj;\n        };\n    };\n    let t;\n    const api = Object.create(initial);\n    for (const n in initial.tree) {\n        /* eslint guard-for-in: 0 */\n        t = initial.tree[n];\n        if (typeof t === 'function') {\n            api[n.toLowerCase()] = ctor(t);\n        }\n        else {\n            api[n] = Object.create(null);\n            for (const o in t) {\n                /* eslint guard-for-in: 0 */\n                api[n][o.toLowerCase()] = ctor(t[o]);\n            }\n        }\n    }\n\n    /**\n     * Some of the functions assume a `this` context of the API object,\n     * which causes it to fail when wrapped for ES6 imports.\n     * \n     * An assumed `this` should be removed in the future.\n     */\n    initial.parse = initial.parse.bind(api);\n    initial.render = initial.render.bind(api);\n\n    return api;\n};\n", "// lessc_helper.js\n//\n//      helper functions for lessc\nconst lessc_helper = {\n\n    // Stylize a string\n    stylize : function(str, style) {\n        const styles = {\n            'reset'     : [0,   0],\n            'bold'      : [1,  22],\n            'inverse'   : [7,  27],\n            'underline' : [4,  24],\n            'yellow'    : [33, 39],\n            'green'     : [32, 39],\n            'red'       : [31, 39],\n            'grey'      : [90, 39]\n        };\n        return `\\x1b[${styles[style][0]}m${str}\\x1b[${styles[style][1]}m`;\n    },\n\n    // Print command line options\n    printUsage: function() {\n        console.log('usage: lessc [option option=parameter ...] <source> [destination]');\n        console.log('');\n        console.log('If source is set to `-\\' (dash or hyphen-minus), input is read from stdin.');\n        console.log('');\n        console.log('options:');\n        console.log('  -h, --help                   Prints help (this message) and exit.');\n        console.log('  --include-path=PATHS         Sets include paths. Separated by `:\\'. `;\\' also supported on windows.');\n        console.log('  -M, --depends                Outputs a makefile import dependency list to stdout.');\n        console.log('  --no-color                   Disables colorized output.');\n        console.log('  --ie-compat                  Enables IE8 compatibility checks.');\n        console.log('  --js                         Enables inline JavaScript in less files');\n        console.log('  -l, --lint                   Syntax check only (lint).');\n        console.log('  -s, --silent                 Suppresses output of error messages.');\n        console.log('  --strict-imports             Forces evaluation of imports.');\n        console.log('  --insecure                   Allows imports from insecure https hosts.');\n        console.log('  -v, --version                Prints version number and exit.');\n        console.log('  --verbose                    Be verbose.');\n        console.log('  --source-map[=FILENAME]      Outputs a v3 sourcemap to the filename (or output filename.map).');\n        console.log('  --source-map-rootpath=X      Adds this path onto the sourcemap filename and less file paths.');\n        console.log('  --source-map-basepath=X      Sets sourcemap base path, defaults to current working directory.');\n        console.log('  --source-map-include-source  Puts the less files into the map instead of referencing them.');\n        console.log('  --source-map-inline          Puts the map (and any less files) as a base64 data uri into the output css file.');\n        console.log('  --source-map-url=URL         Sets a custom URL to map file, for sourceMappingURL comment');\n        console.log('                               in generated CSS file.');\n        console.log('  --source-map-no-annotation   Excludes the sourceMappingURL comment from the output css file.');\n        console.log('  -rp, --rootpath=URL          Sets rootpath for url rewriting in relative imports and urls');\n        console.log('                               Works with or without the relative-urls option.');\n        console.log('  -ru=, --rewrite-urls=        Rewrites URLs to make them relative to the base less file.');\n        console.log('    all|local|off              \\'all\\' rewrites all URLs, \\'local\\' just those starting with a \\'.\\'');\n        console.log('');\n        console.log('  -m=, --math=');\n        console.log('     always                    Less will eagerly perform math operations always.');\n        console.log('     parens-division           Math performed except for division (/) operator');\n        console.log('     parens | strict           Math only performed inside parentheses');\n        console.log('     strict-legacy             Parens required in very strict terms (legacy --strict-math)');\n        console.log('');\n        console.log('  -su=on|off                   Allows mixed units, e.g. 1px+1em or 1px*1px which have units');\n        console.log('  --strict-units=on|off        that cannot be represented.');\n        console.log('  --global-var=\\'VAR=VALUE\\'     Defines a variable that can be referenced by the file.');\n        console.log('  --modify-var=\\'VAR=VALUE\\'     Modifies a variable already declared in the file.');\n        console.log('  --url-args=\\'QUERYSTRING\\'     Adds params into url tokens (e.g. 42, cb=42 or \\'a=1&b=2\\')');\n        console.log('  --plugin=PLUGIN=OPTIONS      Loads a plugin. You can also omit the --plugin= if the plugin begins');\n        console.log('                               less-plugin. E.g. the clean css plugin is called less-plugin-clean-css');\n        console.log('                               once installed (npm install less-plugin-clean-css), use either with');\n        console.log('                               --plugin=less-plugin-clean-css or just --clean-css');\n        console.log('                               specify options afterwards e.g. --plugin=less-plugin-clean-css=\"advanced\"');\n        console.log('                               or --clean-css=\"advanced\"');\n        console.log('');\n        console.log('-------------------------- Deprecated ----------------');\n        console.log('  -sm=on|off               Legacy parens-only math. Use --math');\n        console.log('  --strict-math=on|off     ');\n        console.log('');\n        console.log('  --line-numbers=TYPE      Outputs filename and line numbers.');\n        console.log('                           TYPE can be either \\'comments\\', which will output');\n        console.log('                           the debug info within comments, \\'mediaquery\\'');\n        console.log('                           that will output the information within a fake');\n        console.log('                           media query which is compatible with the SASS');\n        console.log('                           format, and \\'all\\' which will do both.');\n        console.log('  -x, --compress           Compresses output by removing some whitespaces.');\n        console.log('                           We recommend you use a dedicated minifer like less-plugin-clean-css');\n        console.log('');\n        console.log('Report bugs to: http://github.com/less/less.js/issues');\n        console.log('Home page: <http://lesscss.org/>');\n    }\n};\n\n// Exports helper functions\nfor (const h in lessc_helper) { if (lessc_helper.hasOwnProperty(h)) { exports[h] = lessc_helper[h]; }}\n", "import path from 'path';\nimport AbstractPluginLoader from '../less/environment/abstract-plugin-loader.js';\n\n/**\n * Node Plugin Loader\n */\nconst PluginLoader = function(less) {\n    this.less = less;\n    this.require = prefix => {\n        prefix = path.dirname(prefix);\n        return id => {\n            const str = id.substr(0, 2);\n            if (str === '..' || str === './') {\n                return require(path.join(prefix, id));\n            }\n            else {\n                return require(id);\n            }\n        };\n    };\n};\n\nPluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\n    loadPlugin(filename, basePath, context, environment, fileManager) {\n        const prefix = filename.slice(0, 1);\n        const explicit = prefix === '.' || prefix === '/' || filename.slice(-3).toLowerCase() === '.js';\n        if (!explicit) {\n            context.prefixes = ['less-plugin-', ''];\n        }\n\n        if (context.syncImport) {\n            return fileManager.loadFileSync(filename, basePath, context, environment);\n        }\n\n        return new Promise((fulfill, reject) => {\n            fileManager.loadFile(filename, basePath, context, environment).then(\n                data => {\n                    try {\n                        fulfill(data);\n                    }\n                    catch (e) {\n                        console.log(e);\n                        reject(e);\n                    }\n                }\n            ).catch(err => {\n                reject(err);\n            });\n        });\n    },\n\n    loadPluginSync(filename, basePath, context, environment, fileManager) {\n        context.syncImport = true;\n        return this.loadPlugin(filename, basePath, context, environment, fileManager);\n    }\n});\n\nexport default PluginLoader;\n\n", "// Export a new default each time\nexport default function() {\n    return {\n        /* Inline Javascript - @plugin still allowed */\n        javascriptEnabled: false,\n\n        /* Outputs a makefile import dependency list to stdout. */\n        depends: false,\n\n        /* (DEPRECATED) Compress using less built-in compression. \n         * This does an okay job but does not utilise all the tricks of \n         * dedicated css compression. */\n        compress: false,\n\n        /* Runs the less parser and just reports errors without any output. */\n        lint: false,\n\n        /* Sets available include paths.\n         * If the file in an @import rule does not exist at that exact location, \n         * less will look for it at the location(s) passed to this option. \n         * You might use this for instance to specify a path to a library which \n         * you want to be referenced simply and relatively in the less files. */\n        paths: [],\n\n        /* color output in the terminal */\n        color: true,\n\n        /* The strictImports controls whether the compiler will allow an @import inside of either \n         * @media blocks or (a later addition) other selector blocks.\n         * See: https://github.com/less/less.js/issues/656 */\n        strictImports: false,\n\n        /* Allow Imports from Insecure HTTPS Hosts */\n        insecure: false,\n\n        /* Allows you to add a path to every generated import and url in your css. \n         * This does not affect less import statements that are processed, just ones \n         * that are left in the output css. */\n        rootpath: '',\n\n        /* By default URLs are kept as-is, so if you import a file in a sub-directory \n         * that references an image, exactly the same URL will be output in the css. \n         * This option allows you to re-write URL's in imported files so that the \n         * URL is always relative to the base imported file */\n        rewriteUrls: false,\n\n        /* How to process math \n         *   0 always           - eagerly try to solve all operations\n         *   1 parens-division  - require parens for division \"/\"\n         *   2 parens | strict  - require parens for all operations\n         *   3 strict-legacy    - legacy strict behavior (super-strict)\n         */\n        math: 1,\n\n        /* Without this option, less attempts to guess at the output unit when it does maths. */\n        strictUnits: false,\n\n        /* Effectively the declaration is put at the top of your base Less file, \n         * meaning it can be used but it also can be overridden if this variable \n         * is defined in the file. */\n        globalVars: null,\n\n        /* As opposed to the global variable option, this puts the declaration at the\n         * end of your base file, meaning it will override anything defined in your Less file. */\n        modifyVars: null,\n\n        /* This option allows you to specify a argument to go on to every URL.  */\n        urlArgs: ''\n    }\n};", "'use strict';\n\nmodule.exports = [\n  'bmp',\n  'gif',\n  'jpg',\n  'png',\n  'psd',\n  'svg',\n  'tiff',\n  'webp',\n  'dds'\n];\n", "'use strict';\n\nvar typeMap = {};\nvar types = require('./types');\n\n// load all available handlers\ntypes.forEach(function (type) {\n  typeMap[type] = require('./types/' + type).detect;\n});\n\nmodule.exports = function (buffer, filepath) {\n  var type, result;\n  for (type in typeMap) {\n    result = typeMap[type](buffer, filepath);\n    if (result) {\n      return type;\n    }\n  }\n};\n", "'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar detector = require('./detector');\n\nvar handlers = {};\nvar types = require('./types');\n\n// load all available handlers\ntypes.forEach(function (type) {\n  handlers[type] = require('./types/' + type);\n});\n\n// Maximum buffer size, with a default of 128 kilobytes.\n// TO-DO: make this adaptive based on the initial signature of the image\nvar MaxBufferSize = 128*1024;\n\nfunction lookup (buffer, filepath) {\n  // detect the file type.. don't rely on the extension\n  var type = detector(buffer, filepath);\n\n  // find an appropriate handler for this file type\n  if (type in handlers) {\n    var size = handlers[type].calculate(buffer, filepath);\n    if (size !== false) {\n      size.type = type;\n      return size;\n    }\n  }\n\n  // throw up, if we don't understand the file\n  throw new TypeError('unsupported file type: ' + type + ' (file: ' + filepath + ')');\n}\n\nfunction asyncFileToBuffer (filepath, callback) {\n  // open the file in read only mode\n  fs.open(filepath, 'r', function (err, descriptor) {\n    if (err) { return callback(err); }\n    var size = fs.fstatSync(descriptor).size;\n    if (size <= 0){return callback(new Error(\"File size is not greater than 0 \u2014\u2014 \" + filepath)); }\n    var bufferSize = Math.min(size, MaxBufferSize);\n    var buffer = new Buffer(bufferSize);\n    // read first buffer block from the file, asynchronously\n    fs.read(descriptor, buffer, 0, bufferSize, 0, function (err) {\n      if (err) { return callback(err); }\n      // close the file, we are done\n      fs.close(descriptor, function (err) {\n        callback(err, buffer);\n      });\n    });\n  });\n}\n\nfunction syncFileToBuffer (filepath) {\n  // read from the file, synchronously\n  var descriptor = fs.openSync(filepath, 'r');\n  var size = fs.fstatSync(descriptor).size;\n  var bufferSize = Math.min(size, MaxBufferSize);\n  var buffer = new Buffer(bufferSize);\n  fs.readSync(descriptor, buffer, 0, bufferSize, 0);\n  fs.closeSync(descriptor);\n  return buffer;\n}\n\n/**\n * @params input - buffer or relative/absolute path of the image file\n * @params callback - optional function for async detection\n */\nmodule.exports = function (input, callback) {\n\n  // Handle buffer input\n  if (Buffer.isBuffer(input)) {\n    return lookup(input);\n  }\n\n  // input should be a string at this point\n  if (typeof input !== 'string') {\n    throw new TypeError('invalid invocation');\n  }\n\n  // resolve the file path\n  var filepath = path.resolve(input);\n\n  if (typeof callback === 'function') {\n    asyncFileToBuffer(filepath, function (err, buffer) {\n      if (err) { return callback(err); }\n\n      // return the dimensions\n      var dimensions;\n      try {\n        dimensions = lookup(buffer, filepath);\n      } catch (e) {\n        err = e;\n      }\n      callback(err, dimensions);\n    });\n  } else {\n    var buffer = syncFileToBuffer(filepath);\n    return lookup(buffer, filepath);\n  }\n};\n\nmodule.exports.types = types;\n", "import Dimension from '../less/tree/dimension';\nimport Expression from '../less/tree/expression';\nimport functionRegistry from './../less/functions/function-registry';\n\nexport default environment => {\n\n    function imageSize(functionContext, filePathNode) {\n        let filePath = filePathNode.value;\n        const currentFileInfo = functionContext.currentFileInfo;\n        const currentDirectory = currentFileInfo.rewriteUrls ?\n            currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n\n        const fragmentStart = filePath.indexOf('#');\n        let fragment = '';\n        if (fragmentStart !== -1) {\n            fragment = filePath.slice(fragmentStart);\n            filePath = filePath.slice(0, fragmentStart);\n        }\n\n        const fileManager = environment.getFileManager(filePath, currentDirectory, functionContext.context, environment, true);\n\n        if (!fileManager) {\n            throw {\n                type: 'File',\n                message: `Can not set up FileManager for ${filePathNode}`\n            };\n        }\n\n        const fileSync = fileManager.loadFileSync(filePath, currentDirectory, functionContext.context, environment);\n\n        if (fileSync.error) {\n            throw fileSync.error;\n        }\n\n        const sizeOf = require('image-size');\n        return sizeOf(fileSync.filename);\n    }\n\n    const imageFunctions = {\n        'image-size': function(filePathNode) {\n            const size = imageSize(this, filePathNode);\n            return new Expression([\n                new Dimension(size.width, 'px'),\n                new Dimension(size.height, 'px')\n            ]);\n        },\n        'image-width': function(filePathNode) {\n            const size = imageSize(this, filePathNode);\n            return new Dimension(size.width, 'px');\n        },\n        'image-height': function(filePathNode) {\n            const size = imageSize(this, filePathNode);\n            return new Dimension(size.height, 'px');\n        }\n    };\n\n    functionRegistry.addMultiple(imageFunctions);\n};\n", "import environment from './environment';\nimport FileManager from './file-manager';\nimport UrlFileManager from './url-file-manager';\nimport createFromEnvironment from '../less';\nconst less = createFromEnvironment(environment, [new FileManager(), new UrlFileManager()]);\nimport lesscHelper from './lessc-helper';\nimport path from 'path';\n\n// allow people to create less with their own environment\nless.createFromEnvironment = createFromEnvironment;\nless.lesscHelper = lesscHelper;\nless.PluginLoader = require('./plugin-loader').default;\nless.fs = require('./fs').default;\nless.FileManager = FileManager;\nless.UrlFileManager = UrlFileManager;\n\n// Set up options\nless.options = require('../less/default-options').default();\n\n// provide image-size functionality\nrequire('./image-size').default(less.environment);\n\nexport default less;\n", "// This is a generated file. Do not edit.\nvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\nvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\nvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nvar unicode = {\n\tSpace_Separator: Space_Separator,\n\tID_Start: ID_Start,\n\tID_Continue: ID_Continue\n};\n\nvar util = {\n    isSpaceSeparator (c) {\n        return typeof c === 'string' && unicode.Space_Separator.test(c)\n    },\n\n    isIdStartChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c === '$') || (c === '_') ||\n        unicode.ID_Start.test(c)\n        )\n    },\n\n    isIdContinueChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        (c === '$') || (c === '_') ||\n        (c === '\\u200C') || (c === '\\u200D') ||\n        unicode.ID_Continue.test(c)\n        )\n    },\n\n    isDigit (c) {\n        return typeof c === 'string' && /[0-9]/.test(c)\n    },\n\n    isHexDigit (c) {\n        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n    },\n};\n\nlet source;\nlet parseState;\nlet stack;\nlet pos;\nlet line;\nlet column;\nlet token;\nlet key;\nlet root;\n\nvar parse = function parse (text, reviver) {\n    source = String(text);\n    parseState = 'start';\n    stack = [];\n    pos = 0;\n    line = 1;\n    column = 0;\n    token = undefined;\n    key = undefined;\n    root = undefined;\n\n    do {\n        token = lex();\n\n        // This code is unreachable.\n        // if (!parseStates[parseState]) {\n        //     throw invalidParseState()\n        // }\n\n        parseStates[parseState]();\n    } while (token.type !== 'eof')\n\n    if (typeof reviver === 'function') {\n        return internalize({'': root}, '', reviver)\n    }\n\n    return root\n};\n\nfunction internalize (holder, name, reviver) {\n    const value = holder[name];\n    if (value != null && typeof value === 'object') {\n        for (const key in value) {\n            const replacement = internalize(value, key, reviver);\n            if (replacement === undefined) {\n                delete value[key];\n            } else {\n                value[key] = replacement;\n            }\n        }\n    }\n\n    return reviver.call(holder, name, value)\n}\n\nlet lexState;\nlet buffer;\nlet doubleQuote;\nlet sign;\nlet c;\n\nfunction lex () {\n    lexState = 'default';\n    buffer = '';\n    doubleQuote = false;\n    sign = 1;\n\n    for (;;) {\n        c = peek();\n\n        // This code is unreachable.\n        // if (!lexStates[lexState]) {\n        //     throw invalidLexState(lexState)\n        // }\n\n        const token = lexStates[lexState]();\n        if (token) {\n            return token\n        }\n    }\n}\n\nfunction peek () {\n    if (source[pos]) {\n        return String.fromCodePoint(source.codePointAt(pos))\n    }\n}\n\nfunction read () {\n    const c = peek();\n\n    if (c === '\\n') {\n        line++;\n        column = 0;\n    } else if (c) {\n        column += c.length;\n    } else {\n        column++;\n    }\n\n    if (c) {\n        pos += c.length;\n    }\n\n    return c\n}\n\nconst lexStates = {\n    default () {\n        switch (c) {\n        case '\\t':\n        case '\\v':\n        case '\\f':\n        case ' ':\n        case '\\u00A0':\n        case '\\uFEFF':\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'comment';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        if (util.isSpaceSeparator(c)) {\n            read();\n            return\n        }\n\n        // This code is unreachable.\n        // if (!lexStates[parseState]) {\n        //     throw invalidLexState(parseState)\n        // }\n\n        return lexStates[parseState]()\n    },\n\n    comment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineComment';\n            return\n\n        case '/':\n            read();\n            lexState = 'singleLineComment';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    multiLineComment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineCommentAsterisk';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n    },\n\n    multiLineCommentAsterisk () {\n        switch (c) {\n        case '*':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n        lexState = 'multiLineComment';\n    },\n\n    singleLineComment () {\n        switch (c) {\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        read();\n    },\n\n    value () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        case 'n':\n            read();\n            literal('ull');\n            return newToken('null', null)\n\n        case 't':\n            read();\n            literal('rue');\n            return newToken('boolean', true)\n\n        case 'f':\n            read();\n            literal('alse');\n            return newToken('boolean', false)\n\n        case '-':\n        case '+':\n            if (read() === '-') {\n                sign = -1;\n            }\n\n            lexState = 'sign';\n            return\n\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            buffer = '';\n            lexState = 'string';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    identifierNameStartEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n            break\n\n        default:\n            if (!util.isIdStartChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    identifierName () {\n        switch (c) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            buffer += read();\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameEscape';\n            return\n        }\n\n        if (util.isIdContinueChar(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('identifier', buffer)\n    },\n\n    identifierNameEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            break\n\n        default:\n            if (!util.isIdContinueChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    sign () {\n        switch (c) {\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', sign * Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n        }\n\n        throw invalidChar(read())\n    },\n\n    zero () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n\n        case 'x':\n        case 'X':\n            buffer += read();\n            lexState = 'hexadecimal';\n            return\n        }\n\n        return newToken('numeric', sign * 0)\n    },\n\n    decimalInteger () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalPointLeading () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalPoint () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalFraction () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalExponent () {\n        switch (c) {\n        case '+':\n        case '-':\n            buffer += read();\n            lexState = 'decimalExponentSign';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentSign () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentInteger () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    hexadecimal () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            lexState = 'hexadecimalInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    hexadecimalInteger () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    string () {\n        switch (c) {\n        case '\\\\':\n            read();\n            buffer += escape();\n            return\n\n        case '\"':\n            if (doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case \"'\":\n            if (!doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case '\\n':\n        case '\\r':\n            throw invalidChar(read())\n\n        case '\\u2028':\n        case '\\u2029':\n            separatorChar(c);\n            break\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    },\n\n    start () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        // This code is unreachable since the default lexState handles eof.\n        // case undefined:\n        //     return newToken('eof')\n        }\n\n        lexState = 'value';\n    },\n\n    beforePropertyName () {\n        switch (c) {\n        case '$':\n        case '_':\n            buffer = read();\n            lexState = 'identifierName';\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameStartEscape';\n            return\n\n        case '}':\n            return newToken('punctuator', read())\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            lexState = 'string';\n            return\n        }\n\n        if (util.isIdStartChar(c)) {\n            buffer += read();\n            lexState = 'identifierName';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    afterPropertyName () {\n        if (c === ':') {\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforePropertyValue () {\n        lexState = 'value';\n    },\n\n    afterPropertyValue () {\n        switch (c) {\n        case ',':\n        case '}':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforeArrayValue () {\n        if (c === ']') {\n            return newToken('punctuator', read())\n        }\n\n        lexState = 'value';\n    },\n\n    afterArrayValue () {\n        switch (c) {\n        case ',':\n        case ']':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the default lexState.\n        // if (c === undefined) {\n        //     read()\n        //     return newToken('eof')\n        // }\n\n        throw invalidChar(read())\n    },\n};\n\nfunction newToken (type, value) {\n    return {\n        type,\n        value,\n        line,\n        column,\n    }\n}\n\nfunction literal (s) {\n    for (const c of s) {\n        const p = peek();\n\n        if (p !== c) {\n            throw invalidChar(read())\n        }\n\n        read();\n    }\n}\n\nfunction escape () {\n    const c = peek();\n    switch (c) {\n    case 'b':\n        read();\n        return '\\b'\n\n    case 'f':\n        read();\n        return '\\f'\n\n    case 'n':\n        read();\n        return '\\n'\n\n    case 'r':\n        read();\n        return '\\r'\n\n    case 't':\n        read();\n        return '\\t'\n\n    case 'v':\n        read();\n        return '\\v'\n\n    case '0':\n        read();\n        if (util.isDigit(peek())) {\n            throw invalidChar(read())\n        }\n\n        return '\\0'\n\n    case 'x':\n        read();\n        return hexEscape()\n\n    case 'u':\n        read();\n        return unicodeEscape()\n\n    case '\\n':\n    case '\\u2028':\n    case '\\u2029':\n        read();\n        return ''\n\n    case '\\r':\n        read();\n        if (peek() === '\\n') {\n            read();\n        }\n\n        return ''\n\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n        throw invalidChar(read())\n\n    case undefined:\n        throw invalidChar(read())\n    }\n\n    return read()\n}\n\nfunction hexEscape () {\n    let buffer = '';\n    let c = peek();\n\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    c = peek();\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nfunction unicodeEscape () {\n    let buffer = '';\n    let count = 4;\n\n    while (count-- > 0) {\n        const c = peek();\n        if (!util.isHexDigit(c)) {\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    }\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nconst parseStates = {\n    start () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforePropertyName () {\n        switch (token.type) {\n        case 'identifier':\n        case 'string':\n            key = token.value;\n            parseState = 'afterPropertyName';\n            return\n\n        case 'punctuator':\n            // This code is unreachable since it's handled by the lexState.\n            // if (token.value !== '}') {\n            //     throw invalidToken()\n            // }\n\n            pop();\n            return\n\n        case 'eof':\n            throw invalidEOF()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterPropertyName () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator' || token.value !== ':') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        parseState = 'beforePropertyValue';\n    },\n\n    beforePropertyValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforeArrayValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        if (token.type === 'punctuator' && token.value === ']') {\n            pop();\n            return\n        }\n\n        push();\n    },\n\n    afterPropertyValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforePropertyName';\n            return\n\n        case '}':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterArrayValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforeArrayValue';\n            return\n\n        case ']':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'eof') {\n        //     throw invalidToken()\n        // }\n    },\n};\n\nfunction push () {\n    let value;\n\n    switch (token.type) {\n    case 'punctuator':\n        switch (token.value) {\n        case '{':\n            value = {};\n            break\n\n        case '[':\n            value = [];\n            break\n        }\n\n        break\n\n    case 'null':\n    case 'boolean':\n    case 'numeric':\n    case 'string':\n        value = token.value;\n        break\n\n    // This code is unreachable.\n    // default:\n    //     throw invalidToken()\n    }\n\n    if (root === undefined) {\n        root = value;\n    } else {\n        const parent = stack[stack.length - 1];\n        if (Array.isArray(parent)) {\n            parent.push(value);\n        } else {\n            parent[key] = value;\n        }\n    }\n\n    if (value !== null && typeof value === 'object') {\n        stack.push(value);\n\n        if (Array.isArray(value)) {\n            parseState = 'beforeArrayValue';\n        } else {\n            parseState = 'beforePropertyName';\n        }\n    } else {\n        const current = stack[stack.length - 1];\n        if (current == null) {\n            parseState = 'end';\n        } else if (Array.isArray(current)) {\n            parseState = 'afterArrayValue';\n        } else {\n            parseState = 'afterPropertyValue';\n        }\n    }\n}\n\nfunction pop () {\n    stack.pop();\n\n    const current = stack[stack.length - 1];\n    if (current == null) {\n        parseState = 'end';\n    } else if (Array.isArray(current)) {\n        parseState = 'afterArrayValue';\n    } else {\n        parseState = 'afterPropertyValue';\n    }\n}\n\n// This code is unreachable.\n// function invalidParseState () {\n//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n// }\n\n// This code is unreachable.\n// function invalidLexState (state) {\n//     return new Error(`JSON5: invalid lex state '${state}'`)\n// }\n\nfunction invalidChar (c) {\n    if (c === undefined) {\n        return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n    }\n\n    return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n}\n\nfunction invalidEOF () {\n    return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n}\n\n// This code is unreachable.\n// function invalidToken () {\n//     if (token.type === 'eof') {\n//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n//     }\n\n//     const c = String.fromCodePoint(token.value.codePointAt(0))\n//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n// }\n\nfunction invalidIdentifier () {\n    column -= 5;\n    return syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)\n}\n\nfunction separatorChar (c) {\n    console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`);\n}\n\nfunction formatChar (c) {\n    const replacements = {\n        \"'\": \"\\\\'\",\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\',\n        '\\b': '\\\\b',\n        '\\f': '\\\\f',\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\v': '\\\\v',\n        '\\0': '\\\\0',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n\n    if (replacements[c]) {\n        return replacements[c]\n    }\n\n    if (c < ' ') {\n        const hexString = c.charCodeAt(0).toString(16);\n        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n    }\n\n    return c\n}\n\nfunction syntaxError (message) {\n    const err = new SyntaxError(message);\n    err.lineNumber = line;\n    err.columnNumber = column;\n    return err\n}\n\nvar stringify = function stringify (value, replacer, space) {\n    const stack = [];\n    let indent = '';\n    let propertyList;\n    let replacerFunc;\n    let gap = '';\n    let quote;\n\n    if (\n        replacer != null &&\n        typeof replacer === 'object' &&\n        !Array.isArray(replacer)\n    ) {\n        space = replacer.space;\n        quote = replacer.quote;\n        replacer = replacer.replacer;\n    }\n\n    if (typeof replacer === 'function') {\n        replacerFunc = replacer;\n    } else if (Array.isArray(replacer)) {\n        propertyList = [];\n        for (const v of replacer) {\n            let item;\n\n            if (typeof v === 'string') {\n                item = v;\n            } else if (\n                typeof v === 'number' ||\n                v instanceof String ||\n                v instanceof Number\n            ) {\n                item = String(v);\n            }\n\n            if (item !== undefined && propertyList.indexOf(item) < 0) {\n                propertyList.push(item);\n            }\n        }\n    }\n\n    if (space instanceof Number) {\n        space = Number(space);\n    } else if (space instanceof String) {\n        space = String(space);\n    }\n\n    if (typeof space === 'number') {\n        if (space > 0) {\n            space = Math.min(10, Math.floor(space));\n            gap = '          '.substr(0, space);\n        }\n    } else if (typeof space === 'string') {\n        gap = space.substr(0, 10);\n    }\n\n    return serializeProperty('', {'': value})\n\n    function serializeProperty (key, holder) {\n        let value = holder[key];\n        if (value != null) {\n            if (typeof value.toJSON5 === 'function') {\n                value = value.toJSON5(key);\n            } else if (typeof value.toJSON === 'function') {\n                value = value.toJSON(key);\n            }\n        }\n\n        if (replacerFunc) {\n            value = replacerFunc.call(holder, key, value);\n        }\n\n        if (value instanceof Number) {\n            value = Number(value);\n        } else if (value instanceof String) {\n            value = String(value);\n        } else if (value instanceof Boolean) {\n            value = value.valueOf();\n        }\n\n        switch (value) {\n        case null: return 'null'\n        case true: return 'true'\n        case false: return 'false'\n        }\n\n        if (typeof value === 'string') {\n            return quoteString(value, false)\n        }\n\n        if (typeof value === 'number') {\n            return String(value)\n        }\n\n        if (typeof value === 'object') {\n            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n        }\n\n        return undefined\n    }\n\n    function quoteString (value) {\n        const quotes = {\n            \"'\": 0.1,\n            '\"': 0.2,\n        };\n\n        const replacements = {\n            \"'\": \"\\\\'\",\n            '\"': '\\\\\"',\n            '\\\\': '\\\\\\\\',\n            '\\b': '\\\\b',\n            '\\f': '\\\\f',\n            '\\n': '\\\\n',\n            '\\r': '\\\\r',\n            '\\t': '\\\\t',\n            '\\v': '\\\\v',\n            '\\0': '\\\\0',\n            '\\u2028': '\\\\u2028',\n            '\\u2029': '\\\\u2029',\n        };\n\n        let product = '';\n\n        for (let i = 0; i < value.length; i++) {\n            const c = value[i];\n            switch (c) {\n            case \"'\":\n            case '\"':\n                quotes[c]++;\n                product += c;\n                continue\n\n            case '\\0':\n                if (util.isDigit(value[i + 1])) {\n                    product += '\\\\x00';\n                    continue\n                }\n            }\n\n            if (replacements[c]) {\n                product += replacements[c];\n                continue\n            }\n\n            if (c < ' ') {\n                let hexString = c.charCodeAt(0).toString(16);\n                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n                continue\n            }\n\n            product += c;\n        }\n\n        const quoteChar = quote || Object.keys(quotes).reduce((a, b) => (quotes[a] < quotes[b]) ? a : b);\n\n        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n        return quoteChar + product + quoteChar\n    }\n\n    function serializeObject (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let keys = propertyList || Object.keys(value);\n        let partial = [];\n        for (const key of keys) {\n            const propertyString = serializeProperty(key, value);\n            if (propertyString !== undefined) {\n                let member = serializeKey(key) + ':';\n                if (gap !== '') {\n                    member += ' ';\n                }\n                member += propertyString;\n                partial.push(member);\n            }\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '{}';\n        } else {\n            let properties;\n            if (gap === '') {\n                properties = partial.join(',');\n                final = '{' + properties + '}';\n            } else {\n                let separator = ',\\n' + indent;\n                properties = partial.join(separator);\n                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n\n    function serializeKey (key) {\n        if (key.length === 0) {\n            return quoteString(key, true)\n        }\n\n        const firstChar = String.fromCodePoint(key.codePointAt(0));\n        if (!util.isIdStartChar(firstChar)) {\n            return quoteString(key, true)\n        }\n\n        for (let i = firstChar.length; i < key.length; i++) {\n            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n                return quoteString(key, true)\n            }\n        }\n\n        return key\n    }\n\n    function serializeArray (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let partial = [];\n        for (let i = 0; i < value.length; i++) {\n            const propertyString = serializeProperty(String(i), value);\n            partial.push((propertyString !== undefined) ? propertyString : 'null');\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '[]';\n        } else {\n            if (gap === '') {\n                let properties = partial.join(',');\n                final = '[' + properties + ']';\n            } else {\n                let separator = ',\\n' + indent;\n                let properties = partial.join(separator);\n                final = '[\\n' + indent + properties + ',\\n' + stepback + ']';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n};\n\nconst JSON5 = {\n    parse,\n    stringify,\n};\n\nvar lib = JSON5;\n\nexport default lib;\n", "'use strict';\n\nconst JSON5 = require('json5');\n\nconst specialValues = {\n  null: null,\n  true: true,\n  false: false,\n};\n\nfunction parseQuery(query) {\n  if (query.substr(0, 1) !== '?') {\n    throw new Error(\n      \"A valid query string passed to parseQuery should begin with '?'\"\n    );\n  }\n\n  query = query.substr(1);\n\n  if (!query) {\n    return {};\n  }\n\n  if (query.substr(0, 1) === '{' && query.substr(-1) === '}') {\n    return JSON5.parse(query);\n  }\n\n  const queryArgs = query.split(/[,&]/g);\n  const result = {};\n\n  queryArgs.forEach((arg) => {\n    const idx = arg.indexOf('=');\n\n    if (idx >= 0) {\n      let name = arg.substr(0, idx);\n      let value = decodeURIComponent(arg.substr(idx + 1));\n\n      // eslint-disable-next-line no-prototype-builtins\n      if (specialValues.hasOwnProperty(value)) {\n        value = specialValues[value];\n      }\n\n      if (name.substr(-2) === '[]') {\n        name = decodeURIComponent(name.substr(0, name.length - 2));\n\n        if (!Array.isArray(result[name])) {\n          result[name] = [];\n        }\n\n        result[name].push(value);\n      } else {\n        name = decodeURIComponent(name);\n        result[name] = value;\n      }\n    } else {\n      if (arg.substr(0, 1) === '-') {\n        result[decodeURIComponent(arg.substr(1))] = false;\n      } else if (arg.substr(0, 1) === '+') {\n        result[decodeURIComponent(arg.substr(1))] = true;\n      } else {\n        result[decodeURIComponent(arg)] = true;\n      }\n    }\n  });\n\n  return result;\n}\n\nmodule.exports = parseQuery;\n", "'use strict';\n\nconst parseQuery = require('./parseQuery');\n\nfunction getOptions(loaderContext) {\n  const query = loaderContext.query;\n\n  if (typeof query === 'string' && query !== '') {\n    return parseQuery(loaderContext.query);\n  }\n\n  if (!query || typeof query !== 'object') {\n    // Not object-like queries are not supported.\n    return {};\n  }\n\n  return query;\n}\n\nmodule.exports = getOptions;\n", "'use strict';\n\nconst path = require('path');\n\nconst matchRelativePath = /^\\.\\.?[/\\\\]/;\n\nfunction isAbsolutePath(str) {\n  return path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\n\nfunction isRelativePath(str) {\n  return matchRelativePath.test(str);\n}\n\nfunction stringifyRequest(loaderContext, request) {\n  const splitted = request.split('!');\n  const context =\n    loaderContext.context ||\n    (loaderContext.options && loaderContext.options.context);\n\n  return JSON.stringify(\n    splitted\n      .map((part) => {\n        // First, separate singlePath from query, because the query might contain paths again\n        const splittedPart = part.match(/^(.*?)(\\?.*)/);\n        const query = splittedPart ? splittedPart[2] : '';\n        let singlePath = splittedPart ? splittedPart[1] : part;\n\n        if (isAbsolutePath(singlePath) && context) {\n          singlePath = path.relative(context, singlePath);\n\n          if (isAbsolutePath(singlePath)) {\n            // If singlePath still matches an absolute path, singlePath was on a different drive than context.\n            // In this case, we leave the path platform-specific without replacing any separators.\n            // @see https://github.com/webpack/loader-utils/pull/14\n            return singlePath + query;\n          }\n\n          if (isRelativePath(singlePath) === false) {\n            // Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n            singlePath = './' + singlePath;\n          }\n        }\n\n        return singlePath.replace(/\\\\/g, '/') + query;\n      })\n      .join('!')\n  );\n}\n\nmodule.exports = stringifyRequest;\n", "'use strict';\n\nfunction getRemainingRequest(loaderContext) {\n  if (loaderContext.remainingRequest) {\n    return loaderContext.remainingRequest;\n  }\n\n  const request = loaderContext.loaders\n    .slice(loaderContext.loaderIndex + 1)\n    .map((obj) => obj.request)\n    .concat([loaderContext.resource]);\n\n  return request.join('!');\n}\n\nmodule.exports = getRemainingRequest;\n", "'use strict';\n\nfunction getCurrentRequest(loaderContext) {\n  if (loaderContext.currentRequest) {\n    return loaderContext.currentRequest;\n  }\n\n  const request = loaderContext.loaders\n    .slice(loaderContext.loaderIndex)\n    .map((obj) => obj.request)\n    .concat([loaderContext.resource]);\n\n  return request.join('!');\n}\n\nmodule.exports = getCurrentRequest;\n", "'use strict';\n\nconst path = require('path');\n\nfunction isUrlRequest(url, root) {\n  // An URL is not an request if\n\n  // 1. It's an absolute url and it is not `windows` path like `C:\\dir\\file`\n  if (/^[a-z][a-z0-9+.-]*:/i.test(url) && !path.win32.isAbsolute(url)) {\n    return false;\n  }\n\n  // 2. It's a protocol-relative\n  if (/^\\/\\//.test(url)) {\n    return false;\n  }\n\n  // 3. It's some kind of url for a template\n  if (/^[{}[\\]#*;,'\u00A7$%&(=?`\u00B4^\u00B0<>]/.test(url)) {\n    return false;\n  }\n\n  // 4. It's also not an request if root isn't set and it's a root-relative url\n  if ((root === undefined || root === false) && /^\\//.test(url)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = isUrlRequest;\n", "'use strict';\n\n// we can't use path.win32.isAbsolute because it also matches paths starting with a forward slash\nconst matchNativeWin32Path = /^[A-Z]:[/\\\\]|^\\\\\\\\/i;\n\nfunction urlToRequest(url, root) {\n  // Do not rewrite an empty url\n  if (url === '') {\n    return '';\n  }\n\n  const moduleRequestRegex = /^[^?]*~/;\n  let request;\n\n  if (matchNativeWin32Path.test(url)) {\n    // absolute windows path, keep it\n    request = url;\n  } else if (root !== undefined && root !== false && /^\\//.test(url)) {\n    // if root is set and the url is root-relative\n    switch (typeof root) {\n      // 1. root is a string: root is prefixed to the url\n      case 'string':\n        // special case: `~` roots convert to module request\n        if (moduleRequestRegex.test(root)) {\n          request = root.replace(/([^~/])$/, '$1/') + url.slice(1);\n        } else {\n          request = root + url;\n        }\n        break;\n      // 2. root is `true`: absolute paths are allowed\n      //    *nix only, windows-style absolute paths are always allowed as they doesn't start with a `/`\n      case 'boolean':\n        request = url;\n        break;\n      default:\n        throw new Error(\n          \"Unexpected parameters to loader-utils 'urlToRequest': url = \" +\n            url +\n            ', root = ' +\n            root +\n            '.'\n        );\n    }\n  } else if (/^\\.\\.?\\//.test(url)) {\n    // A relative url stays\n    request = url;\n  } else {\n    // every other url is threaded like a relative url\n    request = './' + url;\n  }\n\n  // A `~` makes the url an module\n  if (moduleRequestRegex.test(request)) {\n    request = request.replace(moduleRequestRegex, '');\n  }\n\n  return request;\n}\n\nmodule.exports = urlToRequest;\n", "'use strict';\n\nfunction parseString(str) {\n  try {\n    if (str[0] === '\"') {\n      return JSON.parse(str);\n    }\n\n    if (str[0] === \"'\" && str.substr(str.length - 1) === \"'\") {\n      return parseString(\n        str\n          .replace(/\\\\.|\"/g, (x) => (x === '\"' ? '\\\\\"' : x))\n          .replace(/^'|'$/g, '\"')\n      );\n    }\n\n    return JSON.parse('\"' + str + '\"');\n  } catch (e) {\n    return str;\n  }\n}\n\nmodule.exports = parseString;\n", "/*\r\n *  big.js v5.2.2\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  https://github.com/MikeMcl/big.js/LICENCE\r\n */\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n  // The default values below must be integers within the stated ranges.\r\n\r\n  /*\r\n   * The maximum number of decimal places (DP) of the results of operations involving division:\r\n   * div and sqrt, and pow with negative exponents.\r\n   */\r\nvar DP = 20,          // 0 to MAX_DP\r\n\r\n  /*\r\n   * The rounding mode (RM) used when rounding to the above decimal places.\r\n   *\r\n   *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n   *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n   *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n   *  3  Away from zero.                                  (ROUND_UP)\r\n   */\r\n  RM = 1,             // 0, 1, 2 or 3\r\n\r\n  // The maximum value of DP and Big.DP.\r\n  MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n  // The maximum magnitude of the exponent argument to the pow method.\r\n  MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n  /*\r\n   * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n   * (JavaScript numbers: -7)\r\n   * -1000000 is the minimum recommended exponent value of a Big.\r\n   */\r\n  NE = -7,            // 0 to -1000000\r\n\r\n  /*\r\n   * The positive exponent (PE) at and above which toString returns exponential notation.\r\n   * (JavaScript numbers: 21)\r\n   * 1000000 is the maximum recommended exponent value of a Big.\r\n   * (This limit is not enforced or checked.)\r\n   */\r\n  PE = 21,            // 0 to 1000000\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n  // Error messages.\r\n  NAME = '[big.js] ',\r\n  INVALID = NAME + 'Invalid ',\r\n  INVALID_DP = INVALID + 'decimal places',\r\n  INVALID_RM = INVALID + 'rounding mode',\r\n  DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n  // The shared prototype object.\r\n  P = {},\r\n  UNDEFINED = void 0,\r\n  NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n/*\r\n * Create and return a Big constructor.\r\n *\r\n */\r\nfunction _Big_() {\r\n\r\n  /*\r\n   * The Big constructor and exported function.\r\n   * Create and return a new instance of a Big number object.\r\n   *\r\n   * n {number|string|Big} A numeric value.\r\n   */\r\n  function Big(n) {\r\n    var x = this;\r\n\r\n    // Enable constructor usage without new.\r\n    if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n    // Duplicate.\r\n    if (n instanceof Big) {\r\n      x.s = n.s;\r\n      x.e = n.e;\r\n      x.c = n.c.slice();\r\n    } else {\r\n      parse(x, n);\r\n    }\r\n\r\n    /*\r\n     * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\r\n     * points to Object.\r\n     */\r\n    x.constructor = Big;\r\n  }\r\n\r\n  Big.prototype = P;\r\n  Big.DP = DP;\r\n  Big.RM = RM;\r\n  Big.NE = NE;\r\n  Big.PE = PE;\r\n  Big.version = '5.2.2';\r\n\r\n  return Big;\r\n}\r\n\r\n\r\n/*\r\n * Parse the number or string value passed to a Big constructor.\r\n *\r\n * x {Big} A Big number instance.\r\n * n {number|string} A numeric value.\r\n */\r\nfunction parse(x, n) {\r\n  var e, i, nl;\r\n\r\n  // Minus zero?\r\n  if (n === 0 && 1 / n < 0) n = '-0';\r\n  else if (!NUMERIC.test(n += '')) throw Error(INVALID + 'number');\r\n\r\n  // Determine sign.\r\n  x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n  // Decimal point?\r\n  if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = n.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +n.slice(i + 1);\r\n    n = n.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = n.length;\r\n  }\r\n\r\n  nl = n.length;\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n  if (i == nl) {\r\n\r\n    // Zero.\r\n    x.c = [x.e = 0];\r\n  } else {\r\n\r\n    // Determine trailing zeros.\r\n    for (; nl > 0 && n.charAt(--nl) == '0';);\r\n    x.e = e - i - 1;\r\n    x.c = [];\r\n\r\n    // Convert string to array of digits without leading/trailing zeros.\r\n    for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\r\n * Called by stringify, P.div, P.round and P.sqrt.\r\n *\r\n * x {Big} The Big to round.\r\n * dp {number} Integer, 0 to MAX_DP inclusive.\r\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\r\n * [more] {boolean} Whether the result of division was truncated.\r\n */\r\nfunction round(x, dp, rm, more) {\r\n  var xc = x.c,\r\n    i = x.e + dp + 1;\r\n\r\n  if (i < xc.length) {\r\n    if (rm === 1) {\r\n\r\n      // xc[i] is the digit after the digit that may be rounded up.\r\n      more = xc[i] >= 5;\r\n    } else if (rm === 2) {\r\n      more = xc[i] > 5 || xc[i] == 5 &&\r\n        (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\r\n    } else if (rm === 3) {\r\n      more = more || !!xc[0];\r\n    } else {\r\n      more = false;\r\n      if (rm !== 0) throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (i < 1) {\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = -dp;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else {\r\n\r\n      // Remove any digits after the required decimal places.\r\n      xc.length = i--;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[i] > 9;) {\r\n          xc[i] = 0;\r\n          if (!i--) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xc.length; !xc[--i];) xc.pop();\r\n    }\r\n  } else if (rm < 0 || rm > 3 || rm !== ~~rm) {\r\n    throw Error(INVALID_RM);\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a string representing the value of Big x in normal or exponential notation.\r\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n *\r\n * x {Big}\r\n * id? {number} Caller id.\r\n *         1 toExponential\r\n *         2 toFixed\r\n *         3 toPrecision\r\n *         4 valueOf\r\n * n? {number|undefined} Caller's argument.\r\n * k? {number|undefined}\r\n */\r\nfunction stringify(x, id, n, k) {\r\n  var e, s,\r\n    Big = x.constructor,\r\n    z = !x.c[0];\r\n\r\n  if (n !== UNDEFINED) {\r\n    if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\r\n      throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\r\n    }\r\n\r\n    x = new Big(x);\r\n\r\n    // The index of the digit that may be rounded up.\r\n    n = k - x.e;\r\n\r\n    // Round?\r\n    if (x.c.length > ++k) round(x, n, Big.RM);\r\n\r\n    // toFixed: recalculate k as x.e may have changed if value rounded up.\r\n    if (id == 2) k = x.e + n + 1;\r\n\r\n    // Append zeros?\r\n    for (; x.c.length < k;) x.c.push(0);\r\n  }\r\n\r\n  e = x.e;\r\n  s = x.c.join('');\r\n  n = s.length;\r\n\r\n  // Exponential notation?\r\n  if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\r\n    s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n  // Normal notation.\r\n  } else if (e < 0) {\r\n    for (; ++e;) s = '0' + s;\r\n    s = '0.' + s;\r\n  } else if (e > 0) {\r\n    if (++e > n) for (e -= n; e--;) s += '0';\r\n    else if (e < n) s = s.slice(0, e) + '.' + s.slice(e);\r\n  } else if (n > 1) {\r\n    s = s.charAt(0) + '.' + s.slice(1);\r\n  }\r\n\r\n  return x.s < 0 && (!z || id == 4) ? '-' + s : s;\r\n}\r\n\r\n\r\n// Prototype/instance methods\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the absolute value of this Big.\r\n */\r\nP.abs = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = 1;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return 1 if the value of this Big is greater than the value of Big y,\r\n *       -1 if the value of this Big is less than the value of Big y, or\r\n *        0 if they have the same value.\r\n*/\r\nP.cmp = function (y) {\r\n  var isneg,\r\n    x = this,\r\n    xc = x.c,\r\n    yc = (y = new x.constructor(y)).c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  isneg = i < 0;\r\n\r\n  // Compare exponents.\r\n  if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = -1; ++i < j;) {\r\n    if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.div = function (y) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    a = x.c,                  // dividend\r\n    b = (y = new Big(y)).c,   // divisor\r\n    k = x.s == y.s ? 1 : -1,\r\n    dp = Big.DP;\r\n\r\n  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) throw Error(INVALID_DP);\r\n\r\n  // Divisor is zero?\r\n  if (!b[0]) throw Error(DIV_BY_ZERO);\r\n\r\n  // Dividend is 0? Return +-0.\r\n  if (!a[0]) return new Big(k * 0);\r\n\r\n  var bl, bt, n, cmp, ri,\r\n    bz = b.slice(),\r\n    ai = bl = b.length,\r\n    al = a.length,\r\n    r = a.slice(0, bl),   // remainder\r\n    rl = r.length,\r\n    q = y,                // quotient\r\n    qc = q.c = [],\r\n    qi = 0,\r\n    d = dp + (q.e = x.e - y.e) + 1;    // number of digits of the result\r\n\r\n  q.s = k;\r\n  k = d < 0 ? 0 : d;\r\n\r\n  // Create version of divisor with leading zero.\r\n  bz.unshift(0);\r\n\r\n  // Add zeros to make remainder as long as divisor.\r\n  for (; rl++ < bl;) r.push(0);\r\n\r\n  do {\r\n\r\n    // n is how many times the divisor goes into current remainder.\r\n    for (n = 0; n < 10; n++) {\r\n\r\n      // Compare divisor and remainder.\r\n      if (bl != (rl = r.length)) {\r\n        cmp = bl > rl ? 1 : -1;\r\n      } else {\r\n        for (ri = -1, cmp = 0; ++ri < bl;) {\r\n          if (b[ri] != r[ri]) {\r\n            cmp = b[ri] > r[ri] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // If divisor < remainder, subtract divisor from remainder.\r\n      if (cmp < 0) {\r\n\r\n        // Remainder can't be more than 1 digit longer than divisor.\r\n        // Equalise lengths using divisor with extra leading zero?\r\n        for (bt = rl == bl ? b : bz; rl;) {\r\n          if (r[--rl] < bt[rl]) {\r\n            ri = rl;\r\n            for (; ri && !r[--ri];) r[ri] = 9;\r\n            --r[ri];\r\n            r[rl] += 10;\r\n          }\r\n          r[rl] -= bt[rl];\r\n        }\r\n\r\n        for (; !r[0];) r.shift();\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Add the digit n to the result array.\r\n    qc[qi++] = cmp ? n : ++n;\r\n\r\n    // Update the remainder.\r\n    if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n    else r = [a[ai]];\r\n\r\n  } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n  // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n  if (!qc[0] && qi != 1) {\r\n\r\n    // There can't be more than one zero.\r\n    qc.shift();\r\n    q.e--;\r\n  }\r\n\r\n  // Round?\r\n  if (qi > d) round(q, dp, Big.RM, r[0] !== UNDEFINED);\r\n\r\n  return q;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n */\r\nP.eq = function (y) {\r\n  return !this.cmp(y);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n * false.\r\n */\r\nP.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.gte = function (y) {\r\n  return this.cmp(y) > -1;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n */\r\nP.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var i, j, t, xlty,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  // Signs differ?\r\n  if (a != b) {\r\n    y.s = -b;\r\n    return x.plus(y);\r\n  }\r\n\r\n  var xc = x.c.slice(),\r\n    xe = x.e,\r\n    yc = y.c,\r\n    ye = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n\r\n    // y is non-zero? x is non-zero? Or both are zero.\r\n    return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\r\n  }\r\n\r\n  // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n  if (a = xe - ye) {\r\n\r\n    if (xlty = a < 0) {\r\n      a = -a;\r\n      t = xc;\r\n    } else {\r\n      ye = xe;\r\n      t = yc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (b = a; b--;) t.push(0);\r\n    t.reverse();\r\n  } else {\r\n\r\n    // Exponents equal. Check digit by digit.\r\n    j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n    for (a = b = 0; b < j; b++) {\r\n      if (xc[b] != yc[b]) {\r\n        xlty = xc[b] < yc[b];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // x < y? Point xc to the array of the bigger number.\r\n  if (xlty) {\r\n    t = xc;\r\n    xc = yc;\r\n    yc = t;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  /*\r\n   * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n   * needs to start at yc.length.\r\n   */\r\n  if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n  // Subtract yc from xc.\r\n  for (b = i; j > a;) {\r\n    if (xc[--j] < yc[j]) {\r\n      for (i = j; i && !xc[--i];) xc[i] = 9;\r\n      --xc[i];\r\n      xc[j] += 10;\r\n    }\r\n\r\n    xc[j] -= yc[j];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xc[--b] === 0;) xc.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xc[0] === 0;) {\r\n    xc.shift();\r\n    --ye;\r\n  }\r\n\r\n  if (!xc[0]) {\r\n\r\n    // n - n = +0\r\n    y.s = 1;\r\n\r\n    // Result must be zero.\r\n    xc = [ye = 0];\r\n  }\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n */\r\nP.mod = function (y) {\r\n  var ygtx,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  if (!y.c[0]) throw Error(DIV_BY_ZERO);\r\n\r\n  x.s = y.s = 1;\r\n  ygtx = y.cmp(x) == 1;\r\n  x.s = a;\r\n  y.s = b;\r\n\r\n  if (ygtx) return new Big(x);\r\n\r\n  a = Big.DP;\r\n  b = Big.RM;\r\n  Big.DP = Big.RM = 0;\r\n  x = x.div(y);\r\n  Big.DP = a;\r\n  Big.RM = b;\r\n\r\n  return this.minus(x.times(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n */\r\nP.plus = P.add = function (y) {\r\n  var t,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  // Signs differ?\r\n  if (a != b) {\r\n    y.s = -b;\r\n    return x.minus(y);\r\n  }\r\n\r\n  var xe = x.e,\r\n    xc = x.c,\r\n    ye = y.e,\r\n    yc = y.c;\r\n\r\n  // Either zero? y is non-zero? x is non-zero? Or both are zero.\r\n  if (!xc[0] || !yc[0]) return yc[0] ? y : new Big(xc[0] ? x : a * 0);\r\n\r\n  xc = xc.slice();\r\n\r\n  // Prepend zeros to equalise exponents.\r\n  // Note: reverse faster than unshifts.\r\n  if (a = xe - ye) {\r\n    if (a > 0) {\r\n      ye = xe;\r\n      t = yc;\r\n    } else {\r\n      a = -a;\r\n      t = xc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (; a--;) t.push(0);\r\n    t.reverse();\r\n  }\r\n\r\n  // Point xc to the longer array.\r\n  if (xc.length - yc.length < 0) {\r\n    t = yc;\r\n    yc = xc;\r\n    xc = t;\r\n  }\r\n\r\n  a = yc.length;\r\n\r\n  // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n  for (b = 0; a; xc[a] %= 10) b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\r\n\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n  if (b) {\r\n    xc.unshift(b);\r\n    ++ye;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (a = xc.length; xc[--a] === 0;) xc.pop();\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a Big whose value is the value of this Big raised to the power n.\r\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n * mode Big.RM.\r\n *\r\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n */\r\nP.pow = function (n) {\r\n  var x = this,\r\n    one = new x.constructor(1),\r\n    y = one,\r\n    isneg = n < 0;\r\n\r\n  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) throw Error(INVALID + 'exponent');\r\n  if (isneg) n = -n;\r\n\r\n  for (;;) {\r\n    if (n & 1) y = y.times(x);\r\n    n >>= 1;\r\n    if (!n) break;\r\n    x = x.times(x);\r\n  }\r\n\r\n  return isneg ? one.div(y) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\r\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\r\n * multiple of 10**-dp.\r\n * If dp is not specified, round to 0 decimal places.\r\n * If rm is not specified, use Big.RM.\r\n *\r\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\r\n */\r\nP.round = function (dp, rm) {\r\n  var Big = this.constructor;\r\n  if (dp === UNDEFINED) dp = 0;\r\n  else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) throw Error(INVALID_DP);\r\n  return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.sqrt = function () {\r\n  var r, c, t,\r\n    x = this,\r\n    Big = x.constructor,\r\n    s = x.s,\r\n    e = x.e,\r\n    half = new Big(0.5);\r\n\r\n  // Zero?\r\n  if (!x.c[0]) return new Big(x);\r\n\r\n  // Negative?\r\n  if (s < 0) throw Error(NAME + 'No square root');\r\n\r\n  // Estimate.\r\n  s = Math.sqrt(x + '');\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n  if (s === 0 || s === 1 / 0) {\r\n    c = x.c.join('');\r\n    if (!(c.length + e & 1)) c += '0';\r\n    s = Math.sqrt(c);\r\n    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n    r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n  } else {\r\n    r = new Big(s);\r\n  }\r\n\r\n  e = r.e + (Big.DP += 4);\r\n\r\n  // Newton-Raphson iteration.\r\n  do {\r\n    t = r;\r\n    r = half.times(t.plus(x.div(t)));\r\n  } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n  return round(r, Big.DP -= 4, Big.RM);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big times the value of Big y.\r\n */\r\nP.times = P.mul = function (y) {\r\n  var c,\r\n    x = this,\r\n    Big = x.constructor,\r\n    xc = x.c,\r\n    yc = (y = new Big(y)).c,\r\n    a = xc.length,\r\n    b = yc.length,\r\n    i = x.e,\r\n    j = y.e;\r\n\r\n  // Determine sign of result.\r\n  y.s = x.s == y.s ? 1 : -1;\r\n\r\n  // Return signed 0 if either 0.\r\n  if (!xc[0] || !yc[0]) return new Big(y.s * 0);\r\n\r\n  // Initialise exponent of result as x.e + y.e.\r\n  y.e = i + j;\r\n\r\n  // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n  if (a < b) {\r\n    c = xc;\r\n    xc = yc;\r\n    yc = c;\r\n    j = a;\r\n    a = b;\r\n    b = j;\r\n  }\r\n\r\n  // Initialise coefficient array of result with zeros.\r\n  for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n  // Multiply.\r\n\r\n  // i is initially xc.length.\r\n  for (i = b; i--;) {\r\n    b = 0;\r\n\r\n    // a is yc.length.\r\n    for (j = a + i; j > i;) {\r\n\r\n      // Current sum of products at this digit position, plus carry.\r\n      b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n      c[j--] = b % 10;\r\n\r\n      // carry\r\n      b = b / 10 | 0;\r\n    }\r\n\r\n    c[j] = (c[j] + b) % 10;\r\n  }\r\n\r\n  // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n  if (b) ++y.e;\r\n  else c.shift();\r\n\r\n  // Remove trailing zeros.\r\n  for (i = c.length; !c[--i];) c.pop();\r\n  y.c = c;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\r\n * places and rounded using Big.RM.\r\n *\r\n * dp? {number} Integer, 0 to MAX_DP inclusive.\r\n */\r\nP.toExponential = function (dp) {\r\n  return stringify(this, 1, dp, dp);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\r\n * places and rounded using Big.RM.\r\n *\r\n * dp? {number} Integer, 0 to MAX_DP inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n */\r\nP.toFixed = function (dp) {\r\n  return stringify(this, 2, dp, this.e + dp);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big rounded to sd significant digits using\r\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * sd {number} Integer, 1 to MAX_DP inclusive.\r\n */\r\nP.toPrecision = function (sd) {\r\n  return stringify(this, 3, sd, sd - 1);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Omit the sign for negative zero.\r\n */\r\nP.toString = function () {\r\n  return stringify(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Include the sign for negative zero.\r\n */\r\nP.valueOf = P.toJSON = function () {\r\n  return stringify(this, 4);\r\n};\r\n\r\n\r\n// Export\r\n\r\n\r\nexport var Big = _Big_();\r\n\r\nexport default Big;\r\n", "'use strict';\n\nconst baseEncodeTables = {\n  26: 'abcdefghijklmnopqrstuvwxyz',\n  32: '123456789abcdefghjkmnpqrstuvwxyz', // no 0lio\n  36: '0123456789abcdefghijklmnopqrstuvwxyz',\n  49: 'abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ', // no lIO\n  52: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  58: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ', // no 0lIO\n  62: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  64: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_',\n};\n\nfunction encodeBufferToBase(buffer, base) {\n  const encodeTable = baseEncodeTables[base];\n  if (!encodeTable) {\n    throw new Error('Unknown encoding base' + base);\n  }\n\n  const readLength = buffer.length;\n  const Big = require('big.js');\n\n  Big.RM = Big.DP = 0;\n  let b = new Big(0);\n\n  for (let i = readLength - 1; i >= 0; i--) {\n    b = b.times(256).plus(buffer[i]);\n  }\n\n  let output = '';\n  while (b.gt(0)) {\n    output = encodeTable[b.mod(base)] + output;\n    b = b.div(base);\n  }\n\n  Big.DP = 20;\n  Big.RM = 1;\n\n  return output;\n}\n\nfunction getHashDigest(buffer, hashType, digestType, maxLength) {\n  hashType = hashType || 'md4';\n  maxLength = maxLength || 9999;\n\n  const hash = require('crypto').createHash(hashType);\n\n  hash.update(buffer);\n\n  if (\n    digestType === 'base26' ||\n    digestType === 'base32' ||\n    digestType === 'base36' ||\n    digestType === 'base49' ||\n    digestType === 'base52' ||\n    digestType === 'base58' ||\n    digestType === 'base62' ||\n    digestType === 'base64'\n  ) {\n    return encodeBufferToBase(hash.digest(), digestType.substr(4)).substr(\n      0,\n      maxLength\n    );\n  } else {\n    return hash.digest(digestType || 'hex').substr(0, maxLength);\n  }\n}\n\nmodule.exports = getHashDigest;\n", "module.exports = [\n  \"\uD83C\uDC04\uFE0F\",\n  \"\uD83C\uDCCF\",\n  \"\uD83C\uDD70\uFE0F\",\n  \"\uD83C\uDD71\uFE0F\",\n  \"\uD83C\uDD7E\uFE0F\",\n  \"\uD83C\uDD7F\uFE0F\",\n  \"\uD83C\uDD8E\",\n  \"\uD83C\uDD91\",\n  \"\uD83C\uDD92\",\n  \"\uD83C\uDD93\",\n  \"\uD83C\uDD94\",\n  \"\uD83C\uDD95\",\n  \"\uD83C\uDD96\",\n  \"\uD83C\uDD97\",\n  \"\uD83C\uDD98\",\n  \"\uD83C\uDD99\",\n  \"\uD83C\uDD9A\",\n  \"\uD83C\uDDE6\uD83C\uDDE8\",\n  \"\uD83C\uDDE6\uD83C\uDDE9\",\n  \"\uD83C\uDDE6\uD83C\uDDEA\",\n  \"\uD83C\uDDE6\uD83C\uDDEB\",\n  \"\uD83C\uDDE6\uD83C\uDDEC\",\n  \"\uD83C\uDDE6\uD83C\uDDEE\",\n  \"\uD83C\uDDE6\uD83C\uDDF1\",\n  \"\uD83C\uDDE6\uD83C\uDDF2\",\n  \"\uD83C\uDDE6\uD83C\uDDF4\",\n  \"\uD83C\uDDE6\uD83C\uDDF6\",\n  \"\uD83C\uDDE6\uD83C\uDDF7\",\n  \"\uD83C\uDDE6\uD83C\uDDF8\",\n  \"\uD83C\uDDE6\uD83C\uDDF9\",\n  \"\uD83C\uDDE6\uD83C\uDDFA\",\n  \"\uD83C\uDDE6\uD83C\uDDFC\",\n  \"\uD83C\uDDE6\uD83C\uDDFD\",\n  \"\uD83C\uDDE6\uD83C\uDDFF\",\n  \"\uD83C\uDDE6\",\n  \"\uD83C\uDDE7\uD83C\uDDE6\",\n  \"\uD83C\uDDE7\uD83C\uDDE7\",\n  \"\uD83C\uDDE7\uD83C\uDDE9\",\n  \"\uD83C\uDDE7\uD83C\uDDEA\",\n  \"\uD83C\uDDE7\uD83C\uDDEB\",\n  \"\uD83C\uDDE7\uD83C\uDDEC\",\n  \"\uD83C\uDDE7\uD83C\uDDED\",\n  \"\uD83C\uDDE7\uD83C\uDDEE\",\n  \"\uD83C\uDDE7\uD83C\uDDEF\",\n  \"\uD83C\uDDE7\uD83C\uDDF1\",\n  \"\uD83C\uDDE7\uD83C\uDDF2\",\n  \"\uD83C\uDDE7\uD83C\uDDF3\",\n  \"\uD83C\uDDE7\uD83C\uDDF4\",\n  \"\uD83C\uDDE7\uD83C\uDDF6\",\n  \"\uD83C\uDDE7\uD83C\uDDF7\",\n  \"\uD83C\uDDE7\uD83C\uDDF8\",\n  \"\uD83C\uDDE7\uD83C\uDDF9\",\n  \"\uD83C\uDDE7\uD83C\uDDFB\",\n  \"\uD83C\uDDE7\uD83C\uDDFC\",\n  \"\uD83C\uDDE7\uD83C\uDDFE\",\n  \"\uD83C\uDDE7\uD83C\uDDFF\",\n  \"\uD83C\uDDE7\",\n  \"\uD83C\uDDE8\uD83C\uDDE6\",\n  \"\uD83C\uDDE8\uD83C\uDDE8\",\n  \"\uD83C\uDDE8\uD83C\uDDE9\",\n  \"\uD83C\uDDE8\uD83C\uDDEB\",\n  \"\uD83C\uDDE8\uD83C\uDDEC\",\n  \"\uD83C\uDDE8\uD83C\uDDED\",\n  \"\uD83C\uDDE8\uD83C\uDDEE\",\n  \"\uD83C\uDDE8\uD83C\uDDF0\",\n  \"\uD83C\uDDE8\uD83C\uDDF1\",\n  \"\uD83C\uDDE8\uD83C\uDDF2\",\n  \"\uD83C\uDDE8\uD83C\uDDF3\",\n  \"\uD83C\uDDE8\uD83C\uDDF4\",\n  \"\uD83C\uDDE8\uD83C\uDDF5\",\n  \"\uD83C\uDDE8\uD83C\uDDF7\",\n  \"\uD83C\uDDE8\uD83C\uDDFA\",\n  \"\uD83C\uDDE8\uD83C\uDDFB\",\n  \"\uD83C\uDDE8\uD83C\uDDFC\",\n  \"\uD83C\uDDE8\uD83C\uDDFD\",\n  \"\uD83C\uDDE8\uD83C\uDDFE\",\n  \"\uD83C\uDDE8\uD83C\uDDFF\",\n  \"\uD83C\uDDE8\",\n  \"\uD83C\uDDE9\uD83C\uDDEA\",\n  \"\uD83C\uDDE9\uD83C\uDDEC\",\n  \"\uD83C\uDDE9\uD83C\uDDEF\",\n  \"\uD83C\uDDE9\uD83C\uDDF0\",\n  \"\uD83C\uDDE9\uD83C\uDDF2\",\n  \"\uD83C\uDDE9\uD83C\uDDF4\",\n  \"\uD83C\uDDE9\uD83C\uDDFF\",\n  \"\uD83C\uDDE9\",\n  \"\uD83C\uDDEA\uD83C\uDDE6\",\n  \"\uD83C\uDDEA\uD83C\uDDE8\",\n  \"\uD83C\uDDEA\uD83C\uDDEA\",\n  \"\uD83C\uDDEA\uD83C\uDDEC\",\n  \"\uD83C\uDDEA\uD83C\uDDED\",\n  \"\uD83C\uDDEA\uD83C\uDDF7\",\n  \"\uD83C\uDDEA\uD83C\uDDF8\",\n  \"\uD83C\uDDEA\uD83C\uDDF9\",\n  \"\uD83C\uDDEA\uD83C\uDDFA\",\n  \"\uD83C\uDDEA\",\n  \"\uD83C\uDDEB\uD83C\uDDEE\",\n  \"\uD83C\uDDEB\uD83C\uDDEF\",\n  \"\uD83C\uDDEB\uD83C\uDDF0\",\n  \"\uD83C\uDDEB\uD83C\uDDF2\",\n  \"\uD83C\uDDEB\uD83C\uDDF4\",\n  \"\uD83C\uDDEB\uD83C\uDDF7\",\n  \"\uD83C\uDDEB\",\n  \"\uD83C\uDDEC\uD83C\uDDE6\",\n  \"\uD83C\uDDEC\uD83C\uDDE7\",\n  \"\uD83C\uDDEC\uD83C\uDDE9\",\n  \"\uD83C\uDDEC\uD83C\uDDEA\",\n  \"\uD83C\uDDEC\uD83C\uDDEB\",\n  \"\uD83C\uDDEC\uD83C\uDDEC\",\n  \"\uD83C\uDDEC\uD83C\uDDED\",\n  \"\uD83C\uDDEC\uD83C\uDDEE\",\n  \"\uD83C\uDDEC\uD83C\uDDF1\",\n  \"\uD83C\uDDEC\uD83C\uDDF2\",\n  \"\uD83C\uDDEC\uD83C\uDDF3\",\n  \"\uD83C\uDDEC\uD83C\uDDF5\",\n  \"\uD83C\uDDEC\uD83C\uDDF6\",\n  \"\uD83C\uDDEC\uD83C\uDDF7\",\n  \"\uD83C\uDDEC\uD83C\uDDF8\",\n  \"\uD83C\uDDEC\uD83C\uDDF9\",\n  \"\uD83C\uDDEC\uD83C\uDDFA\",\n  \"\uD83C\uDDEC\uD83C\uDDFC\",\n  \"\uD83C\uDDEC\uD83C\uDDFE\",\n  \"\uD83C\uDDEC\",\n  \"\uD83C\uDDED\uD83C\uDDF0\",\n  \"\uD83C\uDDED\uD83C\uDDF2\",\n  \"\uD83C\uDDED\uD83C\uDDF3\",\n  \"\uD83C\uDDED\uD83C\uDDF7\",\n  \"\uD83C\uDDED\uD83C\uDDF9\",\n  \"\uD83C\uDDED\uD83C\uDDFA\",\n  \"\uD83C\uDDED\",\n  \"\uD83C\uDDEE\uD83C\uDDE8\",\n  \"\uD83C\uDDEE\uD83C\uDDE9\",\n  \"\uD83C\uDDEE\uD83C\uDDEA\",\n  \"\uD83C\uDDEE\uD83C\uDDF1\",\n  \"\uD83C\uDDEE\uD83C\uDDF2\",\n  \"\uD83C\uDDEE\uD83C\uDDF3\",\n  \"\uD83C\uDDEE\uD83C\uDDF4\",\n  \"\uD83C\uDDEE\uD83C\uDDF6\",\n  \"\uD83C\uDDEE\uD83C\uDDF7\",\n  \"\uD83C\uDDEE\uD83C\uDDF8\",\n  \"\uD83C\uDDEE\uD83C\uDDF9\",\n  \"\uD83C\uDDEE\",\n  \"\uD83C\uDDEF\uD83C\uDDEA\",\n  \"\uD83C\uDDEF\uD83C\uDDF2\",\n  \"\uD83C\uDDEF\uD83C\uDDF4\",\n  \"\uD83C\uDDEF\uD83C\uDDF5\",\n  \"\uD83C\uDDEF\",\n  \"\uD83C\uDDF0\uD83C\uDDEA\",\n  \"\uD83C\uDDF0\uD83C\uDDEC\",\n  \"\uD83C\uDDF0\uD83C\uDDED\",\n  \"\uD83C\uDDF0\uD83C\uDDEE\",\n  \"\uD83C\uDDF0\uD83C\uDDF2\",\n  \"\uD83C\uDDF0\uD83C\uDDF3\",\n  \"\uD83C\uDDF0\uD83C\uDDF5\",\n  \"\uD83C\uDDF0\uD83C\uDDF7\",\n  \"\uD83C\uDDF0\uD83C\uDDFC\",\n  \"\uD83C\uDDF0\uD83C\uDDFE\",\n  \"\uD83C\uDDF0\uD83C\uDDFF\",\n  \"\uD83C\uDDF0\",\n  \"\uD83C\uDDF1\uD83C\uDDE6\",\n  \"\uD83C\uDDF1\uD83C\uDDE7\",\n  \"\uD83C\uDDF1\uD83C\uDDE8\",\n  \"\uD83C\uDDF1\uD83C\uDDEE\",\n  \"\uD83C\uDDF1\uD83C\uDDF0\",\n  \"\uD83C\uDDF1\uD83C\uDDF7\",\n  \"\uD83C\uDDF1\uD83C\uDDF8\",\n  \"\uD83C\uDDF1\uD83C\uDDF9\",\n  \"\uD83C\uDDF1\uD83C\uDDFA\",\n  \"\uD83C\uDDF1\uD83C\uDDFB\",\n  \"\uD83C\uDDF1\uD83C\uDDFE\",\n  \"\uD83C\uDDF1\",\n  \"\uD83C\uDDF2\uD83C\uDDE6\",\n  \"\uD83C\uDDF2\uD83C\uDDE8\",\n  \"\uD83C\uDDF2\uD83C\uDDE9\",\n  \"\uD83C\uDDF2\uD83C\uDDEA\",\n  \"\uD83C\uDDF2\uD83C\uDDEB\",\n  \"\uD83C\uDDF2\uD83C\uDDEC\",\n  \"\uD83C\uDDF2\uD83C\uDDED\",\n  \"\uD83C\uDDF2\uD83C\uDDF0\",\n  \"\uD83C\uDDF2\uD83C\uDDF1\",\n  \"\uD83C\uDDF2\uD83C\uDDF2\",\n  \"\uD83C\uDDF2\uD83C\uDDF3\",\n  \"\uD83C\uDDF2\uD83C\uDDF4\",\n  \"\uD83C\uDDF2\uD83C\uDDF5\",\n  \"\uD83C\uDDF2\uD83C\uDDF6\",\n  \"\uD83C\uDDF2\uD83C\uDDF7\",\n  \"\uD83C\uDDF2\uD83C\uDDF8\",\n  \"\uD83C\uDDF2\uD83C\uDDF9\",\n  \"\uD83C\uDDF2\uD83C\uDDFA\",\n  \"\uD83C\uDDF2\uD83C\uDDFB\",\n  \"\uD83C\uDDF2\uD83C\uDDFC\",\n  \"\uD83C\uDDF2\uD83C\uDDFD\",\n  \"\uD83C\uDDF2\uD83C\uDDFE\",\n  \"\uD83C\uDDF2\uD83C\uDDFF\",\n  \"\uD83C\uDDF2\",\n  \"\uD83C\uDDF3\uD83C\uDDE6\",\n  \"\uD83C\uDDF3\uD83C\uDDE8\",\n  \"\uD83C\uDDF3\uD83C\uDDEA\",\n  \"\uD83C\uDDF3\uD83C\uDDEB\",\n  \"\uD83C\uDDF3\uD83C\uDDEC\",\n  \"\uD83C\uDDF3\uD83C\uDDEE\",\n  \"\uD83C\uDDF3\uD83C\uDDF1\",\n  \"\uD83C\uDDF3\uD83C\uDDF4\",\n  \"\uD83C\uDDF3\uD83C\uDDF5\",\n  \"\uD83C\uDDF3\uD83C\uDDF7\",\n  \"\uD83C\uDDF3\uD83C\uDDFA\",\n  \"\uD83C\uDDF3\uD83C\uDDFF\",\n  \"\uD83C\uDDF3\",\n  \"\uD83C\uDDF4\uD83C\uDDF2\",\n  \"\uD83C\uDDF4\",\n  \"\uD83C\uDDF5\uD83C\uDDE6\",\n  \"\uD83C\uDDF5\uD83C\uDDEA\",\n  \"\uD83C\uDDF5\uD83C\uDDEB\",\n  \"\uD83C\uDDF5\uD83C\uDDEC\",\n  \"\uD83C\uDDF5\uD83C\uDDED\",\n  \"\uD83C\uDDF5\uD83C\uDDF0\",\n  \"\uD83C\uDDF5\uD83C\uDDF1\",\n  \"\uD83C\uDDF5\uD83C\uDDF2\",\n  \"\uD83C\uDDF5\uD83C\uDDF3\",\n  \"\uD83C\uDDF5\uD83C\uDDF7\",\n  \"\uD83C\uDDF5\uD83C\uDDF8\",\n  \"\uD83C\uDDF5\uD83C\uDDF9\",\n  \"\uD83C\uDDF5\uD83C\uDDFC\",\n  \"\uD83C\uDDF5\uD83C\uDDFE\",\n  \"\uD83C\uDDF5\",\n  \"\uD83C\uDDF6\uD83C\uDDE6\",\n  \"\uD83C\uDDF6\",\n  \"\uD83C\uDDF7\uD83C\uDDEA\",\n  \"\uD83C\uDDF7\uD83C\uDDF4\",\n  \"\uD83C\uDDF7\uD83C\uDDF8\",\n  \"\uD83C\uDDF7\uD83C\uDDFA\",\n  \"\uD83C\uDDF7\uD83C\uDDFC\",\n  \"\uD83C\uDDF7\",\n  \"\uD83C\uDDF8\uD83C\uDDE6\",\n  \"\uD83C\uDDF8\uD83C\uDDE7\",\n  \"\uD83C\uDDF8\uD83C\uDDE8\",\n  \"\uD83C\uDDF8\uD83C\uDDE9\",\n  \"\uD83C\uDDF8\uD83C\uDDEA\",\n  \"\uD83C\uDDF8\uD83C\uDDEC\",\n  \"\uD83C\uDDF8\uD83C\uDDED\",\n  \"\uD83C\uDDF8\uD83C\uDDEE\",\n  \"\uD83C\uDDF8\uD83C\uDDEF\",\n  \"\uD83C\uDDF8\uD83C\uDDF0\",\n  \"\uD83C\uDDF8\uD83C\uDDF1\",\n  \"\uD83C\uDDF8\uD83C\uDDF2\",\n  \"\uD83C\uDDF8\uD83C\uDDF3\",\n  \"\uD83C\uDDF8\uD83C\uDDF4\",\n  \"\uD83C\uDDF8\uD83C\uDDF7\",\n  \"\uD83C\uDDF8\uD83C\uDDF8\",\n  \"\uD83C\uDDF8\uD83C\uDDF9\",\n  \"\uD83C\uDDF8\uD83C\uDDFB\",\n  \"\uD83C\uDDF8\uD83C\uDDFD\",\n  \"\uD83C\uDDF8\uD83C\uDDFE\",\n  \"\uD83C\uDDF8\uD83C\uDDFF\",\n  \"\uD83C\uDDF8\",\n  \"\uD83C\uDDF9\uD83C\uDDE6\",\n  \"\uD83C\uDDF9\uD83C\uDDE8\",\n  \"\uD83C\uDDF9\uD83C\uDDE9\",\n  \"\uD83C\uDDF9\uD83C\uDDEB\",\n  \"\uD83C\uDDF9\uD83C\uDDEC\",\n  \"\uD83C\uDDF9\uD83C\uDDED\",\n  \"\uD83C\uDDF9\uD83C\uDDEF\",\n  \"\uD83C\uDDF9\uD83C\uDDF0\",\n  \"\uD83C\uDDF9\uD83C\uDDF1\",\n  \"\uD83C\uDDF9\uD83C\uDDF2\",\n  \"\uD83C\uDDF9\uD83C\uDDF3\",\n  \"\uD83C\uDDF9\uD83C\uDDF4\",\n  \"\uD83C\uDDF9\uD83C\uDDF7\",\n  \"\uD83C\uDDF9\uD83C\uDDF9\",\n  \"\uD83C\uDDF9\uD83C\uDDFB\",\n  \"\uD83C\uDDF9\uD83C\uDDFC\",\n  \"\uD83C\uDDF9\uD83C\uDDFF\",\n  \"\uD83C\uDDF9\",\n  \"\uD83C\uDDFA\uD83C\uDDE6\",\n  \"\uD83C\uDDFA\uD83C\uDDEC\",\n  \"\uD83C\uDDFA\uD83C\uDDF2\",\n  \"\uD83C\uDDFA\uD83C\uDDF3\",\n  \"\uD83C\uDDFA\uD83C\uDDF8\",\n  \"\uD83C\uDDFA\uD83C\uDDFE\",\n  \"\uD83C\uDDFA\uD83C\uDDFF\",\n  \"\uD83C\uDDFA\",\n  \"\uD83C\uDDFB\uD83C\uDDE6\",\n  \"\uD83C\uDDFB\uD83C\uDDE8\",\n  \"\uD83C\uDDFB\uD83C\uDDEA\",\n  \"\uD83C\uDDFB\uD83C\uDDEC\",\n  \"\uD83C\uDDFB\uD83C\uDDEE\",\n  \"\uD83C\uDDFB\uD83C\uDDF3\",\n  \"\uD83C\uDDFB\uD83C\uDDFA\",\n  \"\uD83C\uDDFB\",\n  \"\uD83C\uDDFC\uD83C\uDDEB\",\n  \"\uD83C\uDDFC\uD83C\uDDF8\",\n  \"\uD83C\uDDFC\",\n  \"\uD83C\uDDFD\uD83C\uDDF0\",\n  \"\uD83C\uDDFD\",\n  \"\uD83C\uDDFE\uD83C\uDDEA\",\n  \"\uD83C\uDDFE\uD83C\uDDF9\",\n  \"\uD83C\uDDFE\",\n  \"\uD83C\uDDFF\uD83C\uDDE6\",\n  \"\uD83C\uDDFF\uD83C\uDDF2\",\n  \"\uD83C\uDDFF\uD83C\uDDFC\",\n  \"\uD83C\uDDFF\",\n  \"\uD83C\uDE01\",\n  \"\uD83C\uDE02\uFE0F\",\n  \"\uD83C\uDE1A\uFE0F\",\n  \"\uD83C\uDE2F\uFE0F\",\n  \"\uD83C\uDE32\",\n  \"\uD83C\uDE33\",\n  \"\uD83C\uDE34\",\n  \"\uD83C\uDE35\",\n  \"\uD83C\uDE36\",\n  \"\uD83C\uDE37\uFE0F\",\n  \"\uD83C\uDE38\",\n  \"\uD83C\uDE39\",\n  \"\uD83C\uDE3A\",\n  \"\uD83C\uDE50\",\n  \"\uD83C\uDE51\",\n  \"\uD83C\uDF00\",\n  \"\uD83C\uDF01\",\n  \"\uD83C\uDF02\",\n  \"\uD83C\uDF03\",\n  \"\uD83C\uDF04\",\n  \"\uD83C\uDF05\",\n  \"\uD83C\uDF06\",\n  \"\uD83C\uDF07\",\n  \"\uD83C\uDF08\",\n  \"\uD83C\uDF09\",\n  \"\uD83C\uDF0A\",\n  \"\uD83C\uDF0B\",\n  \"\uD83C\uDF0C\",\n  \"\uD83C\uDF0D\",\n  \"\uD83C\uDF0E\",\n  \"\uD83C\uDF0F\",\n  \"\uD83C\uDF10\",\n  \"\uD83C\uDF11\",\n  \"\uD83C\uDF12\",\n  \"\uD83C\uDF13\",\n  \"\uD83C\uDF14\",\n  \"\uD83C\uDF15\",\n  \"\uD83C\uDF16\",\n  \"\uD83C\uDF17\",\n  \"\uD83C\uDF18\",\n  \"\uD83C\uDF19\",\n  \"\uD83C\uDF1A\",\n  \"\uD83C\uDF1B\",\n  \"\uD83C\uDF1C\",\n  \"\uD83C\uDF1D\",\n  \"\uD83C\uDF1E\",\n  \"\uD83C\uDF1F\",\n  \"\uD83C\uDF20\",\n  \"\uD83C\uDF21\uFE0F\",\n  \"\uD83C\uDF24\uFE0F\",\n  \"\uD83C\uDF25\uFE0F\",\n  \"\uD83C\uDF26\uFE0F\",\n  \"\uD83C\uDF27\uFE0F\",\n  \"\uD83C\uDF28\uFE0F\",\n  \"\uD83C\uDF29\uFE0F\",\n  \"\uD83C\uDF2A\uFE0F\",\n  \"\uD83C\uDF2B\uFE0F\",\n  \"\uD83C\uDF2C\uFE0F\",\n  \"\uD83C\uDF2D\",\n  \"\uD83C\uDF2E\",\n  \"\uD83C\uDF2F\",\n  \"\uD83C\uDF30\",\n  \"\uD83C\uDF31\",\n  \"\uD83C\uDF32\",\n  \"\uD83C\uDF33\",\n  \"\uD83C\uDF34\",\n  \"\uD83C\uDF35\",\n  \"\uD83C\uDF36\uFE0F\",\n  \"\uD83C\uDF37\",\n  \"\uD83C\uDF38\",\n  \"\uD83C\uDF39\",\n  \"\uD83C\uDF3A\",\n  \"\uD83C\uDF3B\",\n  \"\uD83C\uDF3C\",\n  \"\uD83C\uDF3D\",\n  \"\uD83C\uDF3E\",\n  \"\uD83C\uDF3F\",\n  \"\uD83C\uDF40\",\n  \"\uD83C\uDF41\",\n  \"\uD83C\uDF42\",\n  \"\uD83C\uDF43\",\n  \"\uD83C\uDF44\",\n  \"\uD83C\uDF45\",\n  \"\uD83C\uDF46\",\n  \"\uD83C\uDF47\",\n  \"\uD83C\uDF48\",\n  \"\uD83C\uDF49\",\n  \"\uD83C\uDF4A\",\n  \"\uD83C\uDF4B\",\n  \"\uD83C\uDF4C\",\n  \"\uD83C\uDF4D\",\n  \"\uD83C\uDF4E\",\n  \"\uD83C\uDF4F\",\n  \"\uD83C\uDF50\",\n  \"\uD83C\uDF51\",\n  \"\uD83C\uDF52\",\n  \"\uD83C\uDF53\",\n  \"\uD83C\uDF54\",\n  \"\uD83C\uDF55\",\n  \"\uD83C\uDF56\",\n  \"\uD83C\uDF57\",\n  \"\uD83C\uDF58\",\n  \"\uD83C\uDF59\",\n  \"\uD83C\uDF5A\",\n  \"\uD83C\uDF5B\",\n  \"\uD83C\uDF5C\",\n  \"\uD83C\uDF5D\",\n  \"\uD83C\uDF5E\",\n  \"\uD83C\uDF5F\",\n  \"\uD83C\uDF60\",\n  \"\uD83C\uDF61\",\n  \"\uD83C\uDF62\",\n  \"\uD83C\uDF63\",\n  \"\uD83C\uDF64\",\n  \"\uD83C\uDF65\",\n  \"\uD83C\uDF66\",\n  \"\uD83C\uDF67\",\n  \"\uD83C\uDF68\",\n  \"\uD83C\uDF69\",\n  \"\uD83C\uDF6A\",\n  \"\uD83C\uDF6B\",\n  \"\uD83C\uDF6C\",\n  \"\uD83C\uDF6D\",\n  \"\uD83C\uDF6E\",\n  \"\uD83C\uDF6F\",\n  \"\uD83C\uDF70\",\n  \"\uD83C\uDF71\",\n  \"\uD83C\uDF72\",\n  \"\uD83C\uDF73\",\n  \"\uD83C\uDF74\",\n  \"\uD83C\uDF75\",\n  \"\uD83C\uDF76\",\n  \"\uD83C\uDF77\",\n  \"\uD83C\uDF78\",\n  \"\uD83C\uDF79\",\n  \"\uD83C\uDF7A\",\n  \"\uD83C\uDF7B\",\n  \"\uD83C\uDF7C\",\n  \"\uD83C\uDF7D\uFE0F\",\n  \"\uD83C\uDF7E\",\n  \"\uD83C\uDF7F\",\n  \"\uD83C\uDF80\",\n  \"\uD83C\uDF81\",\n  \"\uD83C\uDF82\",\n  \"\uD83C\uDF83\",\n  \"\uD83C\uDF84\",\n  \"\uD83C\uDF85\uD83C\uDFFB\",\n  \"\uD83C\uDF85\uD83C\uDFFC\",\n  \"\uD83C\uDF85\uD83C\uDFFD\",\n  \"\uD83C\uDF85\uD83C\uDFFE\",\n  \"\uD83C\uDF85\uD83C\uDFFF\",\n  \"\uD83C\uDF85\",\n  \"\uD83C\uDF86\",\n  \"\uD83C\uDF87\",\n  \"\uD83C\uDF88\",\n  \"\uD83C\uDF89\",\n  \"\uD83C\uDF8A\",\n  \"\uD83C\uDF8B\",\n  \"\uD83C\uDF8C\",\n  \"\uD83C\uDF8D\",\n  \"\uD83C\uDF8E\",\n  \"\uD83C\uDF8F\",\n  \"\uD83C\uDF90\",\n  \"\uD83C\uDF91\",\n  \"\uD83C\uDF92\",\n  \"\uD83C\uDF93\",\n  \"\uD83C\uDF96\uFE0F\",\n  \"\uD83C\uDF97\uFE0F\",\n  \"\uD83C\uDF99\uFE0F\",\n  \"\uD83C\uDF9A\uFE0F\",\n  \"\uD83C\uDF9B\uFE0F\",\n  \"\uD83C\uDF9E\uFE0F\",\n  \"\uD83C\uDF9F\uFE0F\",\n  \"\uD83C\uDFA0\",\n  \"\uD83C\uDFA1\",\n  \"\uD83C\uDFA2\",\n  \"\uD83C\uDFA3\",\n  \"\uD83C\uDFA4\",\n  \"\uD83C\uDFA5\",\n  \"\uD83C\uDFA6\",\n  \"\uD83C\uDFA7\",\n  \"\uD83C\uDFA8\",\n  \"\uD83C\uDFA9\",\n  \"\uD83C\uDFAA\",\n  \"\uD83C\uDFAB\",\n  \"\uD83C\uDFAC\",\n  \"\uD83C\uDFAD\",\n  \"\uD83C\uDFAE\",\n  \"\uD83C\uDFAF\",\n  \"\uD83C\uDFB0\",\n  \"\uD83C\uDFB1\",\n  \"\uD83C\uDFB2\",\n  \"\uD83C\uDFB3\",\n  \"\uD83C\uDFB4\",\n  \"\uD83C\uDFB5\",\n  \"\uD83C\uDFB6\",\n  \"\uD83C\uDFB7\",\n  \"\uD83C\uDFB8\",\n  \"\uD83C\uDFB9\",\n  \"\uD83C\uDFBA\",\n  \"\uD83C\uDFBB\",\n  \"\uD83C\uDFBC\",\n  \"\uD83C\uDFBD\",\n  \"\uD83C\uDFBE\",\n  \"\uD83C\uDFBF\",\n  \"\uD83C\uDFC0\",\n  \"\uD83C\uDFC1\",\n  \"\uD83C\uDFC2\uD83C\uDFFB\",\n  \"\uD83C\uDFC2\uD83C\uDFFC\",\n  \"\uD83C\uDFC2\uD83C\uDFFD\",\n  \"\uD83C\uDFC2\uD83C\uDFFE\",\n  \"\uD83C\uDFC2\uD83C\uDFFF\",\n  \"\uD83C\uDFC2\",\n  \"\uD83C\uDFC3\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC3\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC3\uD83C\uDFFB\",\n  \"\uD83C\uDFC3\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC3\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC3\uD83C\uDFFC\",\n  \"\uD83C\uDFC3\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC3\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC3\uD83C\uDFFD\",\n  \"\uD83C\uDFC3\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC3\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC3\uD83C\uDFFE\",\n  \"\uD83C\uDFC3\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC3\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC3\uD83C\uDFFF\",\n  \"\uD83C\uDFC3\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC3\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC3\",\n  \"\uD83C\uDFC4\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC4\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC4\uD83C\uDFFB\",\n  \"\uD83C\uDFC4\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC4\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC4\uD83C\uDFFC\",\n  \"\uD83C\uDFC4\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC4\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC4\uD83C\uDFFD\",\n  \"\uD83C\uDFC4\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC4\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC4\uD83C\uDFFE\",\n  \"\uD83C\uDFC4\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC4\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC4\uD83C\uDFFF\",\n  \"\uD83C\uDFC4\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFC4\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFC4\",\n  \"\uD83C\uDFC5\",\n  \"\uD83C\uDFC6\",\n  \"\uD83C\uDFC7\uD83C\uDFFB\",\n  \"\uD83C\uDFC7\uD83C\uDFFC\",\n  \"\uD83C\uDFC7\uD83C\uDFFD\",\n  \"\uD83C\uDFC7\uD83C\uDFFE\",\n  \"\uD83C\uDFC7\uD83C\uDFFF\",\n  \"\uD83C\uDFC7\",\n  \"\uD83C\uDFC8\",\n  \"\uD83C\uDFC9\",\n  \"\uD83C\uDFCA\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCA\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCA\uD83C\uDFFB\",\n  \"\uD83C\uDFCA\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCA\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCA\uD83C\uDFFC\",\n  \"\uD83C\uDFCA\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCA\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCA\uD83C\uDFFD\",\n  \"\uD83C\uDFCA\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCA\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCA\uD83C\uDFFE\",\n  \"\uD83C\uDFCA\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCA\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCA\uD83C\uDFFF\",\n  \"\uD83C\uDFCA\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCA\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCA\",\n  \"\uD83C\uDFCB\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCB\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCB\uD83C\uDFFB\",\n  \"\uD83C\uDFCB\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCB\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCB\uD83C\uDFFC\",\n  \"\uD83C\uDFCB\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCB\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCB\uD83C\uDFFD\",\n  \"\uD83C\uDFCB\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCB\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCB\uD83C\uDFFE\",\n  \"\uD83C\uDFCB\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCB\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCB\uD83C\uDFFF\",\n  \"\uD83C\uDFCB\uFE0F\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCB\uFE0F\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCB\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFB\",\n  \"\uD83C\uDFCC\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFC\",\n  \"\uD83C\uDFCC\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFD\",\n  \"\uD83C\uDFCC\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFE\",\n  \"\uD83C\uDFCC\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCC\uD83C\uDFFF\",\n  \"\uD83C\uDFCC\uFE0F\u200D\u2640\uFE0F\",\n  \"\uD83C\uDFCC\uFE0F\u200D\u2642\uFE0F\",\n  \"\uD83C\uDFCC\uFE0F\",\n  \"\uD83C\uDFCD\uFE0F\",\n  \"\uD83C\uDFCE\uFE0F\",\n  \"\uD83C\uDFCF\",\n  \"\uD83C\uDFD0\",\n  \"\uD83C\uDFD1\",\n  \"\uD83C\uDFD2\",\n  \"\uD83C\uDFD3\",\n  \"\uD83C\uDFD4\uFE0F\",\n  \"\uD83C\uDFD5\uFE0F\",\n  \"\uD83C\uDFD6\uFE0F\",\n  \"\uD83C\uDFD7\uFE0F\",\n  \"\uD83C\uDFD8\uFE0F\",\n  \"\uD83C\uDFD9\uFE0F\",\n  \"\uD83C\uDFDA\uFE0F\",\n  \"\uD83C\uDFDB\uFE0F\",\n  \"\uD83C\uDFDC\uFE0F\",\n  \"\uD83C\uDFDD\uFE0F\",\n  \"\uD83C\uDFDE\uFE0F\",\n  \"\uD83C\uDFDF\uFE0F\",\n  \"\uD83C\uDFE0\",\n  \"\uD83C\uDFE1\",\n  \"\uD83C\uDFE2\",\n  \"\uD83C\uDFE3\",\n  \"\uD83C\uDFE4\",\n  \"\uD83C\uDFE5\",\n  \"\uD83C\uDFE6\",\n  \"\uD83C\uDFE7\",\n  \"\uD83C\uDFE8\",\n  \"\uD83C\uDFE9\",\n  \"\uD83C\uDFEA\",\n  \"\uD83C\uDFEB\",\n  \"\uD83C\uDFEC\",\n  \"\uD83C\uDFED\",\n  \"\uD83C\uDFEE\",\n  \"\uD83C\uDFEF\",\n  \"\uD83C\uDFF0\",\n  \"\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08\",\n  \"\uD83C\uDFF3\uFE0F\",\n  \"\uD83C\uDFF4\u200D\u2620\uFE0F\",\n  \"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67\uDB40\uDC7F\",\n  \"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74\uDB40\uDC7F\",\n  \"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73\uDB40\uDC7F\",\n  \"\uD83C\uDFF4\",\n  \"\uD83C\uDFF5\uFE0F\",\n  \"\uD83C\uDFF7\uFE0F\",\n  \"\uD83C\uDFF8\",\n  \"\uD83C\uDFF9\",\n  \"\uD83C\uDFFA\",\n  \"\uD83C\uDFFB\",\n  \"\uD83C\uDFFC\",\n  \"\uD83C\uDFFD\",\n  \"\uD83C\uDFFE\",\n  \"\uD83C\uDFFF\",\n  \"\uD83D\uDC00\",\n  \"\uD83D\uDC01\",\n  \"\uD83D\uDC02\",\n  \"\uD83D\uDC03\",\n  \"\uD83D\uDC04\",\n  \"\uD83D\uDC05\",\n  \"\uD83D\uDC06\",\n  \"\uD83D\uDC07\",\n  \"\uD83D\uDC08\",\n  \"\uD83D\uDC09\",\n  \"\uD83D\uDC0A\",\n  \"\uD83D\uDC0B\",\n  \"\uD83D\uDC0C\",\n  \"\uD83D\uDC0D\",\n  \"\uD83D\uDC0E\",\n  \"\uD83D\uDC0F\",\n  \"\uD83D\uDC10\",\n  \"\uD83D\uDC11\",\n  \"\uD83D\uDC12\",\n  \"\uD83D\uDC13\",\n  \"\uD83D\uDC14\",\n  \"\uD83D\uDC15\u200D\uD83E\uDDBA\",\n  \"\uD83D\uDC15\",\n  \"\uD83D\uDC16\",\n  \"\uD83D\uDC17\",\n  \"\uD83D\uDC18\",\n  \"\uD83D\uDC19\",\n  \"\uD83D\uDC1A\",\n  \"\uD83D\uDC1B\",\n  \"\uD83D\uDC1C\",\n  \"\uD83D\uDC1D\",\n  \"\uD83D\uDC1E\",\n  \"\uD83D\uDC1F\",\n  \"\uD83D\uDC20\",\n  \"\uD83D\uDC21\",\n  \"\uD83D\uDC22\",\n  \"\uD83D\uDC23\",\n  \"\uD83D\uDC24\",\n  \"\uD83D\uDC25\",\n  \"\uD83D\uDC26\",\n  \"\uD83D\uDC27\",\n  \"\uD83D\uDC28\",\n  \"\uD83D\uDC29\",\n  \"\uD83D\uDC2A\",\n  \"\uD83D\uDC2B\",\n  \"\uD83D\uDC2C\",\n  \"\uD83D\uDC2D\",\n  \"\uD83D\uDC2E\",\n  \"\uD83D\uDC2F\",\n  \"\uD83D\uDC30\",\n  \"\uD83D\uDC31\",\n  \"\uD83D\uDC32\",\n  \"\uD83D\uDC33\",\n  \"\uD83D\uDC34\",\n  \"\uD83D\uDC35\",\n  \"\uD83D\uDC36\",\n  \"\uD83D\uDC37\",\n  \"\uD83D\uDC38\",\n  \"\uD83D\uDC39\",\n  \"\uD83D\uDC3A\",\n  \"\uD83D\uDC3B\",\n  \"\uD83D\uDC3C\",\n  \"\uD83D\uDC3D\",\n  \"\uD83D\uDC3E\",\n  \"\uD83D\uDC3F\uFE0F\",\n  \"\uD83D\uDC40\",\n  \"\uD83D\uDC41\u200D\uD83D\uDDE8\",\n  \"\uD83D\uDC41\uFE0F\",\n  \"\uD83D\uDC42\uD83C\uDFFB\",\n  \"\uD83D\uDC42\uD83C\uDFFC\",\n  \"\uD83D\uDC42\uD83C\uDFFD\",\n  \"\uD83D\uDC42\uD83C\uDFFE\",\n  \"\uD83D\uDC42\uD83C\uDFFF\",\n  \"\uD83D\uDC42\",\n  \"\uD83D\uDC43\uD83C\uDFFB\",\n  \"\uD83D\uDC43\uD83C\uDFFC\",\n  \"\uD83D\uDC43\uD83C\uDFFD\",\n  \"\uD83D\uDC43\uD83C\uDFFE\",\n  \"\uD83D\uDC43\uD83C\uDFFF\",\n  \"\uD83D\uDC43\",\n  \"\uD83D\uDC44\",\n  \"\uD83D\uDC45\",\n  \"\uD83D\uDC46\uD83C\uDFFB\",\n  \"\uD83D\uDC46\uD83C\uDFFC\",\n  \"\uD83D\uDC46\uD83C\uDFFD\",\n  \"\uD83D\uDC46\uD83C\uDFFE\",\n  \"\uD83D\uDC46\uD83C\uDFFF\",\n  \"\uD83D\uDC46\",\n  \"\uD83D\uDC47\uD83C\uDFFB\",\n  \"\uD83D\uDC47\uD83C\uDFFC\",\n  \"\uD83D\uDC47\uD83C\uDFFD\",\n  \"\uD83D\uDC47\uD83C\uDFFE\",\n  \"\uD83D\uDC47\uD83C\uDFFF\",\n  \"\uD83D\uDC47\",\n  \"\uD83D\uDC48\uD83C\uDFFB\",\n  \"\uD83D\uDC48\uD83C\uDFFC\",\n  \"\uD83D\uDC48\uD83C\uDFFD\",\n  \"\uD83D\uDC48\uD83C\uDFFE\",\n  \"\uD83D\uDC48\uD83C\uDFFF\",\n  \"\uD83D\uDC48\",\n  \"\uD83D\uDC49\uD83C\uDFFB\",\n  \"\uD83D\uDC49\uD83C\uDFFC\",\n  \"\uD83D\uDC49\uD83C\uDFFD\",\n  \"\uD83D\uDC49\uD83C\uDFFE\",\n  \"\uD83D\uDC49\uD83C\uDFFF\",\n  \"\uD83D\uDC49\",\n  \"\uD83D\uDC4A\uD83C\uDFFB\",\n  \"\uD83D\uDC4A\uD83C\uDFFC\",\n  \"\uD83D\uDC4A\uD83C\uDFFD\",\n  \"\uD83D\uDC4A\uD83C\uDFFE\",\n  \"\uD83D\uDC4A\uD83C\uDFFF\",\n  \"\uD83D\uDC4A\",\n  \"\uD83D\uDC4B\uD83C\uDFFB\",\n  \"\uD83D\uDC4B\uD83C\uDFFC\",\n  \"\uD83D\uDC4B\uD83C\uDFFD\",\n  \"\uD83D\uDC4B\uD83C\uDFFE\",\n  \"\uD83D\uDC4B\uD83C\uDFFF\",\n  \"\uD83D\uDC4B\",\n  \"\uD83D\uDC4C\uD83C\uDFFB\",\n  \"\uD83D\uDC4C\uD83C\uDFFC\",\n  \"\uD83D\uDC4C\uD83C\uDFFD\",\n  \"\uD83D\uDC4C\uD83C\uDFFE\",\n  \"\uD83D\uDC4C\uD83C\uDFFF\",\n  \"\uD83D\uDC4C\",\n  \"\uD83D\uDC4D\uD83C\uDFFB\",\n  \"\uD83D\uDC4D\uD83C\uDFFC\",\n  \"\uD83D\uDC4D\uD83C\uDFFD\",\n  \"\uD83D\uDC4D\uD83C\uDFFE\",\n  \"\uD83D\uDC4D\uD83C\uDFFF\",\n  \"\uD83D\uDC4D\",\n  \"\uD83D\uDC4E\uD83C\uDFFB\",\n  \"\uD83D\uDC4E\uD83C\uDFFC\",\n  \"\uD83D\uDC4E\uD83C\uDFFD\",\n  \"\uD83D\uDC4E\uD83C\uDFFE\",\n  \"\uD83D\uDC4E\uD83C\uDFFF\",\n  \"\uD83D\uDC4E\",\n  \"\uD83D\uDC4F\uD83C\uDFFB\",\n  \"\uD83D\uDC4F\uD83C\uDFFC\",\n  \"\uD83D\uDC4F\uD83C\uDFFD\",\n  \"\uD83D\uDC4F\uD83C\uDFFE\",\n  \"\uD83D\uDC4F\uD83C\uDFFF\",\n  \"\uD83D\uDC4F\",\n  \"\uD83D\uDC50\uD83C\uDFFB\",\n  \"\uD83D\uDC50\uD83C\uDFFC\",\n  \"\uD83D\uDC50\uD83C\uDFFD\",\n  \"\uD83D\uDC50\uD83C\uDFFE\",\n  \"\uD83D\uDC50\uD83C\uDFFF\",\n  \"\uD83D\uDC50\",\n  \"\uD83D\uDC51\",\n  \"\uD83D\uDC52\",\n  \"\uD83D\uDC53\",\n  \"\uD83D\uDC54\",\n  \"\uD83D\uDC55\",\n  \"\uD83D\uDC56\",\n  \"\uD83D\uDC57\",\n  \"\uD83D\uDC58\",\n  \"\uD83D\uDC59\",\n  \"\uD83D\uDC5A\",\n  \"\uD83D\uDC5B\",\n  \"\uD83D\uDC5C\",\n  \"\uD83D\uDC5D\",\n  \"\uD83D\uDC5E\",\n  \"\uD83D\uDC5F\",\n  \"\uD83D\uDC60\",\n  \"\uD83D\uDC61\",\n  \"\uD83D\uDC62\",\n  \"\uD83D\uDC63\",\n  \"\uD83D\uDC64\",\n  \"\uD83D\uDC65\",\n  \"\uD83D\uDC66\uD83C\uDFFB\",\n  \"\uD83D\uDC66\uD83C\uDFFC\",\n  \"\uD83D\uDC66\uD83C\uDFFD\",\n  \"\uD83D\uDC66\uD83C\uDFFE\",\n  \"\uD83D\uDC66\uD83C\uDFFF\",\n  \"\uD83D\uDC66\",\n  \"\uD83D\uDC67\uD83C\uDFFB\",\n  \"\uD83D\uDC67\uD83C\uDFFC\",\n  \"\uD83D\uDC67\uD83C\uDFFD\",\n  \"\uD83D\uDC67\uD83C\uDFFE\",\n  \"\uD83D\uDC67\uD83C\uDFFF\",\n  \"\uD83D\uDC67\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFB\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFB\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFC\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFC\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFC\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFD\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFD\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFC\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFD\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFE\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFE\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFC\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFD\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFE\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFF\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC68\uD83C\uDFFF\",\n  \"\uD83D\uDC68\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC68\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC68\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC68\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC68\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC68\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC68\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC66\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC67\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC67\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC66\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC67\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67\",\n  \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\",\n  \"\uD83D\uDC68\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC68\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC68\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC68\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC68\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC68\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC68\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC68\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC68\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC68\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC68\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC68\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC68\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC68\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC68\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC68\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC68\u200D\u2764\uFE0F\u200D\uD83D\uDC68\",\n  \"\uD83D\uDC68\u200D\u2764\uFE0F\u200D\uD83D\uDC8B\u200D\uD83D\uDC68\",\n  \"\uD83D\uDC68\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFC\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFD\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFE\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFF\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFB\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFB\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFD\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFE\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFF\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69\uD83C\uDFFB\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFC\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFC\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFC\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFE\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFF\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69\uD83C\uDFFB\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69\uD83C\uDFFC\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFD\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFD\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFC\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFD\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFF\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69\uD83C\uDFFB\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69\uD83C\uDFFC\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69\uD83C\uDFFD\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFE\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFE\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFC\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFD\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFE\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC69\uD83C\uDFFB\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC69\uD83C\uDFFC\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC69\uD83C\uDFFD\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83D\uDC69\uD83C\uDFFE\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFF\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC69\uD83C\uDFFF\",\n  \"\uD83D\uDC69\u200D\uD83C\uDF3E\",\n  \"\uD83D\uDC69\u200D\uD83C\uDF73\",\n  \"\uD83D\uDC69\u200D\uD83C\uDF93\",\n  \"\uD83D\uDC69\u200D\uD83C\uDFA4\",\n  \"\uD83D\uDC69\u200D\uD83C\uDFA8\",\n  \"\uD83D\uDC69\u200D\uD83C\uDFEB\",\n  \"\uD83D\uDC69\u200D\uD83C\uDFED\",\n  \"\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC69\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67\",\n  \"\uD83D\uDC69\u200D\uD83D\uDC67\",\n  \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66\",\n  \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67\",\n  \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\",\n  \"\uD83D\uDC69\u200D\uD83D\uDCBB\",\n  \"\uD83D\uDC69\u200D\uD83D\uDCBC\",\n  \"\uD83D\uDC69\u200D\uD83D\uDD27\",\n  \"\uD83D\uDC69\u200D\uD83D\uDD2C\",\n  \"\uD83D\uDC69\u200D\uD83D\uDE80\",\n  \"\uD83D\uDC69\u200D\uD83D\uDE92\",\n  \"\uD83D\uDC69\u200D\uD83E\uDDAF\",\n  \"\uD83D\uDC69\u200D\uD83E\uDDB0\",\n  \"\uD83D\uDC69\u200D\uD83E\uDDB1\",\n  \"\uD83D\uDC69\u200D\uD83E\uDDB2\",\n  \"\uD83D\uDC69\u200D\uD83E\uDDB3\",\n  \"\uD83D\uDC69\u200D\uD83E\uDDBC\",\n  \"\uD83D\uDC69\u200D\uD83E\uDDBD\",\n  \"\uD83D\uDC69\u200D\u2695\uFE0F\",\n  \"\uD83D\uDC69\u200D\u2696\uFE0F\",\n  \"\uD83D\uDC69\u200D\u2708\uFE0F\",\n  \"\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC68\",\n  \"\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69\",\n  \"\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC8B\u200D\uD83D\uDC68\",\n  \"\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC8B\u200D\uD83D\uDC69\",\n  \"\uD83D\uDC69\",\n  \"\uD83D\uDC6A\",\n  \"\uD83D\uDC6B\uD83C\uDFFB\",\n  \"\uD83D\uDC6B\uD83C\uDFFC\",\n  \"\uD83D\uDC6B\uD83C\uDFFD\",\n  \"\uD83D\uDC6B\uD83C\uDFFE\",\n  \"\uD83D\uDC6B\uD83C\uDFFF\",\n  \"\uD83D\uDC6B\",\n  \"\uD83D\uDC6C\uD83C\uDFFB\",\n  \"\uD83D\uDC6C\uD83C\uDFFC\",\n  \"\uD83D\uDC6C\uD83C\uDFFD\",\n  \"\uD83D\uDC6C\uD83C\uDFFE\",\n  \"\uD83D\uDC6C\uD83C\uDFFF\",\n  \"\uD83D\uDC6C\",\n  \"\uD83D\uDC6D\uD83C\uDFFB\",\n  \"\uD83D\uDC6D\uD83C\uDFFC\",\n  \"\uD83D\uDC6D\uD83C\uDFFD\",\n  \"\uD83D\uDC6D\uD83C\uDFFE\",\n  \"\uD83D\uDC6D\uD83C\uDFFF\",\n  \"\uD83D\uDC6D\",\n  \"\uD83D\uDC6E\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC6E\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC6E\uD83C\uDFFB\",\n  \"\uD83D\uDC6E\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC6E\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC6E\uD83C\uDFFC\",\n  \"\uD83D\uDC6E\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC6E\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC6E\uD83C\uDFFD\",\n  \"\uD83D\uDC6E\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC6E\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC6E\uD83C\uDFFE\",\n  \"\uD83D\uDC6E\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC6E\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC6E\uD83C\uDFFF\",\n  \"\uD83D\uDC6E\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC6E\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC6E\",\n  \"\uD83D\uDC6F\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC6F\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC6F\",\n  \"\uD83D\uDC70\uD83C\uDFFB\",\n  \"\uD83D\uDC70\uD83C\uDFFC\",\n  \"\uD83D\uDC70\uD83C\uDFFD\",\n  \"\uD83D\uDC70\uD83C\uDFFE\",\n  \"\uD83D\uDC70\uD83C\uDFFF\",\n  \"\uD83D\uDC70\",\n  \"\uD83D\uDC71\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC71\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC71\uD83C\uDFFB\",\n  \"\uD83D\uDC71\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC71\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC71\uD83C\uDFFC\",\n  \"\uD83D\uDC71\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC71\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC71\uD83C\uDFFD\",\n  \"\uD83D\uDC71\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC71\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC71\uD83C\uDFFE\",\n  \"\uD83D\uDC71\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC71\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC71\uD83C\uDFFF\",\n  \"\uD83D\uDC71\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC71\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC71\",\n  \"\uD83D\uDC72\uD83C\uDFFB\",\n  \"\uD83D\uDC72\uD83C\uDFFC\",\n  \"\uD83D\uDC72\uD83C\uDFFD\",\n  \"\uD83D\uDC72\uD83C\uDFFE\",\n  \"\uD83D\uDC72\uD83C\uDFFF\",\n  \"\uD83D\uDC72\",\n  \"\uD83D\uDC73\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC73\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC73\uD83C\uDFFB\",\n  \"\uD83D\uDC73\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC73\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC73\uD83C\uDFFC\",\n  \"\uD83D\uDC73\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC73\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC73\uD83C\uDFFD\",\n  \"\uD83D\uDC73\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC73\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC73\uD83C\uDFFE\",\n  \"\uD83D\uDC73\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC73\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC73\uD83C\uDFFF\",\n  \"\uD83D\uDC73\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC73\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC73\",\n  \"\uD83D\uDC74\uD83C\uDFFB\",\n  \"\uD83D\uDC74\uD83C\uDFFC\",\n  \"\uD83D\uDC74\uD83C\uDFFD\",\n  \"\uD83D\uDC74\uD83C\uDFFE\",\n  \"\uD83D\uDC74\uD83C\uDFFF\",\n  \"\uD83D\uDC74\",\n  \"\uD83D\uDC75\uD83C\uDFFB\",\n  \"\uD83D\uDC75\uD83C\uDFFC\",\n  \"\uD83D\uDC75\uD83C\uDFFD\",\n  \"\uD83D\uDC75\uD83C\uDFFE\",\n  \"\uD83D\uDC75\uD83C\uDFFF\",\n  \"\uD83D\uDC75\",\n  \"\uD83D\uDC76\uD83C\uDFFB\",\n  \"\uD83D\uDC76\uD83C\uDFFC\",\n  \"\uD83D\uDC76\uD83C\uDFFD\",\n  \"\uD83D\uDC76\uD83C\uDFFE\",\n  \"\uD83D\uDC76\uD83C\uDFFF\",\n  \"\uD83D\uDC76\",\n  \"\uD83D\uDC77\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC77\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC77\uD83C\uDFFB\",\n  \"\uD83D\uDC77\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC77\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC77\uD83C\uDFFC\",\n  \"\uD83D\uDC77\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC77\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC77\uD83C\uDFFD\",\n  \"\uD83D\uDC77\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC77\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC77\uD83C\uDFFE\",\n  \"\uD83D\uDC77\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC77\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC77\uD83C\uDFFF\",\n  \"\uD83D\uDC77\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC77\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC77\",\n  \"\uD83D\uDC78\uD83C\uDFFB\",\n  \"\uD83D\uDC78\uD83C\uDFFC\",\n  \"\uD83D\uDC78\uD83C\uDFFD\",\n  \"\uD83D\uDC78\uD83C\uDFFE\",\n  \"\uD83D\uDC78\uD83C\uDFFF\",\n  \"\uD83D\uDC78\",\n  \"\uD83D\uDC79\",\n  \"\uD83D\uDC7A\",\n  \"\uD83D\uDC7B\",\n  \"\uD83D\uDC7C\uD83C\uDFFB\",\n  \"\uD83D\uDC7C\uD83C\uDFFC\",\n  \"\uD83D\uDC7C\uD83C\uDFFD\",\n  \"\uD83D\uDC7C\uD83C\uDFFE\",\n  \"\uD83D\uDC7C\uD83C\uDFFF\",\n  \"\uD83D\uDC7C\",\n  \"\uD83D\uDC7D\",\n  \"\uD83D\uDC7E\",\n  \"\uD83D\uDC7F\",\n  \"\uD83D\uDC80\",\n  \"\uD83D\uDC81\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC81\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC81\uD83C\uDFFB\",\n  \"\uD83D\uDC81\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC81\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC81\uD83C\uDFFC\",\n  \"\uD83D\uDC81\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC81\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC81\uD83C\uDFFD\",\n  \"\uD83D\uDC81\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC81\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC81\uD83C\uDFFE\",\n  \"\uD83D\uDC81\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC81\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC81\uD83C\uDFFF\",\n  \"\uD83D\uDC81\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC81\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC81\",\n  \"\uD83D\uDC82\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC82\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC82\uD83C\uDFFB\",\n  \"\uD83D\uDC82\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC82\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC82\uD83C\uDFFC\",\n  \"\uD83D\uDC82\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC82\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC82\uD83C\uDFFD\",\n  \"\uD83D\uDC82\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC82\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC82\uD83C\uDFFE\",\n  \"\uD83D\uDC82\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC82\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC82\uD83C\uDFFF\",\n  \"\uD83D\uDC82\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC82\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC82\",\n  \"\uD83D\uDC83\uD83C\uDFFB\",\n  \"\uD83D\uDC83\uD83C\uDFFC\",\n  \"\uD83D\uDC83\uD83C\uDFFD\",\n  \"\uD83D\uDC83\uD83C\uDFFE\",\n  \"\uD83D\uDC83\uD83C\uDFFF\",\n  \"\uD83D\uDC83\",\n  \"\uD83D\uDC84\",\n  \"\uD83D\uDC85\uD83C\uDFFB\",\n  \"\uD83D\uDC85\uD83C\uDFFC\",\n  \"\uD83D\uDC85\uD83C\uDFFD\",\n  \"\uD83D\uDC85\uD83C\uDFFE\",\n  \"\uD83D\uDC85\uD83C\uDFFF\",\n  \"\uD83D\uDC85\",\n  \"\uD83D\uDC86\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC86\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC86\uD83C\uDFFB\",\n  \"\uD83D\uDC86\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC86\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC86\uD83C\uDFFC\",\n  \"\uD83D\uDC86\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC86\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC86\uD83C\uDFFD\",\n  \"\uD83D\uDC86\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC86\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC86\uD83C\uDFFE\",\n  \"\uD83D\uDC86\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC86\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC86\uD83C\uDFFF\",\n  \"\uD83D\uDC86\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC86\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC86\",\n  \"\uD83D\uDC87\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC87\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC87\uD83C\uDFFB\",\n  \"\uD83D\uDC87\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC87\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC87\uD83C\uDFFC\",\n  \"\uD83D\uDC87\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC87\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC87\uD83C\uDFFD\",\n  \"\uD83D\uDC87\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC87\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC87\uD83C\uDFFE\",\n  \"\uD83D\uDC87\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC87\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC87\uD83C\uDFFF\",\n  \"\uD83D\uDC87\u200D\u2640\uFE0F\",\n  \"\uD83D\uDC87\u200D\u2642\uFE0F\",\n  \"\uD83D\uDC87\",\n  \"\uD83D\uDC88\",\n  \"\uD83D\uDC89\",\n  \"\uD83D\uDC8A\",\n  \"\uD83D\uDC8B\",\n  \"\uD83D\uDC8C\",\n  \"\uD83D\uDC8D\",\n  \"\uD83D\uDC8E\",\n  \"\uD83D\uDC8F\",\n  \"\uD83D\uDC90\",\n  \"\uD83D\uDC91\",\n  \"\uD83D\uDC92\",\n  \"\uD83D\uDC93\",\n  \"\uD83D\uDC94\",\n  \"\uD83D\uDC95\",\n  \"\uD83D\uDC96\",\n  \"\uD83D\uDC97\",\n  \"\uD83D\uDC98\",\n  \"\uD83D\uDC99\",\n  \"\uD83D\uDC9A\",\n  \"\uD83D\uDC9B\",\n  \"\uD83D\uDC9C\",\n  \"\uD83D\uDC9D\",\n  \"\uD83D\uDC9E\",\n  \"\uD83D\uDC9F\",\n  \"\uD83D\uDCA0\",\n  \"\uD83D\uDCA1\",\n  \"\uD83D\uDCA2\",\n  \"\uD83D\uDCA3\",\n  \"\uD83D\uDCA4\",\n  \"\uD83D\uDCA5\",\n  \"\uD83D\uDCA6\",\n  \"\uD83D\uDCA7\",\n  \"\uD83D\uDCA8\",\n  \"\uD83D\uDCA9\",\n  \"\uD83D\uDCAA\uD83C\uDFFB\",\n  \"\uD83D\uDCAA\uD83C\uDFFC\",\n  \"\uD83D\uDCAA\uD83C\uDFFD\",\n  \"\uD83D\uDCAA\uD83C\uDFFE\",\n  \"\uD83D\uDCAA\uD83C\uDFFF\",\n  \"\uD83D\uDCAA\",\n  \"\uD83D\uDCAB\",\n  \"\uD83D\uDCAC\",\n  \"\uD83D\uDCAD\",\n  \"\uD83D\uDCAE\",\n  \"\uD83D\uDCAF\",\n  \"\uD83D\uDCB0\",\n  \"\uD83D\uDCB1\",\n  \"\uD83D\uDCB2\",\n  \"\uD83D\uDCB3\",\n  \"\uD83D\uDCB4\",\n  \"\uD83D\uDCB5\",\n  \"\uD83D\uDCB6\",\n  \"\uD83D\uDCB7\",\n  \"\uD83D\uDCB8\",\n  \"\uD83D\uDCB9\",\n  \"\uD83D\uDCBA\",\n  \"\uD83D\uDCBB\",\n  \"\uD83D\uDCBC\",\n  \"\uD83D\uDCBD\",\n  \"\uD83D\uDCBE\",\n  \"\uD83D\uDCBF\",\n  \"\uD83D\uDCC0\",\n  \"\uD83D\uDCC1\",\n  \"\uD83D\uDCC2\",\n  \"\uD83D\uDCC3\",\n  \"\uD83D\uDCC4\",\n  \"\uD83D\uDCC5\",\n  \"\uD83D\uDCC6\",\n  \"\uD83D\uDCC7\",\n  \"\uD83D\uDCC8\",\n  \"\uD83D\uDCC9\",\n  \"\uD83D\uDCCA\",\n  \"\uD83D\uDCCB\",\n  \"\uD83D\uDCCC\",\n  \"\uD83D\uDCCD\",\n  \"\uD83D\uDCCE\",\n  \"\uD83D\uDCCF\",\n  \"\uD83D\uDCD0\",\n  \"\uD83D\uDCD1\",\n  \"\uD83D\uDCD2\",\n  \"\uD83D\uDCD3\",\n  \"\uD83D\uDCD4\",\n  \"\uD83D\uDCD5\",\n  \"\uD83D\uDCD6\",\n  \"\uD83D\uDCD7\",\n  \"\uD83D\uDCD8\",\n  \"\uD83D\uDCD9\",\n  \"\uD83D\uDCDA\",\n  \"\uD83D\uDCDB\",\n  \"\uD83D\uDCDC\",\n  \"\uD83D\uDCDD\",\n  \"\uD83D\uDCDE\",\n  \"\uD83D\uDCDF\",\n  \"\uD83D\uDCE0\",\n  \"\uD83D\uDCE1\",\n  \"\uD83D\uDCE2\",\n  \"\uD83D\uDCE3\",\n  \"\uD83D\uDCE4\",\n  \"\uD83D\uDCE5\",\n  \"\uD83D\uDCE6\",\n  \"\uD83D\uDCE7\",\n  \"\uD83D\uDCE8\",\n  \"\uD83D\uDCE9\",\n  \"\uD83D\uDCEA\",\n  \"\uD83D\uDCEB\",\n  \"\uD83D\uDCEC\",\n  \"\uD83D\uDCED\",\n  \"\uD83D\uDCEE\",\n  \"\uD83D\uDCEF\",\n  \"\uD83D\uDCF0\",\n  \"\uD83D\uDCF1\",\n  \"\uD83D\uDCF2\",\n  \"\uD83D\uDCF3\",\n  \"\uD83D\uDCF4\",\n  \"\uD83D\uDCF5\",\n  \"\uD83D\uDCF6\",\n  \"\uD83D\uDCF7\",\n  \"\uD83D\uDCF8\",\n  \"\uD83D\uDCF9\",\n  \"\uD83D\uDCFA\",\n  \"\uD83D\uDCFB\",\n  \"\uD83D\uDCFC\",\n  \"\uD83D\uDCFD\uFE0F\",\n  \"\uD83D\uDCFF\",\n  \"\uD83D\uDD00\",\n  \"\uD83D\uDD01\",\n  \"\uD83D\uDD02\",\n  \"\uD83D\uDD03\",\n  \"\uD83D\uDD04\",\n  \"\uD83D\uDD05\",\n  \"\uD83D\uDD06\",\n  \"\uD83D\uDD07\",\n  \"\uD83D\uDD08\",\n  \"\uD83D\uDD09\",\n  \"\uD83D\uDD0A\",\n  \"\uD83D\uDD0B\",\n  \"\uD83D\uDD0C\",\n  \"\uD83D\uDD0D\",\n  \"\uD83D\uDD0E\",\n  \"\uD83D\uDD0F\",\n  \"\uD83D\uDD10\",\n  \"\uD83D\uDD11\",\n  \"\uD83D\uDD12\",\n  \"\uD83D\uDD13\",\n  \"\uD83D\uDD14\",\n  \"\uD83D\uDD15\",\n  \"\uD83D\uDD16\",\n  \"\uD83D\uDD17\",\n  \"\uD83D\uDD18\",\n  \"\uD83D\uDD19\",\n  \"\uD83D\uDD1A\",\n  \"\uD83D\uDD1B\",\n  \"\uD83D\uDD1C\",\n  \"\uD83D\uDD1D\",\n  \"\uD83D\uDD1E\",\n  \"\uD83D\uDD1F\",\n  \"\uD83D\uDD20\",\n  \"\uD83D\uDD21\",\n  \"\uD83D\uDD22\",\n  \"\uD83D\uDD23\",\n  \"\uD83D\uDD24\",\n  \"\uD83D\uDD25\",\n  \"\uD83D\uDD26\",\n  \"\uD83D\uDD27\",\n  \"\uD83D\uDD28\",\n  \"\uD83D\uDD29\",\n  \"\uD83D\uDD2A\",\n  \"\uD83D\uDD2B\",\n  \"\uD83D\uDD2C\",\n  \"\uD83D\uDD2D\",\n  \"\uD83D\uDD2E\",\n  \"\uD83D\uDD2F\",\n  \"\uD83D\uDD30\",\n  \"\uD83D\uDD31\",\n  \"\uD83D\uDD32\",\n  \"\uD83D\uDD33\",\n  \"\uD83D\uDD34\",\n  \"\uD83D\uDD35\",\n  \"\uD83D\uDD36\",\n  \"\uD83D\uDD37\",\n  \"\uD83D\uDD38\",\n  \"\uD83D\uDD39\",\n  \"\uD83D\uDD3A\",\n  \"\uD83D\uDD3B\",\n  \"\uD83D\uDD3C\",\n  \"\uD83D\uDD3D\",\n  \"\uD83D\uDD49\uFE0F\",\n  \"\uD83D\uDD4A\uFE0F\",\n  \"\uD83D\uDD4B\",\n  \"\uD83D\uDD4C\",\n  \"\uD83D\uDD4D\",\n  \"\uD83D\uDD4E\",\n  \"\uD83D\uDD50\",\n  \"\uD83D\uDD51\",\n  \"\uD83D\uDD52\",\n  \"\uD83D\uDD53\",\n  \"\uD83D\uDD54\",\n  \"\uD83D\uDD55\",\n  \"\uD83D\uDD56\",\n  \"\uD83D\uDD57\",\n  \"\uD83D\uDD58\",\n  \"\uD83D\uDD59\",\n  \"\uD83D\uDD5A\",\n  \"\uD83D\uDD5B\",\n  \"\uD83D\uDD5C\",\n  \"\uD83D\uDD5D\",\n  \"\uD83D\uDD5E\",\n  \"\uD83D\uDD5F\",\n  \"\uD83D\uDD60\",\n  \"\uD83D\uDD61\",\n  \"\uD83D\uDD62\",\n  \"\uD83D\uDD63\",\n  \"\uD83D\uDD64\",\n  \"\uD83D\uDD65\",\n  \"\uD83D\uDD66\",\n  \"\uD83D\uDD67\",\n  \"\uD83D\uDD6F\uFE0F\",\n  \"\uD83D\uDD70\uFE0F\",\n  \"\uD83D\uDD73\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFB\",\n  \"\uD83D\uDD74\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFC\",\n  \"\uD83D\uDD74\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFD\",\n  \"\uD83D\uDD74\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFE\",\n  \"\uD83D\uDD74\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD74\uD83C\uDFFF\",\n  \"\uD83D\uDD74\uFE0F\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD74\uFE0F\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD74\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFB\",\n  \"\uD83D\uDD75\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFC\",\n  \"\uD83D\uDD75\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFD\",\n  \"\uD83D\uDD75\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFE\",\n  \"\uD83D\uDD75\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD75\uD83C\uDFFF\",\n  \"\uD83D\uDD75\uFE0F\u200D\u2640\uFE0F\",\n  \"\uD83D\uDD75\uFE0F\u200D\u2642\uFE0F\",\n  \"\uD83D\uDD75\uFE0F\",\n  \"\uD83D\uDD76\uFE0F\",\n  \"\uD83D\uDD77\uFE0F\",\n  \"\uD83D\uDD78\uFE0F\",\n  \"\uD83D\uDD79\uFE0F\",\n  \"\uD83D\uDD7A\uD83C\uDFFB\",\n  \"\uD83D\uDD7A\uD83C\uDFFC\",\n  \"\uD83D\uDD7A\uD83C\uDFFD\",\n  \"\uD83D\uDD7A\uD83C\uDFFE\",\n  \"\uD83D\uDD7A\uD83C\uDFFF\",\n  \"\uD83D\uDD7A\",\n  \"\uD83D\uDD87\uFE0F\",\n  \"\uD83D\uDD8A\uFE0F\",\n  \"\uD83D\uDD8B\uFE0F\",\n  \"\uD83D\uDD8C\uFE0F\",\n  \"\uD83D\uDD8D\uFE0F\",\n  \"\uD83D\uDD90\uD83C\uDFFB\",\n  \"\uD83D\uDD90\uD83C\uDFFC\",\n  \"\uD83D\uDD90\uD83C\uDFFD\",\n  \"\uD83D\uDD90\uD83C\uDFFE\",\n  \"\uD83D\uDD90\uD83C\uDFFF\",\n  \"\uD83D\uDD90\uFE0F\",\n  \"\uD83D\uDD95\uD83C\uDFFB\",\n  \"\uD83D\uDD95\uD83C\uDFFC\",\n  \"\uD83D\uDD95\uD83C\uDFFD\",\n  \"\uD83D\uDD95\uD83C\uDFFE\",\n  \"\uD83D\uDD95\uD83C\uDFFF\",\n  \"\uD83D\uDD95\",\n  \"\uD83D\uDD96\uD83C\uDFFB\",\n  \"\uD83D\uDD96\uD83C\uDFFC\",\n  \"\uD83D\uDD96\uD83C\uDFFD\",\n  \"\uD83D\uDD96\uD83C\uDFFE\",\n  \"\uD83D\uDD96\uD83C\uDFFF\",\n  \"\uD83D\uDD96\",\n  \"\uD83D\uDDA4\",\n  \"\uD83D\uDDA5\uFE0F\",\n  \"\uD83D\uDDA8\uFE0F\",\n  \"\uD83D\uDDB1\uFE0F\",\n  \"\uD83D\uDDB2\uFE0F\",\n  \"\uD83D\uDDBC\uFE0F\",\n  \"\uD83D\uDDC2\uFE0F\",\n  \"\uD83D\uDDC3\uFE0F\",\n  \"\uD83D\uDDC4\uFE0F\",\n  \"\uD83D\uDDD1\uFE0F\",\n  \"\uD83D\uDDD2\uFE0F\",\n  \"\uD83D\uDDD3\uFE0F\",\n  \"\uD83D\uDDDC\uFE0F\",\n  \"\uD83D\uDDDD\uFE0F\",\n  \"\uD83D\uDDDE\uFE0F\",\n  \"\uD83D\uDDE1\uFE0F\",\n  \"\uD83D\uDDE3\uFE0F\",\n  \"\uD83D\uDDE8\uFE0F\",\n  \"\uD83D\uDDEF\uFE0F\",\n  \"\uD83D\uDDF3\uFE0F\",\n  \"\uD83D\uDDFA\uFE0F\",\n  \"\uD83D\uDDFB\",\n  \"\uD83D\uDDFC\",\n  \"\uD83D\uDDFD\",\n  \"\uD83D\uDDFE\",\n  \"\uD83D\uDDFF\",\n  \"\uD83D\uDE00\",\n  \"\uD83D\uDE01\",\n  \"\uD83D\uDE02\",\n  \"\uD83D\uDE03\",\n  \"\uD83D\uDE04\",\n  \"\uD83D\uDE05\",\n  \"\uD83D\uDE06\",\n  \"\uD83D\uDE07\",\n  \"\uD83D\uDE08\",\n  \"\uD83D\uDE09\",\n  \"\uD83D\uDE0A\",\n  \"\uD83D\uDE0B\",\n  \"\uD83D\uDE0C\",\n  \"\uD83D\uDE0D\",\n  \"\uD83D\uDE0E\",\n  \"\uD83D\uDE0F\",\n  \"\uD83D\uDE10\",\n  \"\uD83D\uDE11\",\n  \"\uD83D\uDE12\",\n  \"\uD83D\uDE13\",\n  \"\uD83D\uDE14\",\n  \"\uD83D\uDE15\",\n  \"\uD83D\uDE16\",\n  \"\uD83D\uDE17\",\n  \"\uD83D\uDE18\",\n  \"\uD83D\uDE19\",\n  \"\uD83D\uDE1A\",\n  \"\uD83D\uDE1B\",\n  \"\uD83D\uDE1C\",\n  \"\uD83D\uDE1D\",\n  \"\uD83D\uDE1E\",\n  \"\uD83D\uDE1F\",\n  \"\uD83D\uDE20\",\n  \"\uD83D\uDE21\",\n  \"\uD83D\uDE22\",\n  \"\uD83D\uDE23\",\n  \"\uD83D\uDE24\",\n  \"\uD83D\uDE25\",\n  \"\uD83D\uDE26\",\n  \"\uD83D\uDE27\",\n  \"\uD83D\uDE28\",\n  \"\uD83D\uDE29\",\n  \"\uD83D\uDE2A\",\n  \"\uD83D\uDE2B\",\n  \"\uD83D\uDE2C\",\n  \"\uD83D\uDE2D\",\n  \"\uD83D\uDE2E\",\n  \"\uD83D\uDE2F\",\n  \"\uD83D\uDE30\",\n  \"\uD83D\uDE31\",\n  \"\uD83D\uDE32\",\n  \"\uD83D\uDE33\",\n  \"\uD83D\uDE34\",\n  \"\uD83D\uDE35\",\n  \"\uD83D\uDE36\",\n  \"\uD83D\uDE37\",\n  \"\uD83D\uDE38\",\n  \"\uD83D\uDE39\",\n  \"\uD83D\uDE3A\",\n  \"\uD83D\uDE3B\",\n  \"\uD83D\uDE3C\",\n  \"\uD83D\uDE3D\",\n  \"\uD83D\uDE3E\",\n  \"\uD83D\uDE3F\",\n  \"\uD83D\uDE40\",\n  \"\uD83D\uDE41\",\n  \"\uD83D\uDE42\",\n  \"\uD83D\uDE43\",\n  \"\uD83D\uDE44\",\n  \"\uD83D\uDE45\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE45\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE45\uD83C\uDFFB\",\n  \"\uD83D\uDE45\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE45\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE45\uD83C\uDFFC\",\n  \"\uD83D\uDE45\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE45\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE45\uD83C\uDFFD\",\n  \"\uD83D\uDE45\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE45\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE45\uD83C\uDFFE\",\n  \"\uD83D\uDE45\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE45\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE45\uD83C\uDFFF\",\n  \"\uD83D\uDE45\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE45\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE45\",\n  \"\uD83D\uDE46\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE46\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE46\uD83C\uDFFB\",\n  \"\uD83D\uDE46\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE46\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE46\uD83C\uDFFC\",\n  \"\uD83D\uDE46\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE46\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE46\uD83C\uDFFD\",\n  \"\uD83D\uDE46\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE46\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE46\uD83C\uDFFE\",\n  \"\uD83D\uDE46\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE46\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE46\uD83C\uDFFF\",\n  \"\uD83D\uDE46\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE46\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE46\",\n  \"\uD83D\uDE47\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE47\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE47\uD83C\uDFFB\",\n  \"\uD83D\uDE47\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE47\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE47\uD83C\uDFFC\",\n  \"\uD83D\uDE47\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE47\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE47\uD83C\uDFFD\",\n  \"\uD83D\uDE47\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE47\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE47\uD83C\uDFFE\",\n  \"\uD83D\uDE47\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE47\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE47\uD83C\uDFFF\",\n  \"\uD83D\uDE47\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE47\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE47\",\n  \"\uD83D\uDE48\",\n  \"\uD83D\uDE49\",\n  \"\uD83D\uDE4A\",\n  \"\uD83D\uDE4B\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4B\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4B\uD83C\uDFFB\",\n  \"\uD83D\uDE4B\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4B\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4B\uD83C\uDFFC\",\n  \"\uD83D\uDE4B\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4B\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4B\uD83C\uDFFD\",\n  \"\uD83D\uDE4B\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4B\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4B\uD83C\uDFFE\",\n  \"\uD83D\uDE4B\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4B\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4B\uD83C\uDFFF\",\n  \"\uD83D\uDE4B\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4B\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4B\",\n  \"\uD83D\uDE4C\uD83C\uDFFB\",\n  \"\uD83D\uDE4C\uD83C\uDFFC\",\n  \"\uD83D\uDE4C\uD83C\uDFFD\",\n  \"\uD83D\uDE4C\uD83C\uDFFE\",\n  \"\uD83D\uDE4C\uD83C\uDFFF\",\n  \"\uD83D\uDE4C\",\n  \"\uD83D\uDE4D\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4D\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4D\uD83C\uDFFB\",\n  \"\uD83D\uDE4D\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4D\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4D\uD83C\uDFFC\",\n  \"\uD83D\uDE4D\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4D\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4D\uD83C\uDFFD\",\n  \"\uD83D\uDE4D\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4D\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4D\uD83C\uDFFE\",\n  \"\uD83D\uDE4D\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4D\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4D\uD83C\uDFFF\",\n  \"\uD83D\uDE4D\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4D\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4D\",\n  \"\uD83D\uDE4E\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4E\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4E\uD83C\uDFFB\",\n  \"\uD83D\uDE4E\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4E\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4E\uD83C\uDFFC\",\n  \"\uD83D\uDE4E\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4E\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4E\uD83C\uDFFD\",\n  \"\uD83D\uDE4E\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4E\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4E\uD83C\uDFFE\",\n  \"\uD83D\uDE4E\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4E\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4E\uD83C\uDFFF\",\n  \"\uD83D\uDE4E\u200D\u2640\uFE0F\",\n  \"\uD83D\uDE4E\u200D\u2642\uFE0F\",\n  \"\uD83D\uDE4E\",\n  \"\uD83D\uDE4F\uD83C\uDFFB\",\n  \"\uD83D\uDE4F\uD83C\uDFFC\",\n  \"\uD83D\uDE4F\uD83C\uDFFD\",\n  \"\uD83D\uDE4F\uD83C\uDFFE\",\n  \"\uD83D\uDE4F\uD83C\uDFFF\",\n  \"\uD83D\uDE4F\",\n  \"\uD83D\uDE80\",\n  \"\uD83D\uDE81\",\n  \"\uD83D\uDE82\",\n  \"\uD83D\uDE83\",\n  \"\uD83D\uDE84\",\n  \"\uD83D\uDE85\",\n  \"\uD83D\uDE86\",\n  \"\uD83D\uDE87\",\n  \"\uD83D\uDE88\",\n  \"\uD83D\uDE89\",\n  \"\uD83D\uDE8A\",\n  \"\uD83D\uDE8B\",\n  \"\uD83D\uDE8C\",\n  \"\uD83D\uDE8D\",\n  \"\uD83D\uDE8E\",\n  \"\uD83D\uDE8F\",\n  \"\uD83D\uDE90\",\n  \"\uD83D\uDE91\",\n  \"\uD83D\uDE92\",\n  \"\uD83D\uDE93\",\n  \"\uD83D\uDE94\",\n  \"\uD83D\uDE95\",\n  \"\uD83D\uDE96\",\n  \"\uD83D\uDE97\",\n  \"\uD83D\uDE98\",\n  \"\uD83D\uDE99\",\n  \"\uD83D\uDE9A\",\n  \"\uD83D\uDE9B\",\n  \"\uD83D\uDE9C\",\n  \"\uD83D\uDE9D\",\n  \"\uD83D\uDE9E\",\n  \"\uD83D\uDE9F\",\n  \"\uD83D\uDEA0\",\n  \"\uD83D\uDEA1\",\n  \"\uD83D\uDEA2\",\n  \"\uD83D\uDEA3\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEA3\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEA3\uD83C\uDFFB\",\n  \"\uD83D\uDEA3\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEA3\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEA3\uD83C\uDFFC\",\n  \"\uD83D\uDEA3\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEA3\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEA3\uD83C\uDFFD\",\n  \"\uD83D\uDEA3\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEA3\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEA3\uD83C\uDFFE\",\n  \"\uD83D\uDEA3\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEA3\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEA3\uD83C\uDFFF\",\n  \"\uD83D\uDEA3\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEA3\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEA3\",\n  \"\uD83D\uDEA4\",\n  \"\uD83D\uDEA5\",\n  \"\uD83D\uDEA6\",\n  \"\uD83D\uDEA7\",\n  \"\uD83D\uDEA8\",\n  \"\uD83D\uDEA9\",\n  \"\uD83D\uDEAA\",\n  \"\uD83D\uDEAB\",\n  \"\uD83D\uDEAC\",\n  \"\uD83D\uDEAD\",\n  \"\uD83D\uDEAE\",\n  \"\uD83D\uDEAF\",\n  \"\uD83D\uDEB0\",\n  \"\uD83D\uDEB1\",\n  \"\uD83D\uDEB2\",\n  \"\uD83D\uDEB3\",\n  \"\uD83D\uDEB4\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB4\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB4\uD83C\uDFFB\",\n  \"\uD83D\uDEB4\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB4\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB4\uD83C\uDFFC\",\n  \"\uD83D\uDEB4\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB4\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB4\uD83C\uDFFD\",\n  \"\uD83D\uDEB4\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB4\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB4\uD83C\uDFFE\",\n  \"\uD83D\uDEB4\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB4\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB4\uD83C\uDFFF\",\n  \"\uD83D\uDEB4\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB4\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB4\",\n  \"\uD83D\uDEB5\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB5\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB5\uD83C\uDFFB\",\n  \"\uD83D\uDEB5\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB5\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB5\uD83C\uDFFC\",\n  \"\uD83D\uDEB5\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB5\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB5\uD83C\uDFFD\",\n  \"\uD83D\uDEB5\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB5\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB5\uD83C\uDFFE\",\n  \"\uD83D\uDEB5\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB5\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB5\uD83C\uDFFF\",\n  \"\uD83D\uDEB5\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB5\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB5\",\n  \"\uD83D\uDEB6\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB6\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB6\uD83C\uDFFB\",\n  \"\uD83D\uDEB6\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB6\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB6\uD83C\uDFFC\",\n  \"\uD83D\uDEB6\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB6\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB6\uD83C\uDFFD\",\n  \"\uD83D\uDEB6\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB6\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB6\uD83C\uDFFE\",\n  \"\uD83D\uDEB6\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB6\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB6\uD83C\uDFFF\",\n  \"\uD83D\uDEB6\u200D\u2640\uFE0F\",\n  \"\uD83D\uDEB6\u200D\u2642\uFE0F\",\n  \"\uD83D\uDEB6\",\n  \"\uD83D\uDEB7\",\n  \"\uD83D\uDEB8\",\n  \"\uD83D\uDEB9\",\n  \"\uD83D\uDEBA\",\n  \"\uD83D\uDEBB\",\n  \"\uD83D\uDEBC\",\n  \"\uD83D\uDEBD\",\n  \"\uD83D\uDEBE\",\n  \"\uD83D\uDEBF\",\n  \"\uD83D\uDEC0\uD83C\uDFFB\",\n  \"\uD83D\uDEC0\uD83C\uDFFC\",\n  \"\uD83D\uDEC0\uD83C\uDFFD\",\n  \"\uD83D\uDEC0\uD83C\uDFFE\",\n  \"\uD83D\uDEC0\uD83C\uDFFF\",\n  \"\uD83D\uDEC0\",\n  \"\uD83D\uDEC1\",\n  \"\uD83D\uDEC2\",\n  \"\uD83D\uDEC3\",\n  \"\uD83D\uDEC4\",\n  \"\uD83D\uDEC5\",\n  \"\uD83D\uDECB\uFE0F\",\n  \"\uD83D\uDECC\uD83C\uDFFB\",\n  \"\uD83D\uDECC\uD83C\uDFFC\",\n  \"\uD83D\uDECC\uD83C\uDFFD\",\n  \"\uD83D\uDECC\uD83C\uDFFE\",\n  \"\uD83D\uDECC\uD83C\uDFFF\",\n  \"\uD83D\uDECC\",\n  \"\uD83D\uDECD\uFE0F\",\n  \"\uD83D\uDECE\uFE0F\",\n  \"\uD83D\uDECF\uFE0F\",\n  \"\uD83D\uDED0\",\n  \"\uD83D\uDED1\",\n  \"\uD83D\uDED2\",\n  \"\uD83D\uDED5\",\n  \"\uD83D\uDEE0\uFE0F\",\n  \"\uD83D\uDEE1\uFE0F\",\n  \"\uD83D\uDEE2\uFE0F\",\n  \"\uD83D\uDEE3\uFE0F\",\n  \"\uD83D\uDEE4\uFE0F\",\n  \"\uD83D\uDEE5\uFE0F\",\n  \"\uD83D\uDEE9\uFE0F\",\n  \"\uD83D\uDEEB\",\n  \"\uD83D\uDEEC\",\n  \"\uD83D\uDEF0\uFE0F\",\n  \"\uD83D\uDEF3\uFE0F\",\n  \"\uD83D\uDEF4\",\n  \"\uD83D\uDEF5\",\n  \"\uD83D\uDEF6\",\n  \"\uD83D\uDEF7\",\n  \"\uD83D\uDEF8\",\n  \"\uD83D\uDEF9\",\n  \"\uD83D\uDEFA\",\n  \"\uD83D\uDFE0\",\n  \"\uD83D\uDFE1\",\n  \"\uD83D\uDFE2\",\n  \"\uD83D\uDFE3\",\n  \"\uD83D\uDFE4\",\n  \"\uD83D\uDFE5\",\n  \"\uD83D\uDFE6\",\n  \"\uD83D\uDFE7\",\n  \"\uD83D\uDFE8\",\n  \"\uD83D\uDFE9\",\n  \"\uD83D\uDFEA\",\n  \"\uD83D\uDFEB\",\n  \"\uD83E\uDD0D\",\n  \"\uD83E\uDD0E\",\n  \"\uD83E\uDD0F\uD83C\uDFFB\",\n  \"\uD83E\uDD0F\uD83C\uDFFC\",\n  \"\uD83E\uDD0F\uD83C\uDFFD\",\n  \"\uD83E\uDD0F\uD83C\uDFFE\",\n  \"\uD83E\uDD0F\uD83C\uDFFF\",\n  \"\uD83E\uDD0F\",\n  \"\uD83E\uDD10\",\n  \"\uD83E\uDD11\",\n  \"\uD83E\uDD12\",\n  \"\uD83E\uDD13\",\n  \"\uD83E\uDD14\",\n  \"\uD83E\uDD15\",\n  \"\uD83E\uDD16\",\n  \"\uD83E\uDD17\",\n  \"\uD83E\uDD18\uD83C\uDFFB\",\n  \"\uD83E\uDD18\uD83C\uDFFC\",\n  \"\uD83E\uDD18\uD83C\uDFFD\",\n  \"\uD83E\uDD18\uD83C\uDFFE\",\n  \"\uD83E\uDD18\uD83C\uDFFF\",\n  \"\uD83E\uDD18\",\n  \"\uD83E\uDD19\uD83C\uDFFB\",\n  \"\uD83E\uDD19\uD83C\uDFFC\",\n  \"\uD83E\uDD19\uD83C\uDFFD\",\n  \"\uD83E\uDD19\uD83C\uDFFE\",\n  \"\uD83E\uDD19\uD83C\uDFFF\",\n  \"\uD83E\uDD19\",\n  \"\uD83E\uDD1A\uD83C\uDFFB\",\n  \"\uD83E\uDD1A\uD83C\uDFFC\",\n  \"\uD83E\uDD1A\uD83C\uDFFD\",\n  \"\uD83E\uDD1A\uD83C\uDFFE\",\n  \"\uD83E\uDD1A\uD83C\uDFFF\",\n  \"\uD83E\uDD1A\",\n  \"\uD83E\uDD1B\uD83C\uDFFB\",\n  \"\uD83E\uDD1B\uD83C\uDFFC\",\n  \"\uD83E\uDD1B\uD83C\uDFFD\",\n  \"\uD83E\uDD1B\uD83C\uDFFE\",\n  \"\uD83E\uDD1B\uD83C\uDFFF\",\n  \"\uD83E\uDD1B\",\n  \"\uD83E\uDD1C\uD83C\uDFFB\",\n  \"\uD83E\uDD1C\uD83C\uDFFC\",\n  \"\uD83E\uDD1C\uD83C\uDFFD\",\n  \"\uD83E\uDD1C\uD83C\uDFFE\",\n  \"\uD83E\uDD1C\uD83C\uDFFF\",\n  \"\uD83E\uDD1C\",\n  \"\uD83E\uDD1D\",\n  \"\uD83E\uDD1E\uD83C\uDFFB\",\n  \"\uD83E\uDD1E\uD83C\uDFFC\",\n  \"\uD83E\uDD1E\uD83C\uDFFD\",\n  \"\uD83E\uDD1E\uD83C\uDFFE\",\n  \"\uD83E\uDD1E\uD83C\uDFFF\",\n  \"\uD83E\uDD1E\",\n  \"\uD83E\uDD1F\uD83C\uDFFB\",\n  \"\uD83E\uDD1F\uD83C\uDFFC\",\n  \"\uD83E\uDD1F\uD83C\uDFFD\",\n  \"\uD83E\uDD1F\uD83C\uDFFE\",\n  \"\uD83E\uDD1F\uD83C\uDFFF\",\n  \"\uD83E\uDD1F\",\n  \"\uD83E\uDD20\",\n  \"\uD83E\uDD21\",\n  \"\uD83E\uDD22\",\n  \"\uD83E\uDD23\",\n  \"\uD83E\uDD24\",\n  \"\uD83E\uDD25\",\n  \"\uD83E\uDD26\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD26\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD26\uD83C\uDFFB\",\n  \"\uD83E\uDD26\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD26\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD26\uD83C\uDFFC\",\n  \"\uD83E\uDD26\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD26\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD26\uD83C\uDFFD\",\n  \"\uD83E\uDD26\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD26\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD26\uD83C\uDFFE\",\n  \"\uD83E\uDD26\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD26\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD26\uD83C\uDFFF\",\n  \"\uD83E\uDD26\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD26\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD26\",\n  \"\uD83E\uDD27\",\n  \"\uD83E\uDD28\",\n  \"\uD83E\uDD29\",\n  \"\uD83E\uDD2A\",\n  \"\uD83E\uDD2B\",\n  \"\uD83E\uDD2C\",\n  \"\uD83E\uDD2D\",\n  \"\uD83E\uDD2E\",\n  \"\uD83E\uDD2F\",\n  \"\uD83E\uDD30\uD83C\uDFFB\",\n  \"\uD83E\uDD30\uD83C\uDFFC\",\n  \"\uD83E\uDD30\uD83C\uDFFD\",\n  \"\uD83E\uDD30\uD83C\uDFFE\",\n  \"\uD83E\uDD30\uD83C\uDFFF\",\n  \"\uD83E\uDD30\",\n  \"\uD83E\uDD31\uD83C\uDFFB\",\n  \"\uD83E\uDD31\uD83C\uDFFC\",\n  \"\uD83E\uDD31\uD83C\uDFFD\",\n  \"\uD83E\uDD31\uD83C\uDFFE\",\n  \"\uD83E\uDD31\uD83C\uDFFF\",\n  \"\uD83E\uDD31\",\n  \"\uD83E\uDD32\uD83C\uDFFB\",\n  \"\uD83E\uDD32\uD83C\uDFFC\",\n  \"\uD83E\uDD32\uD83C\uDFFD\",\n  \"\uD83E\uDD32\uD83C\uDFFE\",\n  \"\uD83E\uDD32\uD83C\uDFFF\",\n  \"\uD83E\uDD32\",\n  \"\uD83E\uDD33\uD83C\uDFFB\",\n  \"\uD83E\uDD33\uD83C\uDFFC\",\n  \"\uD83E\uDD33\uD83C\uDFFD\",\n  \"\uD83E\uDD33\uD83C\uDFFE\",\n  \"\uD83E\uDD33\uD83C\uDFFF\",\n  \"\uD83E\uDD33\",\n  \"\uD83E\uDD34\uD83C\uDFFB\",\n  \"\uD83E\uDD34\uD83C\uDFFC\",\n  \"\uD83E\uDD34\uD83C\uDFFD\",\n  \"\uD83E\uDD34\uD83C\uDFFE\",\n  \"\uD83E\uDD34\uD83C\uDFFF\",\n  \"\uD83E\uDD34\",\n  \"\uD83E\uDD35\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD35\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD35\uD83C\uDFFB\",\n  \"\uD83E\uDD35\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD35\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD35\uD83C\uDFFC\",\n  \"\uD83E\uDD35\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD35\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD35\uD83C\uDFFD\",\n  \"\uD83E\uDD35\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD35\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD35\uD83C\uDFFE\",\n  \"\uD83E\uDD35\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD35\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD35\uD83C\uDFFF\",\n  \"\uD83E\uDD35\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD35\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD35\",\n  \"\uD83E\uDD36\uD83C\uDFFB\",\n  \"\uD83E\uDD36\uD83C\uDFFC\",\n  \"\uD83E\uDD36\uD83C\uDFFD\",\n  \"\uD83E\uDD36\uD83C\uDFFE\",\n  \"\uD83E\uDD36\uD83C\uDFFF\",\n  \"\uD83E\uDD36\",\n  \"\uD83E\uDD37\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD37\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD37\uD83C\uDFFB\",\n  \"\uD83E\uDD37\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD37\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD37\uD83C\uDFFC\",\n  \"\uD83E\uDD37\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD37\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD37\uD83C\uDFFD\",\n  \"\uD83E\uDD37\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD37\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD37\uD83C\uDFFE\",\n  \"\uD83E\uDD37\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD37\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD37\uD83C\uDFFF\",\n  \"\uD83E\uDD37\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD37\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD37\",\n  \"\uD83E\uDD38\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD38\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD38\uD83C\uDFFB\",\n  \"\uD83E\uDD38\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD38\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD38\uD83C\uDFFC\",\n  \"\uD83E\uDD38\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD38\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD38\uD83C\uDFFD\",\n  \"\uD83E\uDD38\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD38\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD38\uD83C\uDFFE\",\n  \"\uD83E\uDD38\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD38\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD38\uD83C\uDFFF\",\n  \"\uD83E\uDD38\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD38\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD38\",\n  \"\uD83E\uDD39\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD39\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD39\uD83C\uDFFB\",\n  \"\uD83E\uDD39\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD39\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD39\uD83C\uDFFC\",\n  \"\uD83E\uDD39\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD39\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD39\uD83C\uDFFD\",\n  \"\uD83E\uDD39\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD39\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD39\uD83C\uDFFE\",\n  \"\uD83E\uDD39\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD39\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD39\uD83C\uDFFF\",\n  \"\uD83E\uDD39\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD39\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD39\",\n  \"\uD83E\uDD3A\",\n  \"\uD83E\uDD3C\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3C\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3C\",\n  \"\uD83E\uDD3D\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3D\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3D\uD83C\uDFFB\",\n  \"\uD83E\uDD3D\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3D\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3D\uD83C\uDFFC\",\n  \"\uD83E\uDD3D\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3D\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3D\uD83C\uDFFD\",\n  \"\uD83E\uDD3D\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3D\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3D\uD83C\uDFFE\",\n  \"\uD83E\uDD3D\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3D\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3D\uD83C\uDFFF\",\n  \"\uD83E\uDD3D\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3D\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3D\",\n  \"\uD83E\uDD3E\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3E\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3E\uD83C\uDFFB\",\n  \"\uD83E\uDD3E\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3E\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3E\uD83C\uDFFC\",\n  \"\uD83E\uDD3E\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3E\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3E\uD83C\uDFFD\",\n  \"\uD83E\uDD3E\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3E\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3E\uD83C\uDFFE\",\n  \"\uD83E\uDD3E\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3E\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3E\uD83C\uDFFF\",\n  \"\uD83E\uDD3E\u200D\u2640\uFE0F\",\n  \"\uD83E\uDD3E\u200D\u2642\uFE0F\",\n  \"\uD83E\uDD3E\",\n  \"\uD83E\uDD3F\",\n  \"\uD83E\uDD40\",\n  \"\uD83E\uDD41\",\n  \"\uD83E\uDD42\",\n  \"\uD83E\uDD43\",\n  \"\uD83E\uDD44\",\n  \"\uD83E\uDD45\",\n  \"\uD83E\uDD47\",\n  \"\uD83E\uDD48\",\n  \"\uD83E\uDD49\",\n  \"\uD83E\uDD4A\",\n  \"\uD83E\uDD4B\",\n  \"\uD83E\uDD4C\",\n  \"\uD83E\uDD4D\",\n  \"\uD83E\uDD4E\",\n  \"\uD83E\uDD4F\",\n  \"\uD83E\uDD50\",\n  \"\uD83E\uDD51\",\n  \"\uD83E\uDD52\",\n  \"\uD83E\uDD53\",\n  \"\uD83E\uDD54\",\n  \"\uD83E\uDD55\",\n  \"\uD83E\uDD56\",\n  \"\uD83E\uDD57\",\n  \"\uD83E\uDD58\",\n  \"\uD83E\uDD59\",\n  \"\uD83E\uDD5A\",\n  \"\uD83E\uDD5B\",\n  \"\uD83E\uDD5C\",\n  \"\uD83E\uDD5D\",\n  \"\uD83E\uDD5E\",\n  \"\uD83E\uDD5F\",\n  \"\uD83E\uDD60\",\n  \"\uD83E\uDD61\",\n  \"\uD83E\uDD62\",\n  \"\uD83E\uDD63\",\n  \"\uD83E\uDD64\",\n  \"\uD83E\uDD65\",\n  \"\uD83E\uDD66\",\n  \"\uD83E\uDD67\",\n  \"\uD83E\uDD68\",\n  \"\uD83E\uDD69\",\n  \"\uD83E\uDD6A\",\n  \"\uD83E\uDD6B\",\n  \"\uD83E\uDD6C\",\n  \"\uD83E\uDD6D\",\n  \"\uD83E\uDD6E\",\n  \"\uD83E\uDD6F\",\n  \"\uD83E\uDD70\",\n  \"\uD83E\uDD71\",\n  \"\uD83E\uDD73\",\n  \"\uD83E\uDD74\",\n  \"\uD83E\uDD75\",\n  \"\uD83E\uDD76\",\n  \"\uD83E\uDD7A\",\n  \"\uD83E\uDD7B\",\n  \"\uD83E\uDD7C\",\n  \"\uD83E\uDD7D\",\n  \"\uD83E\uDD7E\",\n  \"\uD83E\uDD7F\",\n  \"\uD83E\uDD80\",\n  \"\uD83E\uDD81\",\n  \"\uD83E\uDD82\",\n  \"\uD83E\uDD83\",\n  \"\uD83E\uDD84\",\n  \"\uD83E\uDD85\",\n  \"\uD83E\uDD86\",\n  \"\uD83E\uDD87\",\n  \"\uD83E\uDD88\",\n  \"\uD83E\uDD89\",\n  \"\uD83E\uDD8A\",\n  \"\uD83E\uDD8B\",\n  \"\uD83E\uDD8C\",\n  \"\uD83E\uDD8D\",\n  \"\uD83E\uDD8E\",\n  \"\uD83E\uDD8F\",\n  \"\uD83E\uDD90\",\n  \"\uD83E\uDD91\",\n  \"\uD83E\uDD92\",\n  \"\uD83E\uDD93\",\n  \"\uD83E\uDD94\",\n  \"\uD83E\uDD95\",\n  \"\uD83E\uDD96\",\n  \"\uD83E\uDD97\",\n  \"\uD83E\uDD98\",\n  \"\uD83E\uDD99\",\n  \"\uD83E\uDD9A\",\n  \"\uD83E\uDD9B\",\n  \"\uD83E\uDD9C\",\n  \"\uD83E\uDD9D\",\n  \"\uD83E\uDD9E\",\n  \"\uD83E\uDD9F\",\n  \"\uD83E\uDDA0\",\n  \"\uD83E\uDDA1\",\n  \"\uD83E\uDDA2\",\n  \"\uD83E\uDDA5\",\n  \"\uD83E\uDDA6\",\n  \"\uD83E\uDDA7\",\n  \"\uD83E\uDDA8\",\n  \"\uD83E\uDDA9\",\n  \"\uD83E\uDDAA\",\n  \"\uD83E\uDDAE\",\n  \"\uD83E\uDDAF\",\n  \"\uD83E\uDDB0\",\n  \"\uD83E\uDDB1\",\n  \"\uD83E\uDDB2\",\n  \"\uD83E\uDDB3\",\n  \"\uD83E\uDDB4\",\n  \"\uD83E\uDDB5\uD83C\uDFFB\",\n  \"\uD83E\uDDB5\uD83C\uDFFC\",\n  \"\uD83E\uDDB5\uD83C\uDFFD\",\n  \"\uD83E\uDDB5\uD83C\uDFFE\",\n  \"\uD83E\uDDB5\uD83C\uDFFF\",\n  \"\uD83E\uDDB5\",\n  \"\uD83E\uDDB6\uD83C\uDFFB\",\n  \"\uD83E\uDDB6\uD83C\uDFFC\",\n  \"\uD83E\uDDB6\uD83C\uDFFD\",\n  \"\uD83E\uDDB6\uD83C\uDFFE\",\n  \"\uD83E\uDDB6\uD83C\uDFFF\",\n  \"\uD83E\uDDB6\",\n  \"\uD83E\uDDB7\",\n  \"\uD83E\uDDB8\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB8\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB8\uD83C\uDFFB\",\n  \"\uD83E\uDDB8\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB8\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB8\uD83C\uDFFC\",\n  \"\uD83E\uDDB8\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB8\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB8\uD83C\uDFFD\",\n  \"\uD83E\uDDB8\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB8\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB8\uD83C\uDFFE\",\n  \"\uD83E\uDDB8\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB8\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB8\uD83C\uDFFF\",\n  \"\uD83E\uDDB8\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB8\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB8\",\n  \"\uD83E\uDDB9\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB9\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB9\uD83C\uDFFB\",\n  \"\uD83E\uDDB9\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB9\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB9\uD83C\uDFFC\",\n  \"\uD83E\uDDB9\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB9\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB9\uD83C\uDFFD\",\n  \"\uD83E\uDDB9\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB9\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB9\uD83C\uDFFE\",\n  \"\uD83E\uDDB9\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB9\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB9\uD83C\uDFFF\",\n  \"\uD83E\uDDB9\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDB9\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDB9\",\n  \"\uD83E\uDDBA\",\n  \"\uD83E\uDDBB\uD83C\uDFFB\",\n  \"\uD83E\uDDBB\uD83C\uDFFC\",\n  \"\uD83E\uDDBB\uD83C\uDFFD\",\n  \"\uD83E\uDDBB\uD83C\uDFFE\",\n  \"\uD83E\uDDBB\uD83C\uDFFF\",\n  \"\uD83E\uDDBB\",\n  \"\uD83E\uDDBC\",\n  \"\uD83E\uDDBD\",\n  \"\uD83E\uDDBE\",\n  \"\uD83E\uDDBF\",\n  \"\uD83E\uDDC0\",\n  \"\uD83E\uDDC1\",\n  \"\uD83E\uDDC2\",\n  \"\uD83E\uDDC3\",\n  \"\uD83E\uDDC4\",\n  \"\uD83E\uDDC5\",\n  \"\uD83E\uDDC6\",\n  \"\uD83E\uDDC7\",\n  \"\uD83E\uDDC8\",\n  \"\uD83E\uDDC9\",\n  \"\uD83E\uDDCA\",\n  \"\uD83E\uDDCD\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCD\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCD\uD83C\uDFFB\",\n  \"\uD83E\uDDCD\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCD\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCD\uD83C\uDFFC\",\n  \"\uD83E\uDDCD\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCD\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCD\uD83C\uDFFD\",\n  \"\uD83E\uDDCD\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCD\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCD\uD83C\uDFFE\",\n  \"\uD83E\uDDCD\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCD\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCD\uD83C\uDFFF\",\n  \"\uD83E\uDDCD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCD\",\n  \"\uD83E\uDDCE\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCE\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCE\uD83C\uDFFB\",\n  \"\uD83E\uDDCE\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCE\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCE\uD83C\uDFFC\",\n  \"\uD83E\uDDCE\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCE\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCE\uD83C\uDFFD\",\n  \"\uD83E\uDDCE\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCE\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCE\uD83C\uDFFE\",\n  \"\uD83E\uDDCE\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCE\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCE\uD83C\uDFFF\",\n  \"\uD83E\uDDCE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCE\",\n  \"\uD83E\uDDCF\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCF\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCF\uD83C\uDFFB\",\n  \"\uD83E\uDDCF\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCF\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCF\uD83C\uDFFC\",\n  \"\uD83E\uDDCF\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCF\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCF\uD83C\uDFFD\",\n  \"\uD83E\uDDCF\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCF\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCF\uD83C\uDFFE\",\n  \"\uD83E\uDDCF\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCF\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCF\uD83C\uDFFF\",\n  \"\uD83E\uDDCF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDCF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDCF\",\n  \"\uD83E\uDDD0\",\n  \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFB\",\n  \"\uD83E\uDDD1\uD83C\uDFFB\",\n  \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFB\",\n  \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFC\",\n  \"\uD83E\uDDD1\uD83C\uDFFC\",\n  \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFB\",\n  \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFC\",\n  \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFD\",\n  \"\uD83E\uDDD1\uD83C\uDFFD\",\n  \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFB\",\n  \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFC\",\n  \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFD\",\n  \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFE\",\n  \"\uD83E\uDDD1\uD83C\uDFFE\",\n  \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFB\",\n  \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFC\",\n  \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFD\",\n  \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFE\",\n  \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFF\",\n  \"\uD83E\uDDD1\uD83C\uDFFF\",\n  \"\uD83E\uDDD1\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\",\n  \"\uD83E\uDDD1\",\n  \"\uD83E\uDDD2\uD83C\uDFFB\",\n  \"\uD83E\uDDD2\uD83C\uDFFC\",\n  \"\uD83E\uDDD2\uD83C\uDFFD\",\n  \"\uD83E\uDDD2\uD83C\uDFFE\",\n  \"\uD83E\uDDD2\uD83C\uDFFF\",\n  \"\uD83E\uDDD2\",\n  \"\uD83E\uDDD3\uD83C\uDFFB\",\n  \"\uD83E\uDDD3\uD83C\uDFFC\",\n  \"\uD83E\uDDD3\uD83C\uDFFD\",\n  \"\uD83E\uDDD3\uD83C\uDFFE\",\n  \"\uD83E\uDDD3\uD83C\uDFFF\",\n  \"\uD83E\uDDD3\",\n  \"\uD83E\uDDD4\uD83C\uDFFB\",\n  \"\uD83E\uDDD4\uD83C\uDFFC\",\n  \"\uD83E\uDDD4\uD83C\uDFFD\",\n  \"\uD83E\uDDD4\uD83C\uDFFE\",\n  \"\uD83E\uDDD4\uD83C\uDFFF\",\n  \"\uD83E\uDDD4\",\n  \"\uD83E\uDDD5\uD83C\uDFFB\",\n  \"\uD83E\uDDD5\uD83C\uDFFC\",\n  \"\uD83E\uDDD5\uD83C\uDFFD\",\n  \"\uD83E\uDDD5\uD83C\uDFFE\",\n  \"\uD83E\uDDD5\uD83C\uDFFF\",\n  \"\uD83E\uDDD5\",\n  \"\uD83E\uDDD6\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD6\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD6\uD83C\uDFFB\",\n  \"\uD83E\uDDD6\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD6\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD6\uD83C\uDFFC\",\n  \"\uD83E\uDDD6\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD6\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD6\uD83C\uDFFD\",\n  \"\uD83E\uDDD6\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD6\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD6\uD83C\uDFFE\",\n  \"\uD83E\uDDD6\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD6\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD6\uD83C\uDFFF\",\n  \"\uD83E\uDDD6\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD6\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD6\",\n  \"\uD83E\uDDD7\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD7\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD7\uD83C\uDFFB\",\n  \"\uD83E\uDDD7\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD7\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD7\uD83C\uDFFC\",\n  \"\uD83E\uDDD7\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD7\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD7\uD83C\uDFFD\",\n  \"\uD83E\uDDD7\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD7\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD7\uD83C\uDFFE\",\n  \"\uD83E\uDDD7\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD7\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD7\uD83C\uDFFF\",\n  \"\uD83E\uDDD7\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD7\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD7\",\n  \"\uD83E\uDDD8\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD8\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD8\uD83C\uDFFB\",\n  \"\uD83E\uDDD8\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD8\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD8\uD83C\uDFFC\",\n  \"\uD83E\uDDD8\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD8\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD8\uD83C\uDFFD\",\n  \"\uD83E\uDDD8\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD8\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD8\uD83C\uDFFE\",\n  \"\uD83E\uDDD8\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD8\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD8\uD83C\uDFFF\",\n  \"\uD83E\uDDD8\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD8\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD8\",\n  \"\uD83E\uDDD9\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD9\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD9\uD83C\uDFFB\",\n  \"\uD83E\uDDD9\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD9\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD9\uD83C\uDFFC\",\n  \"\uD83E\uDDD9\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD9\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD9\uD83C\uDFFD\",\n  \"\uD83E\uDDD9\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD9\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD9\uD83C\uDFFE\",\n  \"\uD83E\uDDD9\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD9\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD9\uD83C\uDFFF\",\n  \"\uD83E\uDDD9\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDD9\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDD9\",\n  \"\uD83E\uDDDA\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDA\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDA\uD83C\uDFFB\",\n  \"\uD83E\uDDDA\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDA\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDA\uD83C\uDFFC\",\n  \"\uD83E\uDDDA\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDA\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDA\uD83C\uDFFD\",\n  \"\uD83E\uDDDA\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDA\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDA\uD83C\uDFFE\",\n  \"\uD83E\uDDDA\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDA\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDA\uD83C\uDFFF\",\n  \"\uD83E\uDDDA\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDA\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDA\",\n  \"\uD83E\uDDDB\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDB\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDB\uD83C\uDFFB\",\n  \"\uD83E\uDDDB\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDB\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDB\uD83C\uDFFC\",\n  \"\uD83E\uDDDB\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDB\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDB\uD83C\uDFFD\",\n  \"\uD83E\uDDDB\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDB\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDB\uD83C\uDFFE\",\n  \"\uD83E\uDDDB\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDB\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDB\uD83C\uDFFF\",\n  \"\uD83E\uDDDB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDB\",\n  \"\uD83E\uDDDC\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDC\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDC\uD83C\uDFFB\",\n  \"\uD83E\uDDDC\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDC\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDC\uD83C\uDFFC\",\n  \"\uD83E\uDDDC\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDC\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDC\uD83C\uDFFD\",\n  \"\uD83E\uDDDC\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDC\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDC\uD83C\uDFFE\",\n  \"\uD83E\uDDDC\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDC\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDC\uD83C\uDFFF\",\n  \"\uD83E\uDDDC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDC\",\n  \"\uD83E\uDDDD\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDD\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDD\uD83C\uDFFB\",\n  \"\uD83E\uDDDD\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDD\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDD\uD83C\uDFFC\",\n  \"\uD83E\uDDDD\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDD\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDD\uD83C\uDFFD\",\n  \"\uD83E\uDDDD\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDD\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDD\uD83C\uDFFE\",\n  \"\uD83E\uDDDD\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDD\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDD\uD83C\uDFFF\",\n  \"\uD83E\uDDDD\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDD\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDD\",\n  \"\uD83E\uDDDE\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDE\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDE\",\n  \"\uD83E\uDDDF\u200D\u2640\uFE0F\",\n  \"\uD83E\uDDDF\u200D\u2642\uFE0F\",\n  \"\uD83E\uDDDF\",\n  \"\uD83E\uDDE0\",\n  \"\uD83E\uDDE1\",\n  \"\uD83E\uDDE2\",\n  \"\uD83E\uDDE3\",\n  \"\uD83E\uDDE4\",\n  \"\uD83E\uDDE5\",\n  \"\uD83E\uDDE6\",\n  \"\uD83E\uDDE7\",\n  \"\uD83E\uDDE8\",\n  \"\uD83E\uDDE9\",\n  \"\uD83E\uDDEA\",\n  \"\uD83E\uDDEB\",\n  \"\uD83E\uDDEC\",\n  \"\uD83E\uDDED\",\n  \"\uD83E\uDDEE\",\n  \"\uD83E\uDDEF\",\n  \"\uD83E\uDDF0\",\n  \"\uD83E\uDDF1\",\n  \"\uD83E\uDDF2\",\n  \"\uD83E\uDDF3\",\n  \"\uD83E\uDDF4\",\n  \"\uD83E\uDDF5\",\n  \"\uD83E\uDDF6\",\n  \"\uD83E\uDDF7\",\n  \"\uD83E\uDDF8\",\n  \"\uD83E\uDDF9\",\n  \"\uD83E\uDDFA\",\n  \"\uD83E\uDDFB\",\n  \"\uD83E\uDDFC\",\n  \"\uD83E\uDDFD\",\n  \"\uD83E\uDDFE\",\n  \"\uD83E\uDDFF\",\n  \"\uD83E\uDE70\",\n  \"\uD83E\uDE71\",\n  \"\uD83E\uDE72\",\n  \"\uD83E\uDE73\",\n  \"\uD83E\uDE78\",\n  \"\uD83E\uDE79\",\n  \"\uD83E\uDE7A\",\n  \"\uD83E\uDE80\",\n  \"\uD83E\uDE81\",\n  \"\uD83E\uDE82\",\n  \"\uD83E\uDE90\",\n  \"\uD83E\uDE91\",\n  \"\uD83E\uDE92\",\n  \"\uD83E\uDE93\",\n  \"\uD83E\uDE94\",\n  \"\uD83E\uDE95\",\n  \"\u203C\uFE0F\",\n  \"\u2049\uFE0F\",\n  \"\u2122\uFE0F\",\n  \"\u2139\uFE0F\",\n  \"\u2194\uFE0F\",\n  \"\u2195\uFE0F\",\n  \"\u2196\uFE0F\",\n  \"\u2197\uFE0F\",\n  \"\u2198\uFE0F\",\n  \"\u2199\uFE0F\",\n  \"\u21A9\uFE0F\",\n  \"\u21AA\uFE0F\",\n  \"#\u20E3\",\n  \"\u231A\uFE0F\",\n  \"\u231B\uFE0F\",\n  \"\u2328\uFE0F\",\n  \"\u23CF\uFE0F\",\n  \"\u23E9\",\n  \"\u23EA\",\n  \"\u23EB\",\n  \"\u23EC\",\n  \"\u23ED\uFE0F\",\n  \"\u23EE\uFE0F\",\n  \"\u23EF\uFE0F\",\n  \"\u23F0\",\n  \"\u23F1\uFE0F\",\n  \"\u23F2\uFE0F\",\n  \"\u23F3\",\n  \"\u23F8\uFE0F\",\n  \"\u23F9\uFE0F\",\n  \"\u23FA\uFE0F\",\n  \"\u24C2\uFE0F\",\n  \"\u25AA\uFE0F\",\n  \"\u25AB\uFE0F\",\n  \"\u25B6\uFE0F\",\n  \"\u25C0\uFE0F\",\n  \"\u25FB\uFE0F\",\n  \"\u25FC\uFE0F\",\n  \"\u25FD\uFE0F\",\n  \"\u25FE\uFE0F\",\n  \"\u2600\uFE0F\",\n  \"\u2601\uFE0F\",\n  \"\u2602\uFE0F\",\n  \"\u2603\uFE0F\",\n  \"\u2604\uFE0F\",\n  \"\u260E\uFE0F\",\n  \"\u2611\uFE0F\",\n  \"\u2614\uFE0F\",\n  \"\u2615\uFE0F\",\n  \"\u2618\uFE0F\",\n  \"\u261D\uD83C\uDFFB\",\n  \"\u261D\uD83C\uDFFC\",\n  \"\u261D\uD83C\uDFFD\",\n  \"\u261D\uD83C\uDFFE\",\n  \"\u261D\uD83C\uDFFF\",\n  \"\u261D\uFE0F\",\n  \"\u2620\uFE0F\",\n  \"\u2622\uFE0F\",\n  \"\u2623\uFE0F\",\n  \"\u2626\uFE0F\",\n  \"\u262A\uFE0F\",\n  \"\u262E\uFE0F\",\n  \"\u262F\uFE0F\",\n  \"\u2638\uFE0F\",\n  \"\u2639\uFE0F\",\n  \"\u263A\uFE0F\",\n  \"\u2640\uFE0F\",\n  \"\u2642\uFE0F\",\n  \"\u2648\uFE0F\",\n  \"\u2649\uFE0F\",\n  \"\u264A\uFE0F\",\n  \"\u264B\uFE0F\",\n  \"\u264C\uFE0F\",\n  \"\u264D\uFE0F\",\n  \"\u264E\uFE0F\",\n  \"\u264F\uFE0F\",\n  \"\u2650\uFE0F\",\n  \"\u2651\uFE0F\",\n  \"\u2652\uFE0F\",\n  \"\u2653\uFE0F\",\n  \"\u265F\uFE0F\",\n  \"\u2660\uFE0F\",\n  \"\u2663\uFE0F\",\n  \"\u2665\uFE0F\",\n  \"\u2666\uFE0F\",\n  \"\u2668\uFE0F\",\n  \"\u267B\uFE0F\",\n  \"\u267E\",\n  \"\u267F\uFE0F\",\n  \"\u2692\uFE0F\",\n  \"\u2693\uFE0F\",\n  \"\u2694\uFE0F\",\n  \"\u2695\uFE0F\",\n  \"\u2696\uFE0F\",\n  \"\u2697\uFE0F\",\n  \"\u2699\uFE0F\",\n  \"\u269B\uFE0F\",\n  \"\u269C\uFE0F\",\n  \"\u26A0\uFE0F\",\n  \"\u26A1\uFE0F\",\n  \"\u26AA\uFE0F\",\n  \"\u26AB\uFE0F\",\n  \"\u26B0\uFE0F\",\n  \"\u26B1\uFE0F\",\n  \"\u26BD\uFE0F\",\n  \"\u26BE\uFE0F\",\n  \"\u26C4\uFE0F\",\n  \"\u26C5\uFE0F\",\n  \"\u26C8\uFE0F\",\n  \"\u26CE\",\n  \"\u26CF\uFE0F\",\n  \"\u26D1\uFE0F\",\n  \"\u26D3\uFE0F\",\n  \"\u26D4\uFE0F\",\n  \"\u26E9\uFE0F\",\n  \"\u26EA\uFE0F\",\n  \"\u26F0\uFE0F\",\n  \"\u26F1\uFE0F\",\n  \"\u26F2\uFE0F\",\n  \"\u26F3\uFE0F\",\n  \"\u26F4\uFE0F\",\n  \"\u26F5\uFE0F\",\n  \"\u26F7\uD83C\uDFFB\",\n  \"\u26F7\uD83C\uDFFC\",\n  \"\u26F7\uD83C\uDFFD\",\n  \"\u26F7\uD83C\uDFFE\",\n  \"\u26F7\uD83C\uDFFF\",\n  \"\u26F7\uFE0F\",\n  \"\u26F8\uFE0F\",\n  \"\u26F9\uD83C\uDFFB\u200D\u2640\uFE0F\",\n  \"\u26F9\uD83C\uDFFB\u200D\u2642\uFE0F\",\n  \"\u26F9\uD83C\uDFFB\",\n  \"\u26F9\uD83C\uDFFC\u200D\u2640\uFE0F\",\n  \"\u26F9\uD83C\uDFFC\u200D\u2642\uFE0F\",\n  \"\u26F9\uD83C\uDFFC\",\n  \"\u26F9\uD83C\uDFFD\u200D\u2640\uFE0F\",\n  \"\u26F9\uD83C\uDFFD\u200D\u2642\uFE0F\",\n  \"\u26F9\uD83C\uDFFD\",\n  \"\u26F9\uD83C\uDFFE\u200D\u2640\uFE0F\",\n  \"\u26F9\uD83C\uDFFE\u200D\u2642\uFE0F\",\n  \"\u26F9\uD83C\uDFFE\",\n  \"\u26F9\uD83C\uDFFF\u200D\u2640\uFE0F\",\n  \"\u26F9\uD83C\uDFFF\u200D\u2642\uFE0F\",\n  \"\u26F9\uD83C\uDFFF\",\n  \"\u26F9\uFE0F\u200D\u2640\uFE0F\",\n  \"\u26F9\uFE0F\u200D\u2642\uFE0F\",\n  \"\u26F9\uFE0F\",\n  \"\u26FA\uFE0F\",\n  \"\u26FD\uFE0F\",\n  \"\u2702\uFE0F\",\n  \"\u2705\",\n  \"\u2708\uFE0F\",\n  \"\u2709\uFE0F\",\n  \"\u270A\uD83C\uDFFB\",\n  \"\u270A\uD83C\uDFFC\",\n  \"\u270A\uD83C\uDFFD\",\n  \"\u270A\uD83C\uDFFE\",\n  \"\u270A\uD83C\uDFFF\",\n  \"\u270A\",\n  \"\u270B\uD83C\uDFFB\",\n  \"\u270B\uD83C\uDFFC\",\n  \"\u270B\uD83C\uDFFD\",\n  \"\u270B\uD83C\uDFFE\",\n  \"\u270B\uD83C\uDFFF\",\n  \"\u270B\",\n  \"\u270C\uD83C\uDFFB\",\n  \"\u270C\uD83C\uDFFC\",\n  \"\u270C\uD83C\uDFFD\",\n  \"\u270C\uD83C\uDFFE\",\n  \"\u270C\uD83C\uDFFF\",\n  \"\u270C\uFE0F\",\n  \"\u270D\uD83C\uDFFB\",\n  \"\u270D\uD83C\uDFFC\",\n  \"\u270D\uD83C\uDFFD\",\n  \"\u270D\uD83C\uDFFE\",\n  \"\u270D\uD83C\uDFFF\",\n  \"\u270D\uFE0F\",\n  \"\u270F\uFE0F\",\n  \"\u2712\uFE0F\",\n  \"\u2714\uFE0F\",\n  \"\u2716\uFE0F\",\n  \"\u271D\uFE0F\",\n  \"\u2721\uFE0F\",\n  \"\u2728\",\n  \"\u2733\uFE0F\",\n  \"\u2734\uFE0F\",\n  \"\u2744\uFE0F\",\n  \"\u2747\uFE0F\",\n  \"\u274C\",\n  \"\u274E\",\n  \"\u2753\",\n  \"\u2754\",\n  \"\u2755\",\n  \"\u2757\uFE0F\",\n  \"\u2763\uFE0F\",\n  \"\u2764\uFE0F\",\n  \"\u2795\",\n  \"\u2796\",\n  \"\u2797\",\n  \"\u27A1\uFE0F\",\n  \"\u27B0\",\n  \"\u27BF\",\n  \"\u2934\uFE0F\",\n  \"\u2935\uFE0F\",\n  \"*\u20E3\",\n  \"\u2B05\uFE0F\",\n  \"\u2B06\uFE0F\",\n  \"\u2B07\uFE0F\",\n  \"\u2B1B\uFE0F\",\n  \"\u2B1C\uFE0F\",\n  \"\u2B50\uFE0F\",\n  \"\u2B55\uFE0F\",\n  \"0\u20E3\",\n  \"\u3030\uFE0F\",\n  \"\u303D\uFE0F\",\n  \"1\u20E3\",\n  \"2\u20E3\",\n  \"\u3297\uFE0F\",\n  \"\u3299\uFE0F\",\n  \"3\u20E3\",\n  \"4\u20E3\",\n  \"5\u20E3\",\n  \"6\u20E3\",\n  \"7\u20E3\",\n  \"8\u20E3\",\n  \"9\u20E3\",\n  \"\u00A9\uFE0F\",\n  \"\u00AE\uFE0F\",\n  \"\uE50A\"\n]", "'use strict';\n\nconst path = require('path');\nconst emojisList = require('emojis-list');\nconst getHashDigest = require('./getHashDigest');\n\nconst emojiRegex = /[\\uD800-\\uDFFF]./;\nconst emojiList = emojisList.filter((emoji) => emojiRegex.test(emoji));\nconst emojiCache = {};\n\nfunction encodeStringToEmoji(content, length) {\n  if (emojiCache[content]) {\n    return emojiCache[content];\n  }\n\n  length = length || 1;\n\n  const emojis = [];\n\n  do {\n    if (!emojiList.length) {\n      throw new Error('Ran out of emoji');\n    }\n\n    const index = Math.floor(Math.random() * emojiList.length);\n\n    emojis.push(emojiList[index]);\n    emojiList.splice(index, 1);\n  } while (--length > 0);\n\n  const emojiEncoding = emojis.join('');\n\n  emojiCache[content] = emojiEncoding;\n\n  return emojiEncoding;\n}\n\nfunction interpolateName(loaderContext, name, options) {\n  let filename;\n\n  const hasQuery =\n    loaderContext.resourceQuery && loaderContext.resourceQuery.length > 1;\n\n  if (typeof name === 'function') {\n    filename = name(\n      loaderContext.resourcePath,\n      hasQuery ? loaderContext.resourceQuery : undefined\n    );\n  } else {\n    filename = name || '[hash].[ext]';\n  }\n\n  const context = options.context;\n  const content = options.content;\n  const regExp = options.regExp;\n\n  let ext = 'bin';\n  let basename = 'file';\n  let directory = '';\n  let folder = '';\n  let query = '';\n\n  if (loaderContext.resourcePath) {\n    const parsed = path.parse(loaderContext.resourcePath);\n    let resourcePath = loaderContext.resourcePath;\n\n    if (parsed.ext) {\n      ext = parsed.ext.substr(1);\n    }\n\n    if (parsed.dir) {\n      basename = parsed.name;\n      resourcePath = parsed.dir + path.sep;\n    }\n\n    if (typeof context !== 'undefined') {\n      directory = path\n        .relative(context, resourcePath + '_')\n        .replace(/\\\\/g, '/')\n        .replace(/\\.\\.(\\/)?/g, '_$1');\n      directory = directory.substr(0, directory.length - 1);\n    } else {\n      directory = resourcePath.replace(/\\\\/g, '/').replace(/\\.\\.(\\/)?/g, '_$1');\n    }\n\n    if (directory.length === 1) {\n      directory = '';\n    } else if (directory.length > 1) {\n      folder = path.basename(directory);\n    }\n  }\n\n  if (loaderContext.resourceQuery && loaderContext.resourceQuery.length > 1) {\n    query = loaderContext.resourceQuery;\n\n    const hashIdx = query.indexOf('#');\n\n    if (hashIdx >= 0) {\n      query = query.substr(0, hashIdx);\n    }\n  }\n\n  let url = filename;\n\n  if (content) {\n    // Match hash template\n    url = url\n      // `hash` and `contenthash` are same in `loader-utils` context\n      // let's keep `hash` for backward compatibility\n      .replace(\n        /\\[(?:([^:\\]]+):)?(?:hash|contenthash)(?::([a-z]+\\d*))?(?::(\\d+))?\\]/gi,\n        (all, hashType, digestType, maxLength) =>\n          getHashDigest(content, hashType, digestType, parseInt(maxLength, 10))\n      )\n      .replace(/\\[emoji(?::(\\d+))?\\]/gi, (all, length) =>\n        encodeStringToEmoji(content, parseInt(length, 10))\n      );\n  }\n\n  url = url\n    .replace(/\\[ext\\]/gi, () => ext)\n    .replace(/\\[name\\]/gi, () => basename)\n    .replace(/\\[path\\]/gi, () => directory)\n    .replace(/\\[folder\\]/gi, () => folder)\n    .replace(/\\[query\\]/gi, () => query);\n\n  if (regExp && loaderContext.resourcePath) {\n    const match = loaderContext.resourcePath.match(new RegExp(regExp));\n\n    match &&\n      match.forEach((matched, i) => {\n        url = url.replace(new RegExp('\\\\[' + i + '\\\\]', 'ig'), matched);\n      });\n  }\n\n  if (\n    typeof loaderContext.options === 'object' &&\n    typeof loaderContext.options.customInterpolateName === 'function'\n  ) {\n    url = loaderContext.options.customInterpolateName.call(\n      loaderContext,\n      url,\n      name,\n      options\n    );\n  }\n\n  return url;\n}\n\nmodule.exports = interpolateName;\n", "'use strict';\n\nconst getOptions = require('./getOptions');\nconst parseQuery = require('./parseQuery');\nconst stringifyRequest = require('./stringifyRequest');\nconst getRemainingRequest = require('./getRemainingRequest');\nconst getCurrentRequest = require('./getCurrentRequest');\nconst isUrlRequest = require('./isUrlRequest');\nconst urlToRequest = require('./urlToRequest');\nconst parseString = require('./parseString');\nconst getHashDigest = require('./getHashDigest');\nconst interpolateName = require('./interpolateName');\n\nexports.getOptions = getOptions;\nexports.parseQuery = parseQuery;\nexports.stringifyRequest = stringifyRequest;\nexports.getRemainingRequest = getRemainingRequest;\nexports.getCurrentRequest = getCurrentRequest;\nexports.isUrlRequest = isUrlRequest;\nexports.urlToRequest = urlToRequest;\nexports.parseString = parseString;\nexports.getHashDigest = getHashDigest;\nexports.interpolateName = interpolateName;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/** @typedef {import(\"ajv\").Ajv} Ajv */\n\n/** @typedef {import(\"ajv\").ValidateFunction} ValidateFunction */\n\n/** @typedef {import(\"../validate\").SchemaUtilErrorObject} SchemaUtilErrorObject */\n\n/**\n * @param {string} message\n * @param {object} schema\n * @param {string} data\n * @returns {SchemaUtilErrorObject}\n */\nfunction errorMessage(message, schema, data) {\n  return {\n    // @ts-ignore\n    // eslint-disable-next-line no-undefined\n    dataPath: undefined,\n    // @ts-ignore\n    // eslint-disable-next-line no-undefined\n    schemaPath: undefined,\n    keyword: 'absolutePath',\n    params: {\n      absolutePath: data\n    },\n    message,\n    parentSchema: schema\n  };\n}\n/**\n * @param {boolean} shouldBeAbsolute\n * @param {object} schema\n * @param {string} data\n * @returns {SchemaUtilErrorObject}\n */\n\n\nfunction getErrorFor(shouldBeAbsolute, schema, data) {\n  const message = shouldBeAbsolute ? `The provided value ${JSON.stringify(data)} is not an absolute path!` : `A relative path is expected. However, the provided value ${JSON.stringify(data)} is an absolute path!`;\n  return errorMessage(message, schema, data);\n}\n/**\n *\n * @param {Ajv} ajv\n * @returns {Ajv}\n */\n\n\nfunction addAbsolutePathKeyword(ajv) {\n  ajv.addKeyword('absolutePath', {\n    errors: true,\n    type: 'string',\n\n    compile(schema, parentSchema) {\n      /** @type {ValidateFunction} */\n      const callback = data => {\n        let passes = true;\n        const isExclamationMarkPresent = data.includes('!');\n\n        if (isExclamationMarkPresent) {\n          callback.errors = [errorMessage(`The provided value ${JSON.stringify(data)} contains exclamation mark (!) which is not allowed because it's reserved for loader syntax.`, parentSchema, data)];\n          passes = false;\n        } // ?:[A-Za-z]:\\\\ - Windows absolute path\n        // \\\\\\\\ - Windows network absolute path\n        // \\/ - Unix-like OS absolute path\n\n\n        const isCorrectAbsolutePath = schema === /^(?:[A-Za-z]:(\\\\|\\/)|\\\\\\\\|\\/)/.test(data);\n\n        if (!isCorrectAbsolutePath) {\n          callback.errors = [getErrorFor(schema, parentSchema, data)];\n          passes = false;\n        }\n\n        return passes;\n      };\n\n      callback.errors = [];\n      return callback;\n    }\n\n  });\n  return ajv;\n}\n\nvar _default = addAbsolutePathKeyword;\nexports.default = _default;", "\"use strict\";\n\n/**\n * @typedef {[number, boolean]} RangeValue\n */\n\n/**\n * @callback RangeValueCallback\n * @param {RangeValue} rangeValue\n * @returns {boolean}\n */\nclass Range {\n  /**\n   * @param {\"left\" | \"right\"} side\n   * @param {boolean} exclusive\n   * @returns {\">\" | \">=\" | \"<\" | \"<=\"}\n   */\n  static getOperator(side, exclusive) {\n    if (side === 'left') {\n      return exclusive ? '>' : '>=';\n    }\n\n    return exclusive ? '<' : '<=';\n  }\n  /**\n   * @param {number} value\n   * @param {boolean} logic is not logic applied\n   * @param {boolean} exclusive is range exclusive\n   * @returns {string}\n   */\n\n\n  static formatRight(value, logic, exclusive) {\n    if (logic === false) {\n      return Range.formatLeft(value, !logic, !exclusive);\n    }\n\n    return `should be ${Range.getOperator('right', exclusive)} ${value}`;\n  }\n  /**\n   * @param {number} value\n   * @param {boolean} logic is not logic applied\n   * @param {boolean} exclusive is range exclusive\n   * @returns {string}\n   */\n\n\n  static formatLeft(value, logic, exclusive) {\n    if (logic === false) {\n      return Range.formatRight(value, !logic, !exclusive);\n    }\n\n    return `should be ${Range.getOperator('left', exclusive)} ${value}`;\n  }\n  /**\n   * @param {number} start left side value\n   * @param {number} end right side value\n   * @param {boolean} startExclusive is range exclusive from left side\n   * @param {boolean} endExclusive is range exclusive from right side\n   * @param {boolean} logic is not logic applied\n   * @returns {string}\n   */\n\n\n  static formatRange(start, end, startExclusive, endExclusive, logic) {\n    let result = 'should be';\n    result += ` ${Range.getOperator(logic ? 'left' : 'right', logic ? startExclusive : !startExclusive)} ${start} `;\n    result += logic ? 'and' : 'or';\n    result += ` ${Range.getOperator(logic ? 'right' : 'left', logic ? endExclusive : !endExclusive)} ${end}`;\n    return result;\n  }\n  /**\n   * @param {Array<RangeValue>} values\n   * @param {boolean} logic is not logic applied\n   * @return {RangeValue} computed value and it's exclusive flag\n   */\n\n\n  static getRangeValue(values, logic) {\n    let minMax = logic ? Infinity : -Infinity;\n    let j = -1;\n    const predicate = logic ?\n    /** @type {RangeValueCallback} */\n    ([value]) => value <= minMax :\n    /** @type {RangeValueCallback} */\n    ([value]) => value >= minMax;\n\n    for (let i = 0; i < values.length; i++) {\n      if (predicate(values[i])) {\n        [minMax] = values[i];\n        j = i;\n      }\n    }\n\n    if (j > -1) {\n      return values[j];\n    }\n\n    return [Infinity, true];\n  }\n\n  constructor() {\n    /** @type {Array<RangeValue>} */\n    this._left = [];\n    /** @type {Array<RangeValue>} */\n\n    this._right = [];\n  }\n  /**\n   * @param {number} value\n   * @param {boolean=} exclusive\n   */\n\n\n  left(value, exclusive = false) {\n    this._left.push([value, exclusive]);\n  }\n  /**\n   * @param {number} value\n   * @param {boolean=} exclusive\n   */\n\n\n  right(value, exclusive = false) {\n    this._right.push([value, exclusive]);\n  }\n  /**\n   * @param {boolean} logic is not logic applied\n   * @return {string} \"smart\" range string representation\n   */\n\n\n  format(logic = true) {\n    const [start, leftExclusive] = Range.getRangeValue(this._left, logic);\n    const [end, rightExclusive] = Range.getRangeValue(this._right, !logic);\n\n    if (!Number.isFinite(start) && !Number.isFinite(end)) {\n      return '';\n    }\n\n    const realStart = leftExclusive ? start + 1 : start;\n    const realEnd = rightExclusive ? end - 1 : end; // e.g. 5 < x < 7, 5 < x <= 6, 6 <= x <= 6\n\n    if (realStart === realEnd) {\n      return `should be ${logic ? '' : '!'}= ${realStart}`;\n    } // e.g. 4 < x < \u221E\n\n\n    if (Number.isFinite(start) && !Number.isFinite(end)) {\n      return Range.formatLeft(start, logic, leftExclusive);\n    } // e.g. \u221E < x < 4\n\n\n    if (!Number.isFinite(start) && Number.isFinite(end)) {\n      return Range.formatRight(end, logic, rightExclusive);\n    }\n\n    return Range.formatRange(start, end, leftExclusive, rightExclusive, logic);\n  }\n\n}\n\nmodule.exports = Range;", "\"use strict\";\n\nconst Range = require('./Range');\n/** @typedef {import(\"../validate\").Schema} Schema */\n\n/**\n * @param {Schema} schema\n * @param {boolean} logic\n * @return {string[]}\n */\n\n\nmodule.exports.stringHints = function stringHints(schema, logic) {\n  const hints = [];\n  let type = 'string';\n  const currentSchema = { ...schema\n  };\n\n  if (!logic) {\n    const tmpLength = currentSchema.minLength;\n    const tmpFormat = currentSchema.formatMinimum;\n    const tmpExclusive = currentSchema.formatExclusiveMaximum;\n    currentSchema.minLength = currentSchema.maxLength;\n    currentSchema.maxLength = tmpLength;\n    currentSchema.formatMinimum = currentSchema.formatMaximum;\n    currentSchema.formatMaximum = tmpFormat;\n    currentSchema.formatExclusiveMaximum = !currentSchema.formatExclusiveMinimum;\n    currentSchema.formatExclusiveMinimum = !tmpExclusive;\n  }\n\n  if (typeof currentSchema.minLength === 'number') {\n    if (currentSchema.minLength === 1) {\n      type = 'non-empty string';\n    } else {\n      const length = Math.max(currentSchema.minLength - 1, 0);\n      hints.push(`should be longer than ${length} character${length > 1 ? 's' : ''}`);\n    }\n  }\n\n  if (typeof currentSchema.maxLength === 'number') {\n    if (currentSchema.maxLength === 0) {\n      type = 'empty string';\n    } else {\n      const length = currentSchema.maxLength + 1;\n      hints.push(`should be shorter than ${length} character${length > 1 ? 's' : ''}`);\n    }\n  }\n\n  if (currentSchema.pattern) {\n    hints.push(`should${logic ? '' : ' not'} match pattern ${JSON.stringify(currentSchema.pattern)}`);\n  }\n\n  if (currentSchema.format) {\n    hints.push(`should${logic ? '' : ' not'} match format ${JSON.stringify(currentSchema.format)}`);\n  }\n\n  if (currentSchema.formatMinimum) {\n    hints.push(`should be ${currentSchema.formatExclusiveMinimum ? '>' : '>='} ${JSON.stringify(currentSchema.formatMinimum)}`);\n  }\n\n  if (currentSchema.formatMaximum) {\n    hints.push(`should be ${currentSchema.formatExclusiveMaximum ? '<' : '<='} ${JSON.stringify(currentSchema.formatMaximum)}`);\n  }\n\n  return [type].concat(hints);\n};\n/**\n * @param {Schema} schema\n * @param {boolean} logic\n * @return {string[]}\n */\n\n\nmodule.exports.numberHints = function numberHints(schema, logic) {\n  const hints = [schema.type === 'integer' ? 'integer' : 'number'];\n  const range = new Range();\n\n  if (typeof schema.minimum === 'number') {\n    range.left(schema.minimum);\n  }\n\n  if (typeof schema.exclusiveMinimum === 'number') {\n    range.left(schema.exclusiveMinimum, true);\n  }\n\n  if (typeof schema.maximum === 'number') {\n    range.right(schema.maximum);\n  }\n\n  if (typeof schema.exclusiveMaximum === 'number') {\n    range.right(schema.exclusiveMaximum, true);\n  }\n\n  const rangeFormat = range.format(logic);\n\n  if (rangeFormat) {\n    hints.push(rangeFormat);\n  }\n\n  if (typeof schema.multipleOf === 'number') {\n    hints.push(`should${logic ? '' : ' not'} be multiple of ${schema.multipleOf}`);\n  }\n\n  return hints;\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nconst {\n  stringHints,\n  numberHints\n} = require('./util/hints');\n/** @typedef {import(\"json-schema\").JSONSchema6} JSONSchema6 */\n\n/** @typedef {import(\"json-schema\").JSONSchema7} JSONSchema7 */\n\n/** @typedef {import(\"./validate\").Schema} Schema */\n\n/** @typedef {import(\"./validate\").ValidationErrorConfiguration} ValidationErrorConfiguration */\n\n/** @typedef {import(\"./validate\").PostFormatter} PostFormatter */\n\n/** @typedef {import(\"./validate\").SchemaUtilErrorObject} SchemaUtilErrorObject */\n\n/** @enum {number} */\n\n\nconst SPECIFICITY = {\n  type: 1,\n  not: 1,\n  oneOf: 1,\n  anyOf: 1,\n  if: 1,\n  enum: 1,\n  const: 1,\n  instanceof: 1,\n  required: 2,\n  pattern: 2,\n  patternRequired: 2,\n  format: 2,\n  formatMinimum: 2,\n  formatMaximum: 2,\n  minimum: 2,\n  exclusiveMinimum: 2,\n  maximum: 2,\n  exclusiveMaximum: 2,\n  multipleOf: 2,\n  uniqueItems: 2,\n  contains: 2,\n  minLength: 2,\n  maxLength: 2,\n  minItems: 2,\n  maxItems: 2,\n  minProperties: 2,\n  maxProperties: 2,\n  dependencies: 2,\n  propertyNames: 2,\n  additionalItems: 2,\n  additionalProperties: 2,\n  absolutePath: 2\n};\n/**\n *\n * @param {Array<SchemaUtilErrorObject>} array\n * @param {(item: SchemaUtilErrorObject) => number} fn\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\nfunction filterMax(array, fn) {\n  const evaluatedMax = array.reduce((max, item) => Math.max(max, fn(item)), 0);\n  return array.filter(item => fn(item) === evaluatedMax);\n}\n/**\n *\n * @param {Array<SchemaUtilErrorObject>} children\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\n\nfunction filterChildren(children) {\n  let newChildren = children;\n  newChildren = filterMax(newChildren,\n  /**\n   *\n   * @param {SchemaUtilErrorObject} error\n   * @returns {number}\n   */\n  error => error.dataPath ? error.dataPath.length : 0);\n  newChildren = filterMax(newChildren,\n  /**\n   * @param {SchemaUtilErrorObject} error\n   * @returns {number}\n   */\n  error => SPECIFICITY[\n  /** @type {keyof typeof SPECIFICITY} */\n  error.keyword] || 2);\n  return newChildren;\n}\n/**\n * Find all children errors\n * @param {Array<SchemaUtilErrorObject>} children\n * @param {Array<string>} schemaPaths\n * @return {number} returns index of first child\n */\n\n\nfunction findAllChildren(children, schemaPaths) {\n  let i = children.length - 1;\n\n  const predicate =\n  /**\n   * @param {string} schemaPath\n   * @returns {boolean}\n   */\n  schemaPath => children[i].schemaPath.indexOf(schemaPath) !== 0;\n\n  while (i > -1 && !schemaPaths.every(predicate)) {\n    if (children[i].keyword === 'anyOf' || children[i].keyword === 'oneOf') {\n      const refs = extractRefs(children[i]);\n      const childrenStart = findAllChildren(children.slice(0, i), refs.concat(children[i].schemaPath));\n      i = childrenStart - 1;\n    } else {\n      i -= 1;\n    }\n  }\n\n  return i + 1;\n}\n/**\n * Extracts all refs from schema\n * @param {SchemaUtilErrorObject} error\n * @return {Array<string>}\n */\n\n\nfunction extractRefs(error) {\n  const {\n    schema\n  } = error;\n\n  if (!Array.isArray(schema)) {\n    return [];\n  }\n\n  return schema.map(({\n    $ref\n  }) => $ref).filter(s => s);\n}\n/**\n * Groups children by their first level parent (assuming that error is root)\n * @param {Array<SchemaUtilErrorObject>} children\n * @return {Array<SchemaUtilErrorObject>}\n */\n\n\nfunction groupChildrenByFirstChild(children) {\n  const result = [];\n  let i = children.length - 1;\n\n  while (i > 0) {\n    const child = children[i];\n\n    if (child.keyword === 'anyOf' || child.keyword === 'oneOf') {\n      const refs = extractRefs(child);\n      const childrenStart = findAllChildren(children.slice(0, i), refs.concat(child.schemaPath));\n\n      if (childrenStart !== i) {\n        result.push(Object.assign({}, child, {\n          children: children.slice(childrenStart, i)\n        }));\n        i = childrenStart;\n      } else {\n        result.push(child);\n      }\n    } else {\n      result.push(child);\n    }\n\n    i -= 1;\n  }\n\n  if (i === 0) {\n    result.push(children[i]);\n  }\n\n  return result.reverse();\n}\n/**\n * @param {string} str\n * @param {string} prefix\n * @returns {string}\n */\n\n\nfunction indent(str, prefix) {\n  return str.replace(/\\n(?!$)/g, `\\n${prefix}`);\n}\n/**\n * @param {Schema} schema\n * @returns {schema is (Schema & {not: Schema})}\n */\n\n\nfunction hasNotInSchema(schema) {\n  return !!schema.not;\n}\n/**\n * @param {Schema} schema\n * @return {Schema}\n */\n\n\nfunction findFirstTypedSchema(schema) {\n  if (hasNotInSchema(schema)) {\n    return findFirstTypedSchema(schema.not);\n  }\n\n  return schema;\n}\n/**\n * @param {Schema} schema\n * @return {boolean}\n */\n\n\nfunction canApplyNot(schema) {\n  const typedSchema = findFirstTypedSchema(schema);\n  return likeNumber(typedSchema) || likeInteger(typedSchema) || likeString(typedSchema) || likeNull(typedSchema) || likeBoolean(typedSchema);\n}\n/**\n * @param {any} maybeObj\n * @returns {boolean}\n */\n\n\nfunction isObject(maybeObj) {\n  return typeof maybeObj === 'object' && maybeObj !== null;\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeNumber(schema) {\n  return schema.type === 'number' || typeof schema.minimum !== 'undefined' || typeof schema.exclusiveMinimum !== 'undefined' || typeof schema.maximum !== 'undefined' || typeof schema.exclusiveMaximum !== 'undefined' || typeof schema.multipleOf !== 'undefined';\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeInteger(schema) {\n  return schema.type === 'integer' || typeof schema.minimum !== 'undefined' || typeof schema.exclusiveMinimum !== 'undefined' || typeof schema.maximum !== 'undefined' || typeof schema.exclusiveMaximum !== 'undefined' || typeof schema.multipleOf !== 'undefined';\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeString(schema) {\n  return schema.type === 'string' || typeof schema.minLength !== 'undefined' || typeof schema.maxLength !== 'undefined' || typeof schema.pattern !== 'undefined' || typeof schema.format !== 'undefined' || typeof schema.formatMinimum !== 'undefined' || typeof schema.formatMaximum !== 'undefined';\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeBoolean(schema) {\n  return schema.type === 'boolean';\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeArray(schema) {\n  return schema.type === 'array' || typeof schema.minItems === 'number' || typeof schema.maxItems === 'number' || typeof schema.uniqueItems !== 'undefined' || typeof schema.items !== 'undefined' || typeof schema.additionalItems !== 'undefined' || typeof schema.contains !== 'undefined';\n}\n/**\n * @param {Schema & {patternRequired?: Array<string>}} schema\n * @returns {boolean}\n */\n\n\nfunction likeObject(schema) {\n  return schema.type === 'object' || typeof schema.minProperties !== 'undefined' || typeof schema.maxProperties !== 'undefined' || typeof schema.required !== 'undefined' || typeof schema.properties !== 'undefined' || typeof schema.patternProperties !== 'undefined' || typeof schema.additionalProperties !== 'undefined' || typeof schema.dependencies !== 'undefined' || typeof schema.propertyNames !== 'undefined' || typeof schema.patternRequired !== 'undefined';\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeNull(schema) {\n  return schema.type === 'null';\n}\n/**\n * @param {string} type\n * @returns {string}\n */\n\n\nfunction getArticle(type) {\n  if (/^[aeiou]/i.test(type)) {\n    return 'an';\n  }\n\n  return 'a';\n}\n/**\n * @param {Schema=} schema\n * @returns {string}\n */\n\n\nfunction getSchemaNonTypes(schema) {\n  if (!schema) {\n    return '';\n  }\n\n  if (!schema.type) {\n    if (likeNumber(schema) || likeInteger(schema)) {\n      return ' | should be any non-number';\n    }\n\n    if (likeString(schema)) {\n      return ' | should be any non-string';\n    }\n\n    if (likeArray(schema)) {\n      return ' | should be any non-array';\n    }\n\n    if (likeObject(schema)) {\n      return ' | should be any non-object';\n    }\n  }\n\n  return '';\n}\n/**\n * @param {Array<string>} hints\n * @returns {string}\n */\n\n\nfunction formatHints(hints) {\n  return hints.length > 0 ? `(${hints.join(', ')})` : '';\n}\n/**\n * @param {Schema} schema\n * @param {boolean} logic\n * @returns {string[]}\n */\n\n\nfunction getHints(schema, logic) {\n  if (likeNumber(schema) || likeInteger(schema)) {\n    return numberHints(schema, logic);\n  } else if (likeString(schema)) {\n    return stringHints(schema, logic);\n  }\n\n  return [];\n}\n\nclass ValidationError extends Error {\n  /**\n   * @param {Array<SchemaUtilErrorObject>} errors\n   * @param {Schema} schema\n   * @param {ValidationErrorConfiguration} configuration\n   */\n  constructor(errors, schema, configuration = {}) {\n    super();\n    /** @type {string} */\n\n    this.name = 'ValidationError';\n    /** @type {Array<SchemaUtilErrorObject>} */\n\n    this.errors = errors;\n    /** @type {Schema} */\n\n    this.schema = schema;\n    let headerNameFromSchema;\n    let baseDataPathFromSchema;\n\n    if (schema.title && (!configuration.name || !configuration.baseDataPath)) {\n      const splittedTitleFromSchema = schema.title.match(/^(.+) (.+)$/);\n\n      if (splittedTitleFromSchema) {\n        if (!configuration.name) {\n          [, headerNameFromSchema] = splittedTitleFromSchema;\n        }\n\n        if (!configuration.baseDataPath) {\n          [,, baseDataPathFromSchema] = splittedTitleFromSchema;\n        }\n      }\n    }\n    /** @type {string} */\n\n\n    this.headerName = configuration.name || headerNameFromSchema || 'Object';\n    /** @type {string} */\n\n    this.baseDataPath = configuration.baseDataPath || baseDataPathFromSchema || 'configuration';\n    /** @type {PostFormatter | null} */\n\n    this.postFormatter = configuration.postFormatter || null;\n    const header = `Invalid ${this.baseDataPath} object. ${this.headerName} has been initialized using ${getArticle(this.baseDataPath)} ${this.baseDataPath} object that does not match the API schema.\\n`;\n    /** @type {string} */\n\n    this.message = `${header}${this.formatValidationErrors(errors)}`;\n    Error.captureStackTrace(this, this.constructor);\n  }\n  /**\n   * @param {string} path\n   * @returns {Schema}\n   */\n\n\n  getSchemaPart(path) {\n    const newPath = path.split('/');\n    let schemaPart = this.schema;\n\n    for (let i = 1; i < newPath.length; i++) {\n      const inner = schemaPart[\n      /** @type {keyof Schema} */\n      newPath[i]];\n\n      if (!inner) {\n        break;\n      }\n\n      schemaPart = inner;\n    }\n\n    return schemaPart;\n  }\n  /**\n   * @param {Schema} schema\n   * @param {boolean} logic\n   * @param {Array<Object>} prevSchemas\n   * @returns {string}\n   */\n\n\n  formatSchema(schema, logic = true, prevSchemas = []) {\n    let newLogic = logic;\n\n    const formatInnerSchema =\n    /**\n     *\n     * @param {Object} innerSchema\n     * @param {boolean=} addSelf\n     * @returns {string}\n     */\n    (innerSchema, addSelf) => {\n      if (!addSelf) {\n        return this.formatSchema(innerSchema, newLogic, prevSchemas);\n      }\n\n      if (prevSchemas.includes(innerSchema)) {\n        return '(recursive)';\n      }\n\n      return this.formatSchema(innerSchema, newLogic, prevSchemas.concat(schema));\n    };\n\n    if (hasNotInSchema(schema) && !likeObject(schema)) {\n      if (canApplyNot(schema.not)) {\n        newLogic = !logic;\n        return formatInnerSchema(schema.not);\n      }\n\n      const needApplyLogicHere = !schema.not.not;\n      const prefix = logic ? '' : 'non ';\n      newLogic = !logic;\n      return needApplyLogicHere ? prefix + formatInnerSchema(schema.not) : formatInnerSchema(schema.not);\n    }\n\n    if (\n    /** @type {Schema & {instanceof: string | Array<string>}} */\n    schema.instanceof) {\n      const {\n        instanceof: value\n      } =\n      /** @type {Schema & {instanceof: string | Array<string>}} */\n      schema;\n      const values = !Array.isArray(value) ? [value] : value;\n      return values.map(\n      /**\n       * @param {string} item\n       * @returns {string}\n       */\n      item => item === 'Function' ? 'function' : item).join(' | ');\n    }\n\n    if (schema.enum) {\n      return (\n        /** @type {Array<any>} */\n        schema.enum.map(item => JSON.stringify(item)).join(' | ')\n      );\n    }\n\n    if (typeof schema.const !== 'undefined') {\n      return JSON.stringify(schema.const);\n    }\n\n    if (schema.oneOf) {\n      return (\n        /** @type {Array<Schema>} */\n        schema.oneOf.map(item => formatInnerSchema(item, true)).join(' | ')\n      );\n    }\n\n    if (schema.anyOf) {\n      return (\n        /** @type {Array<Schema>} */\n        schema.anyOf.map(item => formatInnerSchema(item, true)).join(' | ')\n      );\n    }\n\n    if (schema.allOf) {\n      return (\n        /** @type {Array<Schema>} */\n        schema.allOf.map(item => formatInnerSchema(item, true)).join(' & ')\n      );\n    }\n\n    if (\n    /** @type {JSONSchema7} */\n    schema.if) {\n      const {\n        if: ifValue,\n        then: thenValue,\n        else: elseValue\n      } =\n      /** @type {JSONSchema7} */\n      schema;\n      return `${ifValue ? `if ${formatInnerSchema(ifValue)}` : ''}${thenValue ? ` then ${formatInnerSchema(thenValue)}` : ''}${elseValue ? ` else ${formatInnerSchema(elseValue)}` : ''}`;\n    }\n\n    if (schema.$ref) {\n      return formatInnerSchema(this.getSchemaPart(schema.$ref), true);\n    }\n\n    if (likeNumber(schema) || likeInteger(schema)) {\n      const [type, ...hints] = getHints(schema, logic);\n      const str = `${type}${hints.length > 0 ? ` ${formatHints(hints)}` : ''}`;\n      return logic ? str : hints.length > 0 ? `non-${type} | ${str}` : `non-${type}`;\n    }\n\n    if (likeString(schema)) {\n      const [type, ...hints] = getHints(schema, logic);\n      const str = `${type}${hints.length > 0 ? ` ${formatHints(hints)}` : ''}`;\n      return logic ? str : str === 'string' ? 'non-string' : `non-string | ${str}`;\n    }\n\n    if (likeBoolean(schema)) {\n      return `${logic ? '' : 'non-'}boolean`;\n    }\n\n    if (likeArray(schema)) {\n      // not logic already applied in formatValidationError\n      newLogic = true;\n      const hints = [];\n\n      if (typeof schema.minItems === 'number') {\n        hints.push(`should not have fewer than ${schema.minItems} item${schema.minItems > 1 ? 's' : ''}`);\n      }\n\n      if (typeof schema.maxItems === 'number') {\n        hints.push(`should not have more than ${schema.maxItems} item${schema.maxItems > 1 ? 's' : ''}`);\n      }\n\n      if (schema.uniqueItems) {\n        hints.push('should not have duplicate items');\n      }\n\n      const hasAdditionalItems = typeof schema.additionalItems === 'undefined' || Boolean(schema.additionalItems);\n      let items = '';\n\n      if (schema.items) {\n        if (Array.isArray(schema.items) && schema.items.length > 0) {\n          items = `${\n          /** @type {Array<Schema>} */\n          schema.items.map(item => formatInnerSchema(item)).join(', ')}`;\n\n          if (hasAdditionalItems) {\n            if (schema.additionalItems && isObject(schema.additionalItems) && Object.keys(schema.additionalItems).length > 0) {\n              hints.push(`additional items should be ${formatInnerSchema(schema.additionalItems)}`);\n            }\n          }\n        } else if (schema.items && Object.keys(schema.items).length > 0) {\n          // \"additionalItems\" is ignored\n          items = `${formatInnerSchema(schema.items)}`;\n        } else {\n          // Fallback for empty `items` value\n          items = 'any';\n        }\n      } else {\n        // \"additionalItems\" is ignored\n        items = 'any';\n      }\n\n      if (schema.contains && Object.keys(schema.contains).length > 0) {\n        hints.push(`should contains at least one ${this.formatSchema(schema.contains)} item`);\n      }\n\n      return `[${items}${hasAdditionalItems ? ', ...' : ''}]${hints.length > 0 ? ` (${hints.join(', ')})` : ''}`;\n    }\n\n    if (likeObject(schema)) {\n      // not logic already applied in formatValidationError\n      newLogic = true;\n      const hints = [];\n\n      if (typeof schema.minProperties === 'number') {\n        hints.push(`should not have fewer than ${schema.minProperties} ${schema.minProperties > 1 ? 'properties' : 'property'}`);\n      }\n\n      if (typeof schema.maxProperties === 'number') {\n        hints.push(`should not have more than ${schema.maxProperties} ${schema.minProperties && schema.minProperties > 1 ? 'properties' : 'property'}`);\n      }\n\n      if (schema.patternProperties && Object.keys(schema.patternProperties).length > 0) {\n        const patternProperties = Object.keys(schema.patternProperties);\n        hints.push(`additional property names should match pattern${patternProperties.length > 1 ? 's' : ''} ${patternProperties.map(pattern => JSON.stringify(pattern)).join(' | ')}`);\n      }\n\n      const properties = schema.properties ? Object.keys(schema.properties) : [];\n      const required = schema.required ? schema.required : [];\n      const allProperties = [...new Set(\n      /** @type {Array<string>} */\n      [].concat(required).concat(properties))];\n      const objectStructure = allProperties.map(property => {\n        const isRequired = required.includes(property); // Some properties need quotes, maybe we should add check\n        // Maybe we should output type of property (`foo: string`), but it is looks very unreadable\n\n        return `${property}${isRequired ? '' : '?'}`;\n      }).concat(typeof schema.additionalProperties === 'undefined' || Boolean(schema.additionalProperties) ? schema.additionalProperties && isObject(schema.additionalProperties) ? [`<key>: ${formatInnerSchema(schema.additionalProperties)}`] : ['\u2026'] : []).join(', ');\n      const {\n        dependencies,\n        propertyNames,\n        patternRequired\n      } =\n      /** @type {Schema & {patternRequired?: Array<string>;}} */\n      schema;\n\n      if (dependencies) {\n        Object.keys(dependencies).forEach(dependencyName => {\n          const dependency = dependencies[dependencyName];\n\n          if (Array.isArray(dependency)) {\n            hints.push(`should have ${dependency.length > 1 ? 'properties' : 'property'} ${dependency.map(dep => `'${dep}'`).join(', ')} when property '${dependencyName}' is present`);\n          } else {\n            hints.push(`should be valid according to the schema ${formatInnerSchema(dependency)} when property '${dependencyName}' is present`);\n          }\n        });\n      }\n\n      if (propertyNames && Object.keys(propertyNames).length > 0) {\n        hints.push(`each property name should match format ${JSON.stringify(schema.propertyNames.format)}`);\n      }\n\n      if (patternRequired && patternRequired.length > 0) {\n        hints.push(`should have property matching pattern ${patternRequired.map(\n        /**\n         * @param {string} item\n         * @returns {string}\n         */\n        item => JSON.stringify(item))}`);\n      }\n\n      return `object {${objectStructure ? ` ${objectStructure} ` : ''}}${hints.length > 0 ? ` (${hints.join(', ')})` : ''}`;\n    }\n\n    if (likeNull(schema)) {\n      return `${logic ? '' : 'non-'}null`;\n    }\n\n    if (Array.isArray(schema.type)) {\n      // not logic already applied in formatValidationError\n      return `${schema.type.join(' | ')}`;\n    } // Fallback for unknown keywords\n    // not logic already applied in formatValidationError\n\n    /* istanbul ignore next */\n\n\n    return JSON.stringify(schema, null, 2);\n  }\n  /**\n   * @param {Schema=} schemaPart\n   * @param {(boolean | Array<string>)=} additionalPath\n   * @param {boolean=} needDot\n   * @param {boolean=} logic\n   * @returns {string}\n   */\n\n\n  getSchemaPartText(schemaPart, additionalPath, needDot = false, logic = true) {\n    if (!schemaPart) {\n      return '';\n    }\n\n    if (Array.isArray(additionalPath)) {\n      for (let i = 0; i < additionalPath.length; i++) {\n        /** @type {Schema | undefined} */\n        const inner = schemaPart[\n        /** @type {keyof Schema} */\n        additionalPath[i]];\n\n        if (inner) {\n          // eslint-disable-next-line no-param-reassign\n          schemaPart = inner;\n        } else {\n          break;\n        }\n      }\n    }\n\n    while (schemaPart.$ref) {\n      // eslint-disable-next-line no-param-reassign\n      schemaPart = this.getSchemaPart(schemaPart.$ref);\n    }\n\n    let schemaText = `${this.formatSchema(schemaPart, logic)}${needDot ? '.' : ''}`;\n\n    if (schemaPart.description) {\n      schemaText += `\\n-> ${schemaPart.description}`;\n    }\n\n    return schemaText;\n  }\n  /**\n   * @param {Schema=} schemaPart\n   * @returns {string}\n   */\n\n\n  getSchemaPartDescription(schemaPart) {\n    if (!schemaPart) {\n      return '';\n    }\n\n    while (schemaPart.$ref) {\n      // eslint-disable-next-line no-param-reassign\n      schemaPart = this.getSchemaPart(schemaPart.$ref);\n    }\n\n    if (schemaPart.description) {\n      return `\\n-> ${schemaPart.description}`;\n    }\n\n    return '';\n  }\n  /**\n   * @param {SchemaUtilErrorObject} error\n   * @returns {string}\n   */\n\n\n  formatValidationError(error) {\n    const {\n      keyword,\n      dataPath: errorDataPath\n    } = error;\n    const dataPath = `${this.baseDataPath}${errorDataPath}`;\n\n    switch (keyword) {\n      case 'type':\n        {\n          const {\n            parentSchema,\n            params\n          } = error; // eslint-disable-next-line default-case\n\n          switch (\n          /** @type {import(\"ajv\").TypeParams} */\n          params.type) {\n            case 'number':\n              return `${dataPath} should be a ${this.getSchemaPartText(parentSchema, false, true)}`;\n\n            case 'integer':\n              return `${dataPath} should be a ${this.getSchemaPartText(parentSchema, false, true)}`;\n\n            case 'string':\n              return `${dataPath} should be a ${this.getSchemaPartText(parentSchema, false, true)}`;\n\n            case 'boolean':\n              return `${dataPath} should be a ${this.getSchemaPartText(parentSchema, false, true)}`;\n\n            case 'array':\n              return `${dataPath} should be an array:\\n${this.getSchemaPartText(parentSchema)}`;\n\n            case 'object':\n              return `${dataPath} should be an object:\\n${this.getSchemaPartText(parentSchema)}`;\n\n            case 'null':\n              return `${dataPath} should be a ${this.getSchemaPartText(parentSchema, false, true)}`;\n\n            default:\n              return `${dataPath} should be:\\n${this.getSchemaPartText(parentSchema)}`;\n          }\n        }\n\n      case 'instanceof':\n        {\n          const {\n            parentSchema\n          } = error;\n          return `${dataPath} should be an instance of ${this.getSchemaPartText(parentSchema, false, true)}`;\n        }\n\n      case 'pattern':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            pattern\n          } =\n          /** @type {import(\"ajv\").PatternParams} */\n          params;\n          return `${dataPath} should match pattern ${JSON.stringify(pattern)}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'format':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            format\n          } =\n          /** @type {import(\"ajv\").FormatParams} */\n          params;\n          return `${dataPath} should match format ${JSON.stringify(format)}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'formatMinimum':\n      case 'formatMaximum':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            comparison,\n            limit\n          } =\n          /** @type {import(\"ajv\").ComparisonParams} */\n          params;\n          return `${dataPath} should be ${comparison} ${JSON.stringify(limit)}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'minimum':\n      case 'maximum':\n      case 'exclusiveMinimum':\n      case 'exclusiveMaximum':\n        {\n          const {\n            parentSchema,\n            params\n          } = error;\n          const {\n            comparison,\n            limit\n          } =\n          /** @type {import(\"ajv\").ComparisonParams} */\n          params;\n          const [, ...hints] = getHints(\n          /** @type {Schema} */\n          parentSchema, true);\n\n          if (hints.length === 0) {\n            hints.push(`should be ${comparison} ${limit}`);\n          }\n\n          return `${dataPath} ${hints.join(' ')}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'multipleOf':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            multipleOf\n          } =\n          /** @type {import(\"ajv\").MultipleOfParams} */\n          params;\n          return `${dataPath} should be multiple of ${multipleOf}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'patternRequired':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            missingPattern\n          } =\n          /** @type {import(\"ajv\").PatternRequiredParams} */\n          params;\n          return `${dataPath} should have property matching pattern ${JSON.stringify(missingPattern)}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'minLength':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n\n          if (limit === 1) {\n            return `${dataPath} should be an non-empty string${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n          }\n\n          const length = limit - 1;\n          return `${dataPath} should be longer than ${length} character${length > 1 ? 's' : ''}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'minItems':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n\n          if (limit === 1) {\n            return `${dataPath} should be an non-empty array${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n          }\n\n          return `${dataPath} should not have fewer than ${limit} items${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'minProperties':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n\n          if (limit === 1) {\n            return `${dataPath} should be an non-empty object${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n          }\n\n          return `${dataPath} should not have fewer than ${limit} properties${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'maxLength':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n          const max = limit + 1;\n          return `${dataPath} should be shorter than ${max} character${max > 1 ? 's' : ''}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'maxItems':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n          return `${dataPath} should not have more than ${limit} items${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'maxProperties':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n          return `${dataPath} should not have more than ${limit} properties${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'uniqueItems':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            i\n          } =\n          /** @type {import(\"ajv\").UniqueItemsParams} */\n          params;\n          return `${dataPath} should not contain the item '${error.data[i]}' twice${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'additionalItems':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n          return `${dataPath} should not have more than ${limit} items${getSchemaNonTypes(parentSchema)}. These items are valid:\\n${this.getSchemaPartText(parentSchema)}`;\n        }\n\n      case 'contains':\n        {\n          const {\n            parentSchema\n          } = error;\n          return `${dataPath} should contains at least one ${this.getSchemaPartText(parentSchema, ['contains'])} item${getSchemaNonTypes(parentSchema)}.`;\n        }\n\n      case 'required':\n        {\n          const {\n            parentSchema,\n            params\n          } = error;\n          const missingProperty =\n          /** @type {import(\"ajv\").DependenciesParams} */\n          params.missingProperty.replace(/^\\./, '');\n          const hasProperty = parentSchema && Boolean(\n          /** @type {Schema} */\n          parentSchema.properties &&\n          /** @type {Schema} */\n          parentSchema.properties[missingProperty]);\n          return `${dataPath} misses the property '${missingProperty}'${getSchemaNonTypes(parentSchema)}.${hasProperty ? ` Should be:\\n${this.getSchemaPartText(parentSchema, ['properties', missingProperty])}` : this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'additionalProperties':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            additionalProperty\n          } =\n          /** @type {import(\"ajv\").AdditionalPropertiesParams} */\n          params;\n          return `${dataPath} has an unknown property '${additionalProperty}'${getSchemaNonTypes(parentSchema)}. These properties are valid:\\n${this.getSchemaPartText(parentSchema)}`;\n        }\n\n      case 'dependencies':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            property,\n            deps\n          } =\n          /** @type {import(\"ajv\").DependenciesParams} */\n          params;\n          const dependencies = deps.split(',').map(\n          /**\n           * @param {string} dep\n           * @returns {string}\n           */\n          dep => `'${dep.trim()}'`).join(', ');\n          return `${dataPath} should have properties ${dependencies} when property '${property}' is present${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'propertyNames':\n        {\n          const {\n            params,\n            parentSchema,\n            schema\n          } = error;\n          const {\n            propertyName\n          } =\n          /** @type {import(\"ajv\").PropertyNamesParams} */\n          params;\n          return `${dataPath} property name '${propertyName}' is invalid${getSchemaNonTypes(parentSchema)}. Property names should be match format ${JSON.stringify(schema.format)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'enum':\n        {\n          const {\n            parentSchema\n          } = error;\n\n          if (parentSchema &&\n          /** @type {Schema} */\n          parentSchema.enum &&\n          /** @type {Schema} */\n          parentSchema.enum.length === 1) {\n            return `${dataPath} should be ${this.getSchemaPartText(parentSchema, false, true)}`;\n          }\n\n          return `${dataPath} should be one of these:\\n${this.getSchemaPartText(parentSchema)}`;\n        }\n\n      case 'const':\n        {\n          const {\n            parentSchema\n          } = error;\n          return `${dataPath} should be equal to constant ${this.getSchemaPartText(parentSchema, false, true)}`;\n        }\n\n      case 'not':\n        {\n          const postfix = likeObject(\n          /** @type {Schema} */\n          error.parentSchema) ? `\\n${this.getSchemaPartText(error.parentSchema)}` : '';\n          const schemaOutput = this.getSchemaPartText(error.schema, false, false, false);\n\n          if (canApplyNot(error.schema)) {\n            return `${dataPath} should be any ${schemaOutput}${postfix}.`;\n          }\n\n          const {\n            schema,\n            parentSchema\n          } = error;\n          return `${dataPath} should not be ${this.getSchemaPartText(schema, false, true)}${parentSchema && likeObject(parentSchema) ? `\\n${this.getSchemaPartText(parentSchema)}` : ''}`;\n        }\n\n      case 'oneOf':\n      case 'anyOf':\n        {\n          const {\n            parentSchema,\n            children\n          } = error;\n\n          if (children && children.length > 0) {\n            if (error.schema.length === 1) {\n              const lastChild = children[children.length - 1];\n              const remainingChildren = children.slice(0, children.length - 1);\n              return this.formatValidationError(Object.assign({}, lastChild, {\n                children: remainingChildren,\n                parentSchema: Object.assign({}, parentSchema, lastChild.parentSchema)\n              }));\n            }\n\n            let filteredChildren = filterChildren(children);\n\n            if (filteredChildren.length === 1) {\n              return this.formatValidationError(filteredChildren[0]);\n            }\n\n            filteredChildren = groupChildrenByFirstChild(filteredChildren);\n            return `${dataPath} should be one of these:\\n${this.getSchemaPartText(parentSchema)}\\nDetails:\\n${filteredChildren.map(\n            /**\n             * @param {SchemaUtilErrorObject} nestedError\n             * @returns {string}\n             */\n            nestedError => ` * ${indent(this.formatValidationError(nestedError), '   ')}`).join('\\n')}`;\n          }\n\n          return `${dataPath} should be one of these:\\n${this.getSchemaPartText(parentSchema)}`;\n        }\n\n      case 'if':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            failingKeyword\n          } =\n          /** @type {import(\"ajv\").IfParams} */\n          params;\n          return `${dataPath} should match \"${failingKeyword}\" schema:\\n${this.getSchemaPartText(parentSchema, [failingKeyword])}`;\n        }\n\n      case 'absolutePath':\n        {\n          const {\n            message,\n            parentSchema\n          } = error;\n          return `${dataPath}: ${message}${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      /* istanbul ignore next */\n\n      default:\n        {\n          const {\n            message,\n            parentSchema\n          } = error;\n          const ErrorInJSON = JSON.stringify(error, null, 2); // For `custom`, `false schema`, `$ref` keywords\n          // Fallback for unknown keywords\n\n          return `${dataPath} ${message} (${ErrorInJSON}).\\n${this.getSchemaPartText(parentSchema, false)}`;\n        }\n    }\n  }\n  /**\n   * @param {Array<SchemaUtilErrorObject>} errors\n   * @returns {string}\n   */\n\n\n  formatValidationErrors(errors) {\n    return errors.map(error => {\n      let formattedError = this.formatValidationError(error);\n\n      if (this.postFormatter) {\n        formattedError = this.postFormatter(formattedError, error);\n      }\n\n      return ` - ${indent(formattedError, '   ')}`;\n    }).join('\\n');\n  }\n\n}\n\nvar _default = ValidationError;\nexports.default = _default;", "import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;", "/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n", "import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n", "import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n", "export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "'use strict';\n\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nmodule.exports = function ucs2length(str) {\n  var length = 0\n    , len = str.length\n    , pos = 0\n    , value;\n  while (pos < len) {\n    length++;\n    value = str.charCodeAt(pos++);\n    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos);\n      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate\n    }\n  }\n  return length;\n};\n", "'use strict';\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: require('fast-deep-equal'),\n  ucs2length: require('./ucs2length'),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  schemaUnknownRules: schemaUnknownRules,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, strictNumbers, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data +\n                           (strictNumbers ? (AND + OK + 'isFinite(' + data + ')') : '') + ')';\n    case 'number': return '(typeof ' + data + EQUAL + '\"' + dataType + '\"' +\n                          (strictNumbers ? (AND + OK + 'isFinite(' + data + ')') : '') + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data, strictNumbers) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, strictNumbers, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, strictNumbers, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction schemaUnknownRules(schema, rules) {\n  if (typeof schema == 'boolean') return;\n  for (var key in schema) if (!rules[key]) return key;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/([^\\\\])' \\+ '/g, '$1');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n", "'use strict';\n\nvar util = require('./util');\n\nmodule.exports = SchemaObject;\n\nfunction SchemaObject(obj) {\n  util.copy(obj, this);\n}\n", "'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n", "'use strict';\n\nvar URI = require('uri-js')\n  , equal = require('fast-deep-equal')\n  , util = require('./util')\n  , SchemaObject = require('./schema_obj')\n  , traverse = require('json-schema-traverse');\n\nmodule.exports = resolve;\n\nresolve.normalizeId = normalizeId;\nresolve.fullPath = getFullPath;\nresolve.url = resolveUrl;\nresolve.ids = resolveIds;\nresolve.inlineRef = inlineRef;\nresolve.schema = resolveSchema;\n\n/**\n * [resolve and compile the references ($ref)]\n * @this   Ajv\n * @param  {Function} compile reference to schema compilation funciton (localCompile)\n * @param  {Object} root object with information about the root schema for the current schema\n * @param  {String} ref reference to resolve\n * @return {Object|Function} schema object (if the schema can be inlined) or validation function\n */\nfunction resolve(compile, root, ref) {\n  /* jshint validthis: true */\n  var refVal = this._refs[ref];\n  if (typeof refVal == 'string') {\n    if (this._refs[refVal]) refVal = this._refs[refVal];\n    else return resolve.call(this, compile, root, refVal);\n  }\n\n  refVal = refVal || this._schemas[ref];\n  if (refVal instanceof SchemaObject) {\n    return inlineRef(refVal.schema, this._opts.inlineRefs)\n            ? refVal.schema\n            : refVal.validate || this._compile(refVal);\n  }\n\n  var res = resolveSchema.call(this, root, ref);\n  var schema, v, baseId;\n  if (res) {\n    schema = res.schema;\n    root = res.root;\n    baseId = res.baseId;\n  }\n\n  if (schema instanceof SchemaObject) {\n    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);\n  } else if (schema !== undefined) {\n    v = inlineRef(schema, this._opts.inlineRefs)\n        ? schema\n        : compile.call(this, schema, root, undefined, baseId);\n  }\n\n  return v;\n}\n\n\n/**\n * Resolve schema, its root and baseId\n * @this Ajv\n * @param  {Object} root root object with properties schema, refVal, refs\n * @param  {String} ref  reference to resolve\n * @return {Object} object with properties schema, root, baseId\n */\nfunction resolveSchema(root, ref) {\n  /* jshint validthis: true */\n  var p = URI.parse(ref)\n    , refPath = _getFullPath(p)\n    , baseId = getFullPath(this._getId(root.schema));\n  if (Object.keys(root.schema).length === 0 || refPath !== baseId) {\n    var id = normalizeId(refPath);\n    var refVal = this._refs[id];\n    if (typeof refVal == 'string') {\n      return resolveRecursive.call(this, root, refVal, p);\n    } else if (refVal instanceof SchemaObject) {\n      if (!refVal.validate) this._compile(refVal);\n      root = refVal;\n    } else {\n      refVal = this._schemas[id];\n      if (refVal instanceof SchemaObject) {\n        if (!refVal.validate) this._compile(refVal);\n        if (id == normalizeId(ref))\n          return { schema: refVal, root: root, baseId: baseId };\n        root = refVal;\n      } else {\n        return;\n      }\n    }\n    if (!root.schema) return;\n    baseId = getFullPath(this._getId(root.schema));\n  }\n  return getJsonPointer.call(this, p, baseId, root.schema, root);\n}\n\n\n/* @this Ajv */\nfunction resolveRecursive(root, ref, parsedRef) {\n  /* jshint validthis: true */\n  var res = resolveSchema.call(this, root, ref);\n  if (res) {\n    var schema = res.schema;\n    var baseId = res.baseId;\n    root = res.root;\n    var id = this._getId(schema);\n    if (id) baseId = resolveUrl(baseId, id);\n    return getJsonPointer.call(this, parsedRef, baseId, schema, root);\n  }\n}\n\n\nvar PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);\n/* @this Ajv */\nfunction getJsonPointer(parsedRef, baseId, schema, root) {\n  /* jshint validthis: true */\n  parsedRef.fragment = parsedRef.fragment || '';\n  if (parsedRef.fragment.slice(0,1) != '/') return;\n  var parts = parsedRef.fragment.split('/');\n\n  for (var i = 1; i < parts.length; i++) {\n    var part = parts[i];\n    if (part) {\n      part = util.unescapeFragment(part);\n      schema = schema[part];\n      if (schema === undefined) break;\n      var id;\n      if (!PREVENT_SCOPE_CHANGE[part]) {\n        id = this._getId(schema);\n        if (id) baseId = resolveUrl(baseId, id);\n        if (schema.$ref) {\n          var $ref = resolveUrl(baseId, schema.$ref);\n          var res = resolveSchema.call(this, root, $ref);\n          if (res) {\n            schema = res.schema;\n            root = res.root;\n            baseId = res.baseId;\n          }\n        }\n      }\n    }\n  }\n  if (schema !== undefined && schema !== root.schema)\n    return { schema: schema, root: root, baseId: baseId };\n}\n\n\nvar SIMPLE_INLINED = util.toHash([\n  'type', 'format', 'pattern',\n  'maxLength', 'minLength',\n  'maxProperties', 'minProperties',\n  'maxItems', 'minItems',\n  'maximum', 'minimum',\n  'uniqueItems', 'multipleOf',\n  'required', 'enum'\n]);\nfunction inlineRef(schema, limit) {\n  if (limit === false) return false;\n  if (limit === undefined || limit === true) return checkNoRef(schema);\n  else if (limit) return countKeys(schema) <= limit;\n}\n\n\nfunction checkNoRef(schema) {\n  var item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return false;\n      item = schema[key];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  }\n  return true;\n}\n\n\nfunction countKeys(schema) {\n  var count = 0, item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object') count += countKeys(item);\n      if (count == Infinity) return Infinity;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return Infinity;\n      if (SIMPLE_INLINED[key]) {\n        count++;\n      } else {\n        item = schema[key];\n        if (typeof item == 'object') count += countKeys(item) + 1;\n        if (count == Infinity) return Infinity;\n      }\n    }\n  }\n  return count;\n}\n\n\nfunction getFullPath(id, normalize) {\n  if (normalize !== false) id = normalizeId(id);\n  var p = URI.parse(id);\n  return _getFullPath(p);\n}\n\n\nfunction _getFullPath(p) {\n  return URI.serialize(p).split('#')[0] + '#';\n}\n\n\nvar TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';\n}\n\n\nfunction resolveUrl(baseId, id) {\n  id = normalizeId(id);\n  return URI.resolve(baseId, id);\n}\n\n\n/* @this Ajv */\nfunction resolveIds(schema) {\n  var schemaId = normalizeId(this._getId(schema));\n  var baseIds = {'': schemaId};\n  var fullPaths = {'': getFullPath(schemaId, false)};\n  var localRefs = {};\n  var self = this;\n\n  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n    if (jsonPtr === '') return;\n    var id = self._getId(sch);\n    var baseId = baseIds[parentJsonPtr];\n    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;\n    if (keyIndex !== undefined)\n      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));\n\n    if (typeof id == 'string') {\n      id = baseId = normalizeId(baseId ? URI.resolve(baseId, id) : id);\n\n      var refVal = self._refs[id];\n      if (typeof refVal == 'string') refVal = self._refs[refVal];\n      if (refVal && refVal.schema) {\n        if (!equal(sch, refVal.schema))\n          throw new Error('id \"' + id + '\" resolves to more than one schema');\n      } else if (id != normalizeId(fullPath)) {\n        if (id[0] == '#') {\n          if (localRefs[id] && !equal(sch, localRefs[id]))\n            throw new Error('id \"' + id + '\" resolves to more than one schema');\n          localRefs[id] = sch;\n        } else {\n          self._refs[id] = fullPath;\n        }\n      }\n    }\n    baseIds[jsonPtr] = baseId;\n    fullPaths[jsonPtr] = fullPath;\n  });\n\n  return localRefs;\n}\n", "'use strict';\n\nvar resolve = require('./resolve');\n\nmodule.exports = {\n  Validation: errorSubclass(ValidationError),\n  MissingRef: errorSubclass(MissingRefError)\n};\n\n\nfunction ValidationError(errors) {\n  this.message = 'validation failed';\n  this.errors = errors;\n  this.ajv = this.validation = true;\n}\n\n\nMissingRefError.message = function (baseId, ref) {\n  return 'can\\'t resolve reference ' + ref + ' from id ' + baseId;\n};\n\n\nfunction MissingRefError(baseId, ref, message) {\n  this.message = message || MissingRefError.message(baseId, ref);\n  this.missingRef = resolve.url(baseId, ref);\n  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));\n}\n\n\nfunction errorSubclass(Subclass) {\n  Subclass.prototype = Object.create(Error.prototype);\n  Subclass.prototype.constructor = Subclass;\n  return Subclass;\n}\n", "'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n", "'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.opts.strictKeywords) {\n    var $unknownKwd = it.util.schemaUnknownRules(it.schema, it.RULES.keywords);\n    if ($unknownKwd) {\n      var $keywordsMsg = 'unknown keyword: ' + $unknownKwd;\n      if (it.opts.strictKeywords === 'log') it.logger.warn($keywordsMsg);\n      else throw new Error($keywordsMsg);\n    }\n  }\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [\"\"];\n    if (it.schema.default !== undefined && it.opts.useDefaults && it.opts.strictDefaults) {\n      var $defaultMsg = 'default is ignored in the schema root';\n      if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n      else throw new Error($defaultMsg);\n    }\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, it.opts.strictNumbers, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; var ' + ($coerced) + ' = undefined; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ') && ' + ($data) + '.length == 1) { ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + '; if (' + (it.util.checkDataType(it.schema.type, $data, it.opts.strictNumbers)) + ') ' + ($coerced) + ' = ' + ($data) + '; } ';\n        }\n        out += ' if (' + ($coerced) + ' !== undefined) ; ';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($type == 'string') {\n              out += ' else if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' else if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' else if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' else if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' else if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' else {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } if (' + ($coerced) + ' !== undefined) {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data, it.opts.strictNumbers)) + ') { ';\n          }\n          if (it.opts.useDefaults) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n", "'use strict';\n\nvar resolve = require('./resolve')\n  , util = require('./util')\n  , errorClasses = require('./error_classes')\n  , stableStringify = require('fast-json-stable-stringify');\n\nvar validateGenerator = require('../dotjs/validate');\n\n/**\n * Functions below are used inside compiled validations function\n */\n\nvar ucs2length = util.ucs2length;\nvar equal = require('fast-deep-equal');\n\n// this error is thrown by async schemas to return validation errors via exception\nvar ValidationError = errorClasses.Validation;\n\nmodule.exports = compile;\n\n\n/**\n * Compiles schema to validation function\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Object} root object with information about the root schema for this schema\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n * @param  {String} baseId base ID for IDs in the schema\n * @return {Function} validation function\n */\nfunction compile(schema, root, localRefs, baseId) {\n  /* jshint validthis: true, evil: true */\n  /* eslint no-shadow: 0 */\n  var self = this\n    , opts = this._opts\n    , refVal = [ undefined ]\n    , refs = {}\n    , patterns = []\n    , patternsHash = {}\n    , defaults = []\n    , defaultsHash = {}\n    , customRules = [];\n\n  root = root || { schema: schema, refVal: refVal, refs: refs };\n\n  var c = checkCompiling.call(this, schema, root, baseId);\n  var compilation = this._compilations[c.index];\n  if (c.compiling) return (compilation.callValidate = callValidate);\n\n  var formats = this._formats;\n  var RULES = this.RULES;\n\n  try {\n    var v = localCompile(schema, root, localRefs, baseId);\n    compilation.validate = v;\n    var cv = compilation.callValidate;\n    if (cv) {\n      cv.schema = v.schema;\n      cv.errors = null;\n      cv.refs = v.refs;\n      cv.refVal = v.refVal;\n      cv.root = v.root;\n      cv.$async = v.$async;\n      if (opts.sourceCode) cv.source = v.source;\n    }\n    return v;\n  } finally {\n    endCompiling.call(this, schema, root, baseId);\n  }\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var validate = compilation.validate;\n    var result = validate.apply(this, arguments);\n    callValidate.errors = validate.errors;\n    return result;\n  }\n\n  function localCompile(_schema, _root, localRefs, baseId) {\n    var isRoot = !_root || (_root && _root.schema == _schema);\n    if (_root.schema != root.schema)\n      return compile.call(self, _schema, _root, localRefs, baseId);\n\n    var $async = _schema.$async === true;\n\n    var sourceCode = validateGenerator({\n      isTop: true,\n      schema: _schema,\n      isRoot: isRoot,\n      baseId: baseId,\n      root: _root,\n      schemaPath: '',\n      errSchemaPath: '#',\n      errorPath: '\"\"',\n      MissingRefError: errorClasses.MissingRef,\n      RULES: RULES,\n      validate: validateGenerator,\n      util: util,\n      resolve: resolve,\n      resolveRef: resolveRef,\n      usePattern: usePattern,\n      useDefault: useDefault,\n      useCustomRule: useCustomRule,\n      opts: opts,\n      formats: formats,\n      logger: self.logger,\n      self: self\n    });\n\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                   + sourceCode;\n\n    if (opts.processCode) sourceCode = opts.processCode(sourceCode, _schema);\n    // console.log('\\n\\n\\n *** \\n', JSON.stringify(sourceCode));\n    var validate;\n    try {\n      var makeValidate = new Function(\n        'self',\n        'RULES',\n        'formats',\n        'root',\n        'refVal',\n        'defaults',\n        'customRules',\n        'equal',\n        'ucs2length',\n        'ValidationError',\n        sourceCode\n      );\n\n      validate = makeValidate(\n        self,\n        RULES,\n        formats,\n        root,\n        refVal,\n        defaults,\n        customRules,\n        equal,\n        ucs2length,\n        ValidationError\n      );\n\n      refVal[0] = validate;\n    } catch(e) {\n      self.logger.error('Error compiling schema, function code:', sourceCode);\n      throw e;\n    }\n\n    validate.schema = _schema;\n    validate.errors = null;\n    validate.refs = refs;\n    validate.refVal = refVal;\n    validate.root = isRoot ? validate : _root;\n    if ($async) validate.$async = true;\n    if (opts.sourceCode === true) {\n      validate.source = {\n        code: sourceCode,\n        patterns: patterns,\n        defaults: defaults\n      };\n    }\n\n    return validate;\n  }\n\n  function resolveRef(baseId, ref, isRoot) {\n    ref = resolve.url(baseId, ref);\n    var refIndex = refs[ref];\n    var _refVal, refCode;\n    if (refIndex !== undefined) {\n      _refVal = refVal[refIndex];\n      refCode = 'refVal[' + refIndex + ']';\n      return resolvedRef(_refVal, refCode);\n    }\n    if (!isRoot && root.refs) {\n      var rootRefId = root.refs[ref];\n      if (rootRefId !== undefined) {\n        _refVal = root.refVal[rootRefId];\n        refCode = addLocalRef(ref, _refVal);\n        return resolvedRef(_refVal, refCode);\n      }\n    }\n\n    refCode = addLocalRef(ref);\n    var v = resolve.call(self, localCompile, root, ref);\n    if (v === undefined) {\n      var localSchema = localRefs && localRefs[ref];\n      if (localSchema) {\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\n            ? localSchema\n            : compile.call(self, localSchema, root, localRefs, baseId);\n      }\n    }\n\n    if (v === undefined) {\n      removeLocalRef(ref);\n    } else {\n      replaceLocalRef(ref, v);\n      return resolvedRef(v, refCode);\n    }\n  }\n\n  function addLocalRef(ref, v) {\n    var refId = refVal.length;\n    refVal[refId] = v;\n    refs[ref] = refId;\n    return 'refVal' + refId;\n  }\n\n  function removeLocalRef(ref) {\n    delete refs[ref];\n  }\n\n  function replaceLocalRef(ref, v) {\n    var refId = refs[ref];\n    refVal[refId] = v;\n  }\n\n  function resolvedRef(refVal, code) {\n    return typeof refVal == 'object' || typeof refVal == 'boolean'\n            ? { code: code, schema: refVal, inline: true }\n            : { code: code, $async: refVal && !!refVal.$async };\n  }\n\n  function usePattern(regexStr) {\n    var index = patternsHash[regexStr];\n    if (index === undefined) {\n      index = patternsHash[regexStr] = patterns.length;\n      patterns[index] = regexStr;\n    }\n    return 'pattern' + index;\n  }\n\n  function useDefault(value) {\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n        return '' + value;\n      case 'string':\n        return util.toQuotedString(value);\n      case 'object':\n        if (value === null) return 'null';\n        var valueStr = stableStringify(value);\n        var index = defaultsHash[valueStr];\n        if (index === undefined) {\n          index = defaultsHash[valueStr] = defaults.length;\n          defaults[index] = value;\n        }\n        return 'default' + index;\n    }\n  }\n\n  function useCustomRule(rule, schema, parentSchema, it) {\n    if (self._opts.validateSchema !== false) {\n      var deps = rule.definition.dependencies;\n      if (deps && !deps.every(function(keyword) {\n        return Object.prototype.hasOwnProperty.call(parentSchema, keyword);\n      }))\n        throw new Error('parent schema must have all required keywords: ' + deps.join(','));\n\n      var validateSchema = rule.definition.validateSchema;\n      if (validateSchema) {\n        var valid = validateSchema(schema);\n        if (!valid) {\n          var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n          if (self._opts.validateSchema == 'log') self.logger.error(message);\n          else throw new Error(message);\n        }\n      }\n    }\n\n    var compile = rule.definition.compile\n      , inline = rule.definition.inline\n      , macro = rule.definition.macro;\n\n    var validate;\n    if (compile) {\n      validate = compile.call(self, schema, parentSchema, it);\n    } else if (macro) {\n      validate = macro.call(self, schema, parentSchema, it);\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\n    } else if (inline) {\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n    } else {\n      validate = rule.definition.validate;\n      if (!validate) return;\n    }\n\n    if (validate === undefined)\n      throw new Error('custom keyword \"' + rule.keyword + '\"failed to compile');\n\n    var index = customRules.length;\n    customRules[index] = validate;\n\n    return {\n      code: 'customRule' + index,\n      validate: validate\n    };\n  }\n}\n\n\n/**\n * Checks if the schema is currently compiled\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n */\nfunction checkCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var index = compIndex.call(this, schema, root, baseId);\n  if (index >= 0) return { index: index, compiling: true };\n  index = this._compilations.length;\n  this._compilations[index] = {\n    schema: schema,\n    root: root,\n    baseId: baseId\n  };\n  return { index: index, compiling: false };\n}\n\n\n/**\n * Removes the schema from the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n */\nfunction endCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var i = compIndex.call(this, schema, root, baseId);\n  if (i >= 0) this._compilations.splice(i, 1);\n}\n\n\n/**\n * Index of schema compilation in the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Integer} compilation index\n */\nfunction compIndex(schema, root, baseId) {\n  /* jshint validthis: true */\n  for (var i=0; i<this._compilations.length; i++) {\n    var c = this._compilations[i];\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n  }\n  return -1;\n}\n\n\nfunction patternCode(i, patterns) {\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n}\n\n\nfunction defaultCode(i) {\n  return 'var default' + i + ' = defaults[' + i + '];';\n}\n\n\nfunction refValCode(i, refVal) {\n  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\n}\n\n\nfunction customRuleCode(i) {\n  return 'var customRule' + i + ' = customRules[' + i + '];';\n}\n\n\nfunction vars(arr, statement) {\n  if (!arr.length) return '';\n  var code = '';\n  for (var i=0; i<arr.length; i++)\n    code += statement(i, arr);\n  return code;\n}\n", "'use strict';\n\n\nvar Cache = module.exports = function Cache() {\n  this._cache = {};\n};\n\n\nCache.prototype.put = function Cache_put(key, value) {\n  this._cache[key] = value;\n};\n\n\nCache.prototype.get = function Cache_get(key) {\n  return this._cache[key];\n};\n\n\nCache.prototype.del = function Cache_del(key) {\n  delete this._cache[key];\n};\n\n\nCache.prototype.clear = function Cache_clear() {\n  this._cache = {};\n};\n", "'use strict';\n\nvar util = require('./util');\n\nvar DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nvar DAYS = [0,31,28,31,30,31,30,31,31,30,31,30,31];\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nvar HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\nvar URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nvar URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nvar URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\n// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.\n// var URL = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nvar URL = /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-)*(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-)*(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i;\nvar UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nvar JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nvar JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nvar RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n\n\nmodule.exports = formats;\n\nfunction formats(mode) {\n  mode = mode == 'full' ? 'full' : 'fast';\n  return util.copy(formats[mode]);\n}\n\n\nformats.fast = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+\\-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n  hostname: HOSTNAME,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: UUID,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nformats.full = {\n  date: date,\n  time: time,\n  'date-time': date_time,\n  uri: uri,\n  'uri-reference': URIREF,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: HOSTNAME,\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  uuid: UUID,\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nfunction isLeapYear(year) {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\n\nfunction date(str) {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  var matches = str.match(DATE);\n  if (!matches) return false;\n\n  var year = +matches[1];\n  var month = +matches[2];\n  var day = +matches[3];\n\n  return month >= 1 && month <= 12 && day >= 1 &&\n          day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\n\n\nfunction time(str, full) {\n  var matches = str.match(TIME);\n  if (!matches) return false;\n\n  var hour = matches[1];\n  var minute = matches[2];\n  var second = matches[3];\n  var timeZone = matches[5];\n  return ((hour <= 23 && minute <= 59 && second <= 59) ||\n          (hour == 23 && minute == 59 && second == 60)) &&\n         (!full || timeZone);\n}\n\n\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  var dateTime = str.split(DATE_TIME_SEPARATOR);\n  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);\n}\n\n\nvar NOT_URI_FRAGMENT = /\\/|:/;\nfunction uri(str) {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\n\n\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return false;\n  try {\n    new RegExp(str);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n", "'use strict';\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { await ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return (it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all));\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_comment(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $comment = it.util.toQuotedString($schema);\n  if (it.opts.$comment === true) {\n    out += ' console.log(' + ($comment) + ');';\n  } else if (typeof it.opts.$comment == 'function') {\n    out += ' self._opts.$comment(' + ($comment) + ', ' + (it.util.toQuotedString($errSchemaPath)) + ', validate.root.schema);';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!$isData) {\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('const') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValue: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to constant\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId,\n    $nonEmptySchema = (it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all));\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($nonEmptySchema) {\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    out += ' if (' + ($nextValid) + ') break; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\n  } else {\n    out += ' if (' + ($data) + '.length == 0) {';\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('contains') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should contain a valid item\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } else { ';\n  if ($nonEmptySchema) {\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n  }\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_dependencies(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $schemaDeps = {},\n    $propertyDeps = {},\n    $ownProperties = it.opts.ownProperties;\n  for ($property in $schema) {\n    if ($property == '__proto__') continue;\n    var $sch = $schema[$property];\n    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;\n    $deps[$property] = $sch;\n  }\n  out += 'var ' + ($errs) + ' = errors;';\n  var $currentErrorPath = it.errorPath;\n  out += 'var missing' + ($lvl) + ';';\n  for (var $property in $propertyDeps) {\n    $deps = $propertyDeps[$property];\n    if ($deps.length) {\n      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      if ($breakOnError) {\n        out += ' && ( ';\n        var arr1 = $deps;\n        if (arr1) {\n          var $propertyKey, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $propertyKey = arr1[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ')) {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should have ';\n            if ($deps.length == 1) {\n              out += 'property ' + (it.util.escapeQuotes($deps[0]));\n            } else {\n              out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n            }\n            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      } else {\n        out += ' ) { ';\n        var arr2 = $deps;\n        if (arr2) {\n          var $propertyKey, i2 = -1,\n            l2 = arr2.length - 1;\n          while (i2 < l2) {\n            $propertyKey = arr2[i2 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should have ';\n                if ($deps.length == 1) {\n                  out += 'property ' + (it.util.escapeQuotes($deps[0]));\n                } else {\n                  out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n                }\n                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n      out += ' }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  it.errorPath = $currentErrorPath;\n  var $currentBaseId = $it.baseId;\n  for (var $property in $schemaDeps) {\n    var $sch = $schemaDeps[$property];\n    if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      out += ') { ';\n      $it.schema = $sch;\n      $it.schemaPath = $schemaPath + it.util.getProperty($property);\n      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_enum(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $i = 'i' + $lvl,\n    $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ';';\n  if ($isData) {\n    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n  }\n  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';\n  if ($isData) {\n    out += '  }  ';\n  }\n  out += ' if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('enum') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to one of the allowed values\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl,\n      $isObject = 'isObject' + $lvl,\n      $formatType = 'formatType' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\'string\\'; if (' + ($isObject) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats != 'ignore') {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\'' + ($ruleType) + '\\' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? await ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats == 'ignore') {\n        it.logger.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    var $formatType = $isObject && $format.type || 'string';\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($formatType != $ruleType) {\n      if ($breakOnError) {\n        out += ' if (true) { ';\n      }\n      return out;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(await ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_if(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $thenSch = it.schema['then'],\n    $elseSch = it.schema['else'],\n    $thenPresent = $thenSch !== undefined && (it.opts.strictKeywords ? (typeof $thenSch == 'object' && Object.keys($thenSch).length > 0) || $thenSch === false : it.util.schemaHasRules($thenSch, it.RULES.all)),\n    $elsePresent = $elseSch !== undefined && (it.opts.strictKeywords ? (typeof $elseSch == 'object' && Object.keys($elseSch).length > 0) || $elseSch === false : it.util.schemaHasRules($elseSch, it.RULES.all)),\n    $currentBaseId = $it.baseId;\n  if ($thenPresent || $elsePresent) {\n    var $ifClause;\n    $it.createErrors = false;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = true;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    out += '  ' + (it.validate($it)) + ' ';\n    $it.baseId = $currentBaseId;\n    $it.createErrors = true;\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    if ($thenPresent) {\n      out += ' if (' + ($nextValid) + ') {  ';\n      $it.schema = it.schema['then'];\n      $it.schemaPath = it.schemaPath + '.then';\n      $it.errSchemaPath = it.errSchemaPath + '/then';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'then\\'; ';\n      } else {\n        $ifClause = '\\'then\\'';\n      }\n      out += ' } ';\n      if ($elsePresent) {\n        out += ' else { ';\n      }\n    } else {\n      out += ' if (!' + ($nextValid) + ') { ';\n    }\n    if ($elsePresent) {\n      $it.schema = it.schema['else'];\n      $it.schemaPath = it.schemaPath + '.else';\n      $it.errSchemaPath = it.errSchemaPath + '/else';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'else\\'; ';\n      } else {\n        $ifClause = '\\'else\\'';\n      }\n      out += ' } ';\n    }\n    out += ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('if') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { failingKeyword: ' + ($ifClause) + ' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match \"\\' + ' + ($ifClause) + ' + \\'\" schema\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' }   ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_items(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId;\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n    if ($additionalItems === false) {\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + ($valid) + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + ($schema.length) + ' items\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n    if (typeof $additionalItems == 'object' && (it.opts.strictKeywords ? (typeof $additionalItems == 'object' && Object.keys($additionalItems).length > 0) || $additionalItems === false : it.util.schemaHasRules($additionalItems, it.RULES.all))) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n      } else {\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n      }\n      if ($breakOnError) {\n        out += ' if (!' + ($nextValid) + ') break; ';\n      }\n      out += ' } }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    if ($breakOnError) {\n      out += ' if (!' + ($nextValid) + ') break; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<',\n    $errorKeyword = undefined;\n  if (!($isData || typeof $schema == 'number' || $schema === undefined)) {\n    throw new Error($keyword + ' must be number');\n  }\n  if (!($isDataExcl || $schemaExcl === undefined || typeof $schemaExcl == 'number' || typeof $schemaExcl == 'boolean')) {\n    throw new Error($exclusiveKeyword + ' must be number or boolean');\n  }\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $exclType = 'exclType' + $lvl,\n      $exclIsNumber = 'exclIsNumber' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\'boolean\\' && ' + ($exclType) + ' != \\'undefined\\' && ' + ($exclType) + ' != \\'number\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($exclType) + ' == \\'number\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\'; ';\n    if ($schema === undefined) {\n      $errorKeyword = $exclusiveKeyword;\n      $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n      $schemaValue = $schemaValueExcl;\n      $isData = $isDataExcl;\n    }\n  } else {\n    var $exclIsNumber = typeof $schemaExcl == 'number',\n      $opStr = $op;\n    if ($exclIsNumber && $isData) {\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\n    } else {\n      if ($exclIsNumber && $schema === undefined) {\n        $exclusive = true;\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaExcl;\n        $notOp += '=';\n      } else {\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          $exclusive = true;\n          $errorKeyword = $exclusiveKeyword;\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\n    }\n  }\n  $errorKeyword = $errorKeyword || $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' items\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate__limitLength(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxLength' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  if (it.opts.unicode === false) {\n    out += ' ' + ($data) + '.length ';\n  } else {\n    out += ' ucs2length(' + ($data) + ') ';\n  }\n  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitLength') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT be ';\n      if ($keyword == 'maxLength') {\n        out += 'longer';\n      } else {\n        out += 'shorter';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' characters\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate__limitProperties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxProperties' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxProperties') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' properties\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  out += 'var division' + ($lvl) + ';if (';\n  if ($isData) {\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\'number\\' || ';\n  }\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\n  if (it.opts.multipleOfPrecision) {\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\n  } else {\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\n  }\n  out += ' ) ';\n  if ($isData) {\n    out += '  )  ';\n  }\n  out += ' ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('multipleOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be multiple of ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $prevValid = 'prevValid' + $lvl,\n    $passingSchemas = 'passingSchemas' + $lvl;\n  out += 'var ' + ($errs) + ' = errors , ' + ($prevValid) + ' = false , ' + ($valid) + ' = false , ' + ($passingSchemas) + ' = null; ';\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && ' + ($prevValid) + ') { ' + ($valid) + ' = false; ' + ($passingSchemas) + ' = [' + ($passingSchemas) + ', ' + ($i) + ']; } else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') { ' + ($valid) + ' = ' + ($prevValid) + ' = true; ' + ($passingSchemas) + ' = ' + ($i) + '; }';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { passingSchemas: ' + ($passingSchemas) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_pattern(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n  }\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('pattern') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match pattern \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}).filter(notProto),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties).filter(notProto),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) {\n    var $requiredHash = it.util.toHash($required);\n  }\n\n  function notProto(p) {\n    return p !== '__proto__';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 8) {\n          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is an invalid additional property';\n              } else {\n                out += 'should NOT have additional properties';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) {\n            /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr3 = $schemaKeys;\n    if (arr3) {\n      var $propertyKey, i3 = -1,\n        l3 = arr3.length - 1;\n      while (i3 < l3) {\n        $propertyKey = arr3[i3 += 1];\n        var $sch = $schema[$propertyKey];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr4 = $pPropertyKeys;\n    if (arr4) {\n      var $pProperty, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $pProperty = arr4[i4 += 1];\n        var $sch = $pProperties[$pProperty];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + ($errs) + ' = errors;';\n  if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $i = 'i' + $lvl,\n      $invalidName = '\\' + ' + $key + ' + \\'',\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $dataProperties = 'dataProperties' + $lvl,\n      $ownProperties = it.opts.ownProperties,\n      $currentBaseId = it.baseId;\n    if ($ownProperties) {\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\n    }\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\n    var $passData = $key;\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('propertyNames') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\'' + ($invalidName) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'property name \\\\\\'' + ($invalidName) + '\\\\\\' is invalid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    if ($breakOnError) {\n      out += ' break; ';\n    }\n    out += ' } }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_required(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {\n      var $required = [];\n      var arr1 = $schema;\n      if (arr1) {\n        var $property, i1 = -1,\n          l1 = arr1.length - 1;\n        while (i1 < l1) {\n          $property = arr1[i1 += 1];\n          var $propertySch = it.schema.properties[$property];\n          if (!($propertySch && (it.opts.strictKeywords ? (typeof $propertySch == 'object' && Object.keys($propertySch).length > 0) || $propertySch === false : it.util.schemaHasRules($propertySch, it.RULES.all)))) {\n            $required[$required.length] = $property;\n          }\n        }\n      }\n    } else {\n      var $required = $schema;\n    }\n  }\n  if ($isData || $required.length) {\n    var $currentErrorPath = it.errorPath,\n      $loopRequired = $isData || $required.length >= it.opts.loopRequired,\n      $ownProperties = it.opts.ownProperties;\n    if ($breakOnError) {\n      out += ' var missing' + ($lvl) + '; ';\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        out += ' var ' + ($valid) + ' = true; ';\n        if ($isData) {\n          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';\n        if ($ownProperties) {\n          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += '; if (!' + ($valid) + ') break; } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n        out += '  if (!' + ($valid) + ') {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      } else {\n        out += ' if ( ';\n        var arr2 = $required;\n        if (arr2) {\n          var $propertyKey, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $propertyKey = arr2[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ') {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      }\n    } else {\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        if ($isData) {\n          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is a required property';\n              } else {\n                out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';\n        if ($ownProperties) {\n          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += ') {  var err =   '; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n      } else {\n        var arr3 = $required;\n        if (arr3) {\n          var $propertyKey, i3 = -1,\n            l3 = arr3.length - 1;\n          while (i3 < l3) {\n            $propertyKey = arr3[i3 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'';\n                if (it.opts._errorDataPathProperty) {\n                  out += 'is a required property';\n                } else {\n                  out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                }\n                out += '\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n    }\n    it.errorPath = $currentErrorPath;\n  } else if ($breakOnError) {\n    out += ' if (true) {';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\n    if ($isData) {\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'boolean\\') ' + ($valid) + ' = false; else { ';\n    }\n    out += ' var i = ' + ($data) + '.length , ' + ($valid) + ' = true , j; if (i > 1) { ';\n    var $itemType = it.schema.items && it.schema.items.type,\n      $typeIsArray = Array.isArray($itemType);\n    if (!$itemType || $itemType == 'object' || $itemType == 'array' || ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0))) {\n      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } ';\n    } else {\n      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + ($data) + '[i]; ';\n      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');\n      out += ' if (' + (it.util[$method]($itemType, 'item', it.opts.strictNumbers, true)) + ') continue; ';\n      if ($typeIsArray) {\n        out += ' if (typeof item == \\'string\\') item = \\'\"\\' + item; ';\n      }\n      out += ' if (typeof itemIndices[item] == \\'number\\') { ' + ($valid) + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';\n    }\n    out += ' } ';\n    if ($isData) {\n      out += '  }  ';\n    }\n    out += ' if (!' + ($valid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('uniqueItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema:  ';\n        if ($isData) {\n          out += 'validate.schema' + ($schemaPath);\n        } else {\n          out += '' + ($schema);\n        }\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n", "'use strict';\n\n//all requires must be explicit because browserify won't work with dynamic requires\nmodule.exports = {\n  '$ref': require('./ref'),\n  allOf: require('./allOf'),\n  anyOf: require('./anyOf'),\n  '$comment': require('./comment'),\n  const: require('./const'),\n  contains: require('./contains'),\n  dependencies: require('./dependencies'),\n  'enum': require('./enum'),\n  format: require('./format'),\n  'if': require('./if'),\n  items: require('./items'),\n  maximum: require('./_limit'),\n  minimum: require('./_limit'),\n  maxItems: require('./_limitItems'),\n  minItems: require('./_limitItems'),\n  maxLength: require('./_limitLength'),\n  minLength: require('./_limitLength'),\n  maxProperties: require('./_limitProperties'),\n  minProperties: require('./_limitProperties'),\n  multipleOf: require('./multipleOf'),\n  not: require('./not'),\n  oneOf: require('./oneOf'),\n  pattern: require('./pattern'),\n  properties: require('./properties'),\n  propertyNames: require('./propertyNames'),\n  required: require('./required'),\n  uniqueItems: require('./uniqueItems'),\n  validate: require('./validate')\n};\n", "'use strict';\n\nvar ruleModules = require('../dotjs')\n  , toHash = require('./util').toHash;\n\nmodule.exports = function rules() {\n  var RULES = [\n    { type: 'number',\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\n    { type: 'string',\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\n    { type: 'array',\n      rules: [ 'maxItems', 'minItems', 'items', 'contains', 'uniqueItems' ] },\n    { type: 'object',\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if' ] }\n  ];\n\n  var ALL = [ 'type', '$comment' ];\n  var KEYWORDS = [\n    '$schema', '$id', 'id', '$data', '$async', 'title',\n    'description', 'default', 'definitions',\n    'examples', 'readOnly', 'writeOnly',\n    'contentMediaType', 'contentEncoding',\n    'additionalItems', 'then', 'else'\n  ];\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\n  RULES.all = toHash(ALL);\n  RULES.types = toHash(TYPES);\n\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      var implKeywords;\n      if (typeof keyword == 'object') {\n        var key = Object.keys(keyword)[0];\n        implKeywords = keyword[key];\n        keyword = key;\n        implKeywords.forEach(function (k) {\n          ALL.push(k);\n          RULES.all[k] = true;\n        });\n      }\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword],\n        implements: implKeywords\n      };\n      return rule;\n    });\n\n    RULES.all.$comment = {\n      keyword: '$comment',\n      code: ruleModules.$comment\n    };\n\n    if (group.type) RULES.types[group.type] = group;\n  });\n\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.custom = {};\n\n  return RULES;\n};\n", "'use strict';\n\nvar KEYWORDS = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum',\n  'maxLength',\n  'minLength',\n  'pattern',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'maxProperties',\n  'minProperties',\n  'required',\n  'additionalProperties',\n  'enum',\n  'format',\n  'const'\n];\n\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j=1; j<segments.length; j++)\n      keywords = keywords[segments[j]];\n\n    for (j=0; j<KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [\n            schema,\n            { $ref: 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n    }\n  }\n\n  return metaSchema;\n};\n", "'use strict';\n\nvar MissingRefError = require('./error_classes').MissingRef;\n\nmodule.exports = compileAsync;\n\n\n/**\n * Creates validating function for passed schema with asynchronous loading of missing schemas.\n * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n * @this  Ajv\n * @param {Object}   schema schema object\n * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped\n * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.\n * @return {Promise} promise that resolves with a validating function.\n */\nfunction compileAsync(schema, meta, callback) {\n  /* eslint no-shadow: 0 */\n  /* global Promise */\n  /* jshint validthis: true */\n  var self = this;\n  if (typeof this._opts.loadSchema != 'function')\n    throw new Error('options.loadSchema should be a function');\n\n  if (typeof meta == 'function') {\n    callback = meta;\n    meta = undefined;\n  }\n\n  var p = loadMetaSchemaOf(schema).then(function () {\n    var schemaObj = self._addSchema(schema, undefined, meta);\n    return schemaObj.validate || _compileAsync(schemaObj);\n  });\n\n  if (callback) {\n    p.then(\n      function(v) { callback(null, v); },\n      callback\n    );\n  }\n\n  return p;\n\n\n  function loadMetaSchemaOf(sch) {\n    var $schema = sch.$schema;\n    return $schema && !self.getSchema($schema)\n            ? compileAsync.call(self, { $ref: $schema }, true)\n            : Promise.resolve();\n  }\n\n\n  function _compileAsync(schemaObj) {\n    try { return self._compile(schemaObj); }\n    catch(e) {\n      if (e instanceof MissingRefError) return loadMissingSchema(e);\n      throw e;\n    }\n\n\n    function loadMissingSchema(e) {\n      var ref = e.missingSchema;\n      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');\n\n      var schemaPromise = self._loadingSchemas[ref];\n      if (!schemaPromise) {\n        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);\n        schemaPromise.then(removePromise, removePromise);\n      }\n\n      return schemaPromise.then(function (sch) {\n        if (!added(ref)) {\n          return loadMetaSchemaOf(sch).then(function () {\n            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);\n          });\n        }\n      }).then(function() {\n        return _compileAsync(schemaObj);\n      });\n\n      function removePromise() {\n        delete self._loadingSchemas[ref];\n      }\n\n      function added(ref) {\n        return self._refs[ref] || self._schemas[ref];\n      }\n    }\n  }\n}\n", "'use strict';\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n", "'use strict';\n\nvar metaSchema = require('./refs/json-schema-draft-07.json');\n\nmodule.exports = {\n  $id: 'https://github.com/ajv-validator/ajv/blob/master/lib/definition_schema.js',\n  definitions: {\n    simpleTypes: metaSchema.definitions.simpleTypes\n  },\n  type: 'object',\n  dependencies: {\n    schema: ['validate'],\n    $data: ['validate'],\n    statements: ['inline'],\n    valid: {not: {required: ['macro']}}\n  },\n  properties: {\n    type: metaSchema.properties.type,\n    schema: {type: 'boolean'},\n    statements: {type: 'boolean'},\n    dependencies: {\n      type: 'array',\n      items: {type: 'string'}\n    },\n    metaSchema: {type: 'object'},\n    modifying: {type: 'boolean'},\n    valid: {type: 'boolean'},\n    $data: {type: 'boolean'},\n    async: {type: 'boolean'},\n    errors: {\n      anyOf: [\n        {type: 'boolean'},\n        {const: 'full'}\n      ]\n    }\n  }\n};\n", "'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\nvar definitionSchema = require('./definition_schema');\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword,\n  validate: validateKeyword\n};\n\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    this.validateKeyword(definition, true);\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      for (var i=0; i<dataType.length; i++)\n        _addRule(keyword, dataType[i], definition);\n    } else {\n      _addRule(keyword, dataType, definition);\n    }\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if (definition.$data && this._opts.$data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n  return this;\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n\n\n/**\n * Validate keyword definition\n * @this  Ajv\n * @param {Object} definition keyword definition object.\n * @param {Boolean} throwError true to throw exception if definition is invalid\n * @return {boolean} validation result\n */\nfunction validateKeyword(definition, throwError) {\n  validateKeyword.errors = null;\n  var v = this._validateKeyword = this._validateKeyword\n                                  || this.compile(definitionSchema, true);\n\n  if (v(definition)) return true;\n  validateKeyword.errors = v.errors;\n  if (throwError)\n    throw new Error('custom keyword definition is invalid: '  + this.errorsText(v.errors));\n  else\n    return false;\n}\n", "'use strict';\n\nvar compileSchema = require('./compile')\n  , resolve = require('./compile/resolve')\n  , Cache = require('./cache')\n  , SchemaObject = require('./compile/schema_obj')\n  , stableStringify = require('fast-json-stable-stringify')\n  , formats = require('./compile/formats')\n  , rules = require('./compile/rules')\n  , $dataMetaSchema = require('./data')\n  , util = require('./compile/util');\n\nmodule.exports = Ajv;\n\nAjv.prototype.validate = validate;\nAjv.prototype.compile = compile;\nAjv.prototype.addSchema = addSchema;\nAjv.prototype.addMetaSchema = addMetaSchema;\nAjv.prototype.validateSchema = validateSchema;\nAjv.prototype.getSchema = getSchema;\nAjv.prototype.removeSchema = removeSchema;\nAjv.prototype.addFormat = addFormat;\nAjv.prototype.errorsText = errorsText;\n\nAjv.prototype._addSchema = _addSchema;\nAjv.prototype._compile = _compile;\n\nAjv.prototype.compileAsync = require('./compile/async');\nvar customKeyword = require('./keyword');\nAjv.prototype.addKeyword = customKeyword.add;\nAjv.prototype.getKeyword = customKeyword.get;\nAjv.prototype.removeKeyword = customKeyword.remove;\nAjv.prototype.validateKeyword = customKeyword.validate;\n\nvar errorClasses = require('./compile/error_classes');\nAjv.ValidationError = errorClasses.Validation;\nAjv.MissingRefError = errorClasses.MissingRef;\nAjv.$dataMetaSchema = $dataMetaSchema;\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';\n\nvar META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes', 'strictDefaults' ];\nvar META_SUPPORT_DATA = ['/properties'];\n\n/**\n * Creates validator instance.\n * Usage: `Ajv(opts)`\n * @param {Object} opts optional options\n * @return {Object} ajv instance\n */\nfunction Ajv(opts) {\n  if (!(this instanceof Ajv)) return new Ajv(opts);\n  opts = this._opts = util.copy(opts) || {};\n  setLogger(this);\n  this._schemas = {};\n  this._refs = {};\n  this._fragments = {};\n  this._formats = formats(opts.format);\n\n  this._cache = opts.cache || new Cache;\n  this._loadingSchemas = {};\n  this._compilations = [];\n  this.RULES = rules();\n  this._getId = chooseGetId(opts);\n\n  opts.loopRequired = opts.loopRequired || Infinity;\n  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\n  if (opts.serialize === undefined) opts.serialize = stableStringify;\n  this._metaOpts = getMetaSchemaOptions(this);\n\n  if (opts.formats) addInitialFormats(this);\n  if (opts.keywords) addInitialKeywords(this);\n  addDefaultMetaSchema(this);\n  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\n  if (opts.nullable) this.addKeyword('nullable', {metaSchema: {type: 'boolean'}});\n  addInitialSchemas(this);\n}\n\n\n\n/**\n * Validate data using schema\n * Schema will be compiled and cached (using serialized JSON as key. [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used to serialize.\n * @this   Ajv\n * @param  {String|Object} schemaKeyRef key, ref or schema object\n * @param  {Any} data to be validated\n * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\n */\nfunction validate(schemaKeyRef, data) {\n  var v;\n  if (typeof schemaKeyRef == 'string') {\n    v = this.getSchema(schemaKeyRef);\n    if (!v) throw new Error('no schema with key or ref \"' + schemaKeyRef + '\"');\n  } else {\n    var schemaObj = this._addSchema(schemaKeyRef);\n    v = schemaObj.validate || this._compile(schemaObj);\n  }\n\n  var valid = v(data);\n  if (v.$async !== true) this.errors = v.errors;\n  return valid;\n}\n\n\n/**\n * Create validating function for passed schema.\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\n * @return {Function} validating function\n */\nfunction compile(schema, _meta) {\n  var schemaObj = this._addSchema(schema, undefined, _meta);\n  return schemaObj.validate || this._compile(schemaObj);\n}\n\n\n/**\n * Adds schema to the instance.\n * @this   Ajv\n * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\n * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\n * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n * @return {Ajv} this for method chaining\n */\nfunction addSchema(schema, key, _skipValidation, _meta) {\n  if (Array.isArray(schema)){\n    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\n    return this;\n  }\n  var id = this._getId(schema);\n  if (id !== undefined && typeof id != 'string')\n    throw new Error('schema id must be string');\n  key = resolve.normalizeId(key || id);\n  checkUnique(this, key);\n  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\n  return this;\n}\n\n\n/**\n * Add schema that will be used to validate other schemas\n * options in META_IGNORE_OPTIONS are alway set to false\n * @this   Ajv\n * @param {Object} schema schema object\n * @param {String} key optional schema key\n * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\n * @return {Ajv} this for method chaining\n */\nfunction addMetaSchema(schema, key, skipValidation) {\n  this.addSchema(schema, key, skipValidation, true);\n  return this;\n}\n\n\n/**\n * Validate schema\n * @this   Ajv\n * @param {Object} schema schema to validate\n * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\n * @return {Boolean} true if schema is valid\n */\nfunction validateSchema(schema, throwOrLogError) {\n  var $schema = schema.$schema;\n  if ($schema !== undefined && typeof $schema != 'string')\n    throw new Error('$schema must be a string');\n  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\n  if (!$schema) {\n    this.logger.warn('meta-schema not available');\n    this.errors = null;\n    return true;\n  }\n  var valid = this.validate($schema, schema);\n  if (!valid && throwOrLogError) {\n    var message = 'schema is invalid: ' + this.errorsText();\n    if (this._opts.validateSchema == 'log') this.logger.error(message);\n    else throw new Error(message);\n  }\n  return valid;\n}\n\n\nfunction defaultMeta(self) {\n  var meta = self._opts.meta;\n  self._opts.defaultMeta = typeof meta == 'object'\n                            ? self._getId(meta) || meta\n                            : self.getSchema(META_SCHEMA_ID)\n                              ? META_SCHEMA_ID\n                              : undefined;\n  return self._opts.defaultMeta;\n}\n\n\n/**\n * Get compiled schema from the instance by `key` or `ref`.\n * @this   Ajv\n * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\n * @return {Function} schema validating function (with property `schema`).\n */\nfunction getSchema(keyRef) {\n  var schemaObj = _getSchemaObj(this, keyRef);\n  switch (typeof schemaObj) {\n    case 'object': return schemaObj.validate || this._compile(schemaObj);\n    case 'string': return this.getSchema(schemaObj);\n    case 'undefined': return _getSchemaFragment(this, keyRef);\n  }\n}\n\n\nfunction _getSchemaFragment(self, ref) {\n  var res = resolve.schema.call(self, { schema: {} }, ref);\n  if (res) {\n    var schema = res.schema\n      , root = res.root\n      , baseId = res.baseId;\n    var v = compileSchema.call(self, schema, root, undefined, baseId);\n    self._fragments[ref] = new SchemaObject({\n      ref: ref,\n      fragment: true,\n      schema: schema,\n      root: root,\n      baseId: baseId,\n      validate: v\n    });\n    return v;\n  }\n}\n\n\nfunction _getSchemaObj(self, keyRef) {\n  keyRef = resolve.normalizeId(keyRef);\n  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\n}\n\n\n/**\n * Remove cached schema(s).\n * If no parameter is passed all schemas but meta-schemas are removed.\n * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n * @this   Ajv\n * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\n * @return {Ajv} this for method chaining\n */\nfunction removeSchema(schemaKeyRef) {\n  if (schemaKeyRef instanceof RegExp) {\n    _removeAllSchemas(this, this._schemas, schemaKeyRef);\n    _removeAllSchemas(this, this._refs, schemaKeyRef);\n    return this;\n  }\n  switch (typeof schemaKeyRef) {\n    case 'undefined':\n      _removeAllSchemas(this, this._schemas);\n      _removeAllSchemas(this, this._refs);\n      this._cache.clear();\n      return this;\n    case 'string':\n      var schemaObj = _getSchemaObj(this, schemaKeyRef);\n      if (schemaObj) this._cache.del(schemaObj.cacheKey);\n      delete this._schemas[schemaKeyRef];\n      delete this._refs[schemaKeyRef];\n      return this;\n    case 'object':\n      var serialize = this._opts.serialize;\n      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\n      this._cache.del(cacheKey);\n      var id = this._getId(schemaKeyRef);\n      if (id) {\n        id = resolve.normalizeId(id);\n        delete this._schemas[id];\n        delete this._refs[id];\n      }\n  }\n  return this;\n}\n\n\nfunction _removeAllSchemas(self, schemas, regex) {\n  for (var keyRef in schemas) {\n    var schemaObj = schemas[keyRef];\n    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\n      self._cache.del(schemaObj.cacheKey);\n      delete schemas[keyRef];\n    }\n  }\n}\n\n\n/* @this   Ajv */\nfunction _addSchema(schema, skipValidation, meta, shouldAddSchema) {\n  if (typeof schema != 'object' && typeof schema != 'boolean')\n    throw new Error('schema should be object or boolean');\n  var serialize = this._opts.serialize;\n  var cacheKey = serialize ? serialize(schema) : schema;\n  var cached = this._cache.get(cacheKey);\n  if (cached) return cached;\n\n  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\n\n  var id = resolve.normalizeId(this._getId(schema));\n  if (id && shouldAddSchema) checkUnique(this, id);\n\n  var willValidate = this._opts.validateSchema !== false && !skipValidation;\n  var recursiveMeta;\n  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\n    this.validateSchema(schema, true);\n\n  var localRefs = resolve.ids.call(this, schema);\n\n  var schemaObj = new SchemaObject({\n    id: id,\n    schema: schema,\n    localRefs: localRefs,\n    cacheKey: cacheKey,\n    meta: meta\n  });\n\n  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\n  this._cache.put(cacheKey, schemaObj);\n\n  if (willValidate && recursiveMeta) this.validateSchema(schema, true);\n\n  return schemaObj;\n}\n\n\n/* @this   Ajv */\nfunction _compile(schemaObj, root) {\n  if (schemaObj.compiling) {\n    schemaObj.validate = callValidate;\n    callValidate.schema = schemaObj.schema;\n    callValidate.errors = null;\n    callValidate.root = root ? root : callValidate;\n    if (schemaObj.schema.$async === true)\n      callValidate.$async = true;\n    return callValidate;\n  }\n  schemaObj.compiling = true;\n\n  var currentOpts;\n  if (schemaObj.meta) {\n    currentOpts = this._opts;\n    this._opts = this._metaOpts;\n  }\n\n  var v;\n  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\n  catch(e) {\n    delete schemaObj.validate;\n    throw e;\n  }\n  finally {\n    schemaObj.compiling = false;\n    if (schemaObj.meta) this._opts = currentOpts;\n  }\n\n  schemaObj.validate = v;\n  schemaObj.refs = v.refs;\n  schemaObj.refVal = v.refVal;\n  schemaObj.root = v.root;\n  return v;\n\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var _validate = schemaObj.validate;\n    var result = _validate.apply(this, arguments);\n    callValidate.errors = _validate.errors;\n    return result;\n  }\n}\n\n\nfunction chooseGetId(opts) {\n  switch (opts.schemaId) {\n    case 'auto': return _get$IdOrId;\n    case 'id': return _getId;\n    default: return _get$Id;\n  }\n}\n\n/* @this   Ajv */\nfunction _getId(schema) {\n  if (schema.$id) this.logger.warn('schema $id ignored', schema.$id);\n  return schema.id;\n}\n\n/* @this   Ajv */\nfunction _get$Id(schema) {\n  if (schema.id) this.logger.warn('schema id ignored', schema.id);\n  return schema.$id;\n}\n\n\nfunction _get$IdOrId(schema) {\n  if (schema.$id && schema.id && schema.$id != schema.id)\n    throw new Error('schema $id is different from id');\n  return schema.$id || schema.id;\n}\n\n\n/**\n * Convert array of error message objects to string\n * @this   Ajv\n * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\n * @param  {Object} options optional options with properties `separator` and `dataVar`.\n * @return {String} human readable string with all errors descriptions\n */\nfunction errorsText(errors, options) {\n  errors = errors || this.errors;\n  if (!errors) return 'No errors';\n  options = options || {};\n  var separator = options.separator === undefined ? ', ' : options.separator;\n  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\n\n  var text = '';\n  for (var i=0; i<errors.length; i++) {\n    var e = errors[i];\n    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\n  }\n  return text.slice(0, -separator.length);\n}\n\n\n/**\n * Add custom format\n * @this   Ajv\n * @param {String} name format name\n * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\n * @return {Ajv} this for method chaining\n */\nfunction addFormat(name, format) {\n  if (typeof format == 'string') format = new RegExp(format);\n  this._formats[name] = format;\n  return this;\n}\n\n\nfunction addDefaultMetaSchema(self) {\n  var $dataSchema;\n  if (self._opts.$data) {\n    $dataSchema = require('./refs/data.json');\n    self.addMetaSchema($dataSchema, $dataSchema.$id, true);\n  }\n  if (self._opts.meta === false) return;\n  var metaSchema = require('./refs/json-schema-draft-07.json');\n  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\n  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\n  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\n}\n\n\nfunction addInitialSchemas(self) {\n  var optsSchemas = self._opts.schemas;\n  if (!optsSchemas) return;\n  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\n  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\n}\n\n\nfunction addInitialFormats(self) {\n  for (var name in self._opts.formats) {\n    var format = self._opts.formats[name];\n    self.addFormat(name, format);\n  }\n}\n\n\nfunction addInitialKeywords(self) {\n  for (var name in self._opts.keywords) {\n    var keyword = self._opts.keywords[name];\n    self.addKeyword(name, keyword);\n  }\n}\n\n\nfunction checkUnique(self, id) {\n  if (self._schemas[id] || self._refs[id])\n    throw new Error('schema with key or id \"' + id + '\" already exists');\n}\n\n\nfunction getMetaSchemaOptions(self) {\n  var metaOpts = util.copy(self._opts);\n  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\n    delete metaOpts[META_IGNORE_OPTIONS[i]];\n  return metaOpts;\n}\n\n\nfunction setLogger(self) {\n  var logger = self._opts.logger;\n  if (logger === false) {\n    self.logger = {log: noop, warn: noop, error: noop};\n  } else {\n    if (logger === undefined) logger = console;\n    if (!(typeof logger == 'object' && logger.log && logger.warn && logger.error))\n      throw new Error('logger must implement log, warn and error methods');\n    self.logger = logger;\n  }\n}\n\n\nfunction noop() {}\n", "'use strict';\n\nvar CONSTRUCTORS = {\n  Object: Object,\n  Array: Array,\n  Function: Function,\n  Number: Number,\n  String: String,\n  Date: Date,\n  RegExp: RegExp\n};\n\nmodule.exports = function defFunc(ajv) {\n  /* istanbul ignore else */\n  if (typeof Buffer != 'undefined')\n    CONSTRUCTORS.Buffer = Buffer;\n\n  /* istanbul ignore else */\n  if (typeof Promise != 'undefined')\n    CONSTRUCTORS.Promise = Promise;\n\n  defFunc.definition = {\n    compile: function (schema) {\n      if (typeof schema == 'string') {\n        var Constructor = getConstructor(schema);\n        return function (data) {\n          return data instanceof Constructor;\n        };\n      }\n\n      var constructors = schema.map(getConstructor);\n      return function (data) {\n        for (var i=0; i<constructors.length; i++)\n          if (data instanceof constructors[i]) return true;\n        return false;\n      };\n    },\n    CONSTRUCTORS: CONSTRUCTORS,\n    metaSchema: {\n      anyOf: [\n        { type: 'string' },\n        {\n          type: 'array',\n          items: { type: 'string' }\n        }\n      ]\n    }\n  };\n\n  ajv.addKeyword('instanceof', defFunc.definition);\n  return ajv;\n\n  function getConstructor(c) {\n    var Constructor = CONSTRUCTORS[c];\n    if (Constructor) return Constructor;\n    throw new Error('invalid \"instanceof\" keyword value ' + c);\n  }\n};\n", "'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'number',\n    macro: function (schema, parentSchema) {\n      var min = schema[0]\n        , max = schema[1]\n        , exclusive = parentSchema.exclusiveRange;\n\n      validateRangeSchema(min, max, exclusive);\n\n      return exclusive === true\n              ? {exclusiveMinimum: min, exclusiveMaximum: max}\n              : {minimum: min, maximum: max};\n    },\n    metaSchema: {\n      type: 'array',\n      minItems: 2,\n      maxItems: 2,\n      items: { type: 'number' }\n    }\n  };\n\n  ajv.addKeyword('range', defFunc.definition);\n  ajv.addKeyword('exclusiveRange');\n  return ajv;\n\n  function validateRangeSchema(min, max, exclusive) {\n    if (exclusive !== undefined && typeof exclusive != 'boolean')\n      throw new Error('Invalid schema for exclusiveRange keyword, should be boolean');\n\n    if (min > max || (exclusive && min == max))\n      throw new Error('There are no numbers in range');\n  }\n};\n", "'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'string',\n    inline: function (it, keyword, schema) {\n      return getRegExp() + '.test(data' + (it.dataLevel || '') + ')';\n\n      function getRegExp() {\n        try {\n          if (typeof schema == 'object')\n            return new RegExp(schema.pattern, schema.flags);\n\n          var rx = schema.match(/^\\/(.*)\\/([gimuy]*)$/);\n          if (rx) return new RegExp(rx[1], rx[2]);\n          throw new Error('cannot parse string into RegExp');\n        } catch(e) {\n          console.error('regular expression', schema, 'is invalid');\n          throw e;\n        }\n      }\n    },\n    metaSchema: {\n      type: ['string', 'object'],\n      properties: {\n        pattern: { type: 'string' },\n        flags: { type: 'string' }\n      },\n      required: ['pattern'],\n      additionalProperties: false\n    }\n  };\n\n  ajv.addKeyword('regexp', defFunc.definition);\n  return ajv;\n};\n", "'use strict';\n\nvar KNOWN_TYPES = ['undefined', 'string', 'number', 'object', 'function', 'boolean', 'symbol'];\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    inline: function (it, keyword, schema) {\n      var data = 'data' + (it.dataLevel || '');\n      if (typeof schema == 'string') return 'typeof ' + data + ' == \"' + schema + '\"';\n      schema = 'validate.schema' + it.schemaPath + '.' + keyword;\n      return schema + '.indexOf(typeof ' + data + ') >= 0';\n    },\n    metaSchema: {\n      anyOf: [\n        {\n          type: 'string',\n          enum: KNOWN_TYPES\n        },\n        {\n          type: 'array',\n          items: {\n            type: 'string',\n            enum: KNOWN_TYPES\n          }\n        }\n      ]\n    }\n  };\n\n  ajv.addKeyword('typeof', defFunc.definition);\n  return ajv;\n};\n", "'use strict';\n\nvar sequences = {};\n\nvar DEFAULTS = {\n  timestamp: function() { return Date.now(); },\n  datetime: function() { return (new Date).toISOString(); },\n  date: function() { return (new Date).toISOString().slice(0, 10); },\n  time: function() { return (new Date).toISOString().slice(11); },\n  random: function() { return Math.random(); },\n  randomint: function (args) {\n    var limit = args && args.max || 2;\n    return function() { return Math.floor(Math.random() * limit); };\n  },\n  seq: function (args) {\n    var name = args && args.name || '';\n    sequences[name] = sequences[name] || 0;\n    return function() { return sequences[name]++; };\n  }\n};\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    compile: function (schema, parentSchema, it) {\n      var funcs = {};\n\n      for (var key in schema) {\n        var d = schema[key];\n        var func = getDefault(typeof d == 'string' ? d : d.func);\n        funcs[key] = func.length ? func(d.args) : func;\n      }\n\n      return it.opts.useDefaults && !it.compositeRule\n              ? assignDefaults\n              : noop;\n\n      function assignDefaults(data) {\n        for (var prop in schema){\n          if (data[prop] === undefined\n            || (it.opts.useDefaults == 'empty'\n            && (data[prop] === null || data[prop] === '')))\n            data[prop] = funcs[prop]();\n        }\n        return true;\n      }\n\n      function noop() { return true; }\n    },\n    DEFAULTS: DEFAULTS,\n    metaSchema: {\n      type: 'object',\n      additionalProperties: {\n        type: ['string', 'object'],\n        additionalProperties: false,\n        required: ['func', 'args'],\n        properties: {\n          func: { type: 'string' },\n          args: { type: 'object' }\n        }\n      }\n    }\n  };\n\n  ajv.addKeyword('dynamicDefaults', defFunc.definition);\n  return ajv;\n\n  function getDefault(d) {\n    var def = DEFAULTS[d];\n    if (def) return def;\n    throw new Error('invalid \"dynamicDefaults\" keyword property value: ' + d);\n  }\n};\n", "'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'object',\n    macro: function (schema, parentSchema) {\n      if (!schema) return true;\n      var properties = Object.keys(parentSchema.properties);\n      if (properties.length == 0) return true;\n      return {required: properties};\n    },\n    metaSchema: {type: 'boolean'},\n    dependencies: ['properties']\n  };\n\n  ajv.addKeyword('allRequired', defFunc.definition);\n  return ajv;\n};\n", "'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'object',\n    macro: function (schema) {\n      if (schema.length == 0) return true;\n      if (schema.length == 1) return {required: schema};\n      var schemas = schema.map(function (prop) {\n        return {required: [prop]};\n      });\n      return {anyOf: schemas};\n    },\n    metaSchema: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    }\n  };\n\n  ajv.addKeyword('anyRequired', defFunc.definition);\n  return ajv;\n};\n", "'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'object',\n    macro: function (schema) {\n      if (schema.length == 0) return true;\n      if (schema.length == 1) return {required: schema};\n      var schemas = schema.map(function (prop) {\n        return {required: [prop]};\n      });\n      return {oneOf: schemas};\n    },\n    metaSchema: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    }\n  };\n\n  ajv.addKeyword('oneRequired', defFunc.definition);\n  return ajv;\n};\n", "'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'object',\n    macro: function (schema) {\n      if (schema.length == 0) return true;\n      if (schema.length == 1) return {not: {required: schema}};\n      var schemas = schema.map(function (prop) {\n        return {required: [prop]};\n      });\n      return {not: {anyOf: schemas}};\n    },\n    metaSchema: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    }\n  };\n\n  ajv.addKeyword('prohibited', defFunc.definition);\n  return ajv;\n};\n", "'use strict';\n\nvar SCALAR_TYPES = ['number', 'integer', 'string', 'boolean', 'null'];\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'array',\n    compile: function(keys, parentSchema, it) {\n      var equal = it.util.equal;\n      var scalar = getScalarKeys(keys, parentSchema);\n\n      return function(data) {\n        if (data.length > 1) {\n          for (var k=0; k < keys.length; k++) {\n            var i, key = keys[k];\n            if (scalar[k]) {\n              var hash = {};\n              for (i = data.length; i--;) {\n                if (!data[i] || typeof data[i] != 'object') continue;\n                var prop = data[i][key];\n                if (prop && typeof prop == 'object') continue;\n                if (typeof prop == 'string') prop = '\"' + prop;\n                if (hash[prop]) return false;\n                hash[prop] = true;\n              }\n            } else {\n              for (i = data.length; i--;) {\n                if (!data[i] || typeof data[i] != 'object') continue;\n                for (var j = i; j--;) {\n                  if (data[j] && typeof data[j] == 'object' && equal(data[i][key], data[j][key]))\n                    return false;\n                }\n              }\n            }\n          }\n        }\n        return true;\n      };\n    },\n    metaSchema: {\n      type: 'array',\n      items: {type: 'string'}\n    }\n  };\n\n  ajv.addKeyword('uniqueItemProperties', defFunc.definition);\n  return ajv;\n};\n\n\nfunction getScalarKeys(keys, schema) {\n  return keys.map(function(key) {\n    var properties = schema.items && schema.items.properties;\n    var propType = properties && properties[key] && properties[key].type;\n    return Array.isArray(propType)\n            ? propType.indexOf('object') < 0 && propType.indexOf('array') < 0\n            : SCALAR_TYPES.indexOf(propType) >= 0;\n  });\n}\n", "'use strict';\n\nmodule.exports = {\n  metaSchemaRef: metaSchemaRef\n};\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';\n\nfunction metaSchemaRef(ajv) {\n  var defaultMeta = ajv._opts.defaultMeta;\n  if (typeof defaultMeta == 'string') return { $ref: defaultMeta };\n  if (ajv.getSchema(META_SCHEMA_ID)) return { $ref: META_SCHEMA_ID };\n  console.warn('meta schema not defined');\n  return {};\n}\n", "'use strict';\n\nvar util = require('./_util');\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'object',\n    macro: function (schema) {\n      var schemas = [];\n      for (var pointer in schema)\n        schemas.push(getSchema(pointer, schema[pointer]));\n      return {'allOf': schemas};\n    },\n    metaSchema: {\n      type: 'object',\n      propertyNames: {\n        type: 'string',\n        format: 'json-pointer'\n      },\n      additionalProperties: util.metaSchemaRef(ajv)\n    }\n  };\n\n  ajv.addKeyword('deepProperties', defFunc.definition);\n  return ajv;\n};\n\n\nfunction getSchema(jsonPointer, schema) {\n  var segments = jsonPointer.split('/');\n  var rootSchema = {};\n  var pointerSchema = rootSchema;\n  for (var i=1; i<segments.length; i++) {\n    var segment = segments[i];\n    var isLast = i == segments.length - 1;\n    segment = unescapeJsonPointer(segment);\n    var properties = pointerSchema.properties = {};\n    var items = undefined;\n    if (/[0-9]+/.test(segment)) {\n      var count = +segment;\n      items = pointerSchema.items = [];\n      while (count--) items.push({});\n    }\n    pointerSchema = isLast ? schema : {};\n    properties[segment] = pointerSchema;\n    if (items) items.push(pointerSchema);\n  }\n  return rootSchema;\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n", "'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'object',\n    inline: function (it, keyword, schema) {\n      var expr = '';\n      for (var i=0; i<schema.length; i++) {\n        if (i) expr += ' && ';\n        expr += '(' + getData(schema[i], it.dataLevel) + ' !== undefined)';\n      }\n      return expr;\n    },\n    metaSchema: {\n      type: 'array',\n      items: {\n        type: 'string',\n        format: 'json-pointer'\n      }\n    }\n  };\n\n  ajv.addKeyword('deepRequired', defFunc.definition);\n  return ajv;\n};\n\n\nfunction getData(jsonPointer, lvl) {\n  var data = 'data' + (lvl || '');\n  if (!jsonPointer) return data;\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=1; i<segments.length; i++) {\n    var segment = segments[i];\n    data += getProperty(unescapeJsonPointer(segment));\n    expr += ' && ' + data;\n  }\n  return expr;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar INTEGER = /^[0-9]+$/;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return INTEGER.test(key)\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + key.replace(SINGLE_QUOTE, '\\\\$&') + \"']\";\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n", "'use strict';\nmodule.exports = function generate__formatLimit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  out += 'var ' + ($valid) + ' = undefined;';\n  if (it.opts.format === false) {\n    out += ' ' + ($valid) + ' = true; ';\n    return out;\n  }\n  var $schemaFormat = it.schema.format,\n    $isDataFormat = it.opts.$data && $schemaFormat.$data,\n    $closingBraces = '';\n  if ($isDataFormat) {\n    var $schemaValueFormat = it.util.getData($schemaFormat.$data, $dataLvl, it.dataPathArr),\n      $format = 'format' + $lvl,\n      $compare = 'compare' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValueFormat) + '] , ' + ($compare) + ' = ' + ($format) + ' && ' + ($format) + '.compare;';\n  } else {\n    var $format = it.formats[$schemaFormat];\n    if (!($format && $format.compare)) {\n      out += '  ' + ($valid) + ' = true; ';\n      return out;\n    }\n    var $compare = 'formats' + it.util.getProperty($schemaFormat) + '.compare';\n  }\n  var $isMax = $keyword == 'formatMaximum',\n    $exclusiveKeyword = 'formatExclusive' + ($isMax ? 'Maximum' : 'Minimum'),\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $result = 'result' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' if (typeof ' + ($schemaValueExcl) + ' != \\'boolean\\' && ' + ($schemaValueExcl) + ' !== undefined) { ' + ($valid) + ' = false; ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_formatExclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      $closingBraces += '}';\n      out += ' else { ';\n    }\n    if ($isData) {\n      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'string\\') ' + ($valid) + ' = false; else { ';\n      $closingBraces += '}';\n    }\n    if ($isDataFormat) {\n      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';\n      $closingBraces += '}';\n    }\n    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; var ' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true; if (' + ($valid) + ' === undefined) { ' + ($valid) + ' = ' + ($exclusive) + ' ? ' + ($result) + ' ' + ($op) + ' 0 : ' + ($result) + ' ' + ($op) + '= 0; } if (!' + ($valid) + ') var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\';';\n  } else {\n    var $exclusive = $schemaExcl === true,\n      $opStr = $op;\n    if (!$exclusive) $opStr += '=';\n    var $opExpr = '\\'' + $opStr + '\\'';\n    if ($isData) {\n      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'string\\') ' + ($valid) + ' = false; else { ';\n      $closingBraces += '}';\n    }\n    if ($isDataFormat) {\n      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';\n      $closingBraces += '}';\n    }\n    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; if (' + ($valid) + ' === undefined) ' + ($valid) + ' = ' + ($result) + ' ' + ($op);\n    if (!$exclusive) {\n      out += '=';\n    }\n    out += ' 0;';\n  }\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_formatLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' , exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '}';\n  return out;\n}\n", "'use strict';\n\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d:\\d\\d)?$/i;\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\n\nvar COMPARE_FORMATS = {\n  date: compareDate,\n  time: compareTime,\n  'date-time': compareDateTime\n};\n\nvar $dataMetaSchema = {\n  type: 'object',\n  required: [ '$data' ],\n  properties: {\n    $data: {\n      type: 'string',\n      anyOf: [\n        { format: 'relative-json-pointer' },\n        { format: 'json-pointer' }\n      ]\n    }\n  },\n  additionalProperties: false\n};\n\nmodule.exports = function (minMax) {\n  var keyword = 'format' + minMax;\n  return function defFunc(ajv) {\n    defFunc.definition = {\n      type: 'string',\n      inline: require('./dotjs/_formatLimit'),\n      statements: true,\n      errors: 'full',\n      dependencies: ['format'],\n      metaSchema: {\n        anyOf: [\n          {type: 'string'},\n          $dataMetaSchema\n        ]\n      }\n    };\n\n    ajv.addKeyword(keyword, defFunc.definition);\n    ajv.addKeyword('formatExclusive' + minMax, {\n      dependencies: ['format' + minMax],\n      metaSchema: {\n        anyOf: [\n          {type: 'boolean'},\n          $dataMetaSchema\n        ]\n      }\n    });\n    extendFormats(ajv);\n    return ajv;\n  };\n};\n\n\nfunction extendFormats(ajv) {\n  var formats = ajv._formats;\n  for (var name in COMPARE_FORMATS) {\n    var format = formats[name];\n    // the last condition is needed if it's RegExp from another window\n    if (typeof format != 'object' || format instanceof RegExp || !format.validate)\n      format = formats[name] = { validate: format };\n    if (!format.compare)\n      format.compare = COMPARE_FORMATS[name];\n  }\n}\n\n\nfunction compareDate(d1, d2) {\n  if (!(d1 && d2)) return;\n  if (d1 > d2) return 1;\n  if (d1 < d2) return -1;\n  if (d1 === d2) return 0;\n}\n\n\nfunction compareTime(t1, t2) {\n  if (!(t1 && t2)) return;\n  t1 = t1.match(TIME);\n  t2 = t2.match(TIME);\n  if (!(t1 && t2)) return;\n  t1 = t1[1] + t1[2] + t1[3] + (t1[4]||'');\n  t2 = t2[1] + t2[2] + t2[3] + (t2[4]||'');\n  if (t1 > t2) return 1;\n  if (t1 < t2) return -1;\n  if (t1 === t2) return 0;\n}\n\n\nfunction compareDateTime(dt1, dt2) {\n  if (!(dt1 && dt2)) return;\n  dt1 = dt1.split(DATE_TIME_SEPARATOR);\n  dt2 = dt2.split(DATE_TIME_SEPARATOR);\n  var res = compareDate(dt1[0], dt2[0]);\n  if (res === undefined) return;\n  return res || compareTime(dt1[1], dt2[1]);\n}\n", "'use strict';\n\nmodule.exports = require('./_formatLimit')('Minimum');\n", "'use strict';\n\nmodule.exports = require('./_formatLimit')('Maximum');\n", "'use strict';\nmodule.exports = function generate_patternRequired(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $matched = 'patternMatched' + $lvl,\n    $dataProperties = 'dataProperties' + $lvl,\n    $closingBraces = '',\n    $ownProperties = it.opts.ownProperties;\n  out += 'var ' + ($valid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  var arr1 = $schema;\n  if (arr1) {\n    var $pProperty, i1 = -1,\n      l1 = arr1.length - 1;\n    while (i1 < l1) {\n      $pProperty = arr1[i1 += 1];\n      out += ' var ' + ($matched) + ' = false;  ';\n      if ($ownProperties) {\n        out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n      } else {\n        out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n      }\n      out += ' ' + ($matched) + ' = ' + (it.usePattern($pProperty)) + '.test(' + ($key) + '); if (' + ($matched) + ') break; } ';\n      var $missingPattern = it.util.escapeQuotes($pProperty);\n      out += ' if (!' + ($matched) + ') { ' + ($valid) + ' = false;  var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('patternRequired') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingPattern: \\'' + ($missingPattern) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should have property matching pattern \\\\\\'' + ($missingPattern) + '\\\\\\'\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  out += '' + ($closingBraces);\n  return out;\n}\n", "'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'object',\n    inline: require('./dotjs/patternRequired'),\n    statements: true,\n    errors: 'full',\n    metaSchema: {\n      type: 'array',\n      items: {\n        type: 'string',\n        format: 'regex'\n      },\n      uniqueItems: true\n    }\n  };\n\n  ajv.addKeyword('patternRequired', defFunc.definition);\n  return ajv;\n};\n", "'use strict';\nmodule.exports = function generate_switch(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $ifPassed = 'ifPassed' + it.level,\n    $currentBaseId = $it.baseId,\n    $shouldContinue;\n  out += 'var ' + ($ifPassed) + ';';\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $caseIndex = -1,\n      l1 = arr1.length - 1;\n    while ($caseIndex < l1) {\n      $sch = arr1[$caseIndex += 1];\n      if ($caseIndex && !$shouldContinue) {\n        out += ' if (!' + ($ifPassed) + ') { ';\n        $closingBraces += '}';\n      }\n      if ($sch.if && (it.opts.strictKeywords ? typeof $sch.if == 'object' && Object.keys($sch.if).length > 0 : it.util.schemaHasRules($sch.if, it.RULES.all))) {\n        out += ' var ' + ($errs) + ' = errors;   ';\n        var $wasComposite = it.compositeRule;\n        it.compositeRule = $it.compositeRule = true;\n        $it.createErrors = false;\n        $it.schema = $sch.if;\n        $it.schemaPath = $schemaPath + '[' + $caseIndex + '].if';\n        $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/if';\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        $it.createErrors = true;\n        it.compositeRule = $it.compositeRule = $wasComposite;\n        out += ' ' + ($ifPassed) + ' = ' + ($nextValid) + '; if (' + ($ifPassed) + ') {  ';\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = ''; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            var __err = out;\n            out = $$outStack.pop();\n            if (!it.compositeRule && $breakOnError) {\n              /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + (__err) + ']); ';\n              } else {\n                out += ' validate.errors = [' + (__err) + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + (it.validate($it)) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n        out += '  } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } } ';\n      } else {\n        out += ' ' + ($ifPassed) + ' = true;  ';\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = ''; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            var __err = out;\n            out = $$outStack.pop();\n            if (!it.compositeRule && $breakOnError) {\n              /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + (__err) + ']); ';\n              } else {\n                out += ' validate.errors = [' + (__err) + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + (it.validate($it)) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n      }\n      $shouldContinue = $sch.continue\n    }\n  }\n  out += '' + ($closingBraces) + 'var ' + ($valid) + ' = ' + ($nextValid) + ';';\n  return out;\n}\n", "'use strict';\n\nvar util = require('./_util');\n\nmodule.exports = function defFunc(ajv) {\n  if (ajv.RULES.keywords.switch && ajv.RULES.keywords.if) return;\n\n  var metaSchemaRef = util.metaSchemaRef(ajv);\n\n  defFunc.definition = {\n    inline: require('./dotjs/switch'),\n    statements: true,\n    errors: 'full',\n    metaSchema: {\n      type: 'array',\n      items: {\n        required: [ 'then' ],\n        properties: {\n          'if': metaSchemaRef,\n          'then': {\n            anyOf: [\n              { type: 'boolean' },\n              metaSchemaRef\n            ]\n          },\n          'continue': { type: 'boolean' }\n        },\n        additionalProperties: false,\n        dependencies: {\n          'continue': [ 'if' ]\n        }\n      }\n    }\n  };\n\n  ajv.addKeyword('switch', defFunc.definition);\n  return ajv;\n};\n", "'use strict';\n\nvar util = require('./_util');\n\nmodule.exports = function defFunc(ajv) {\n  if (!ajv._opts.$data) {\n    console.warn('keyword select requires $data option');\n    return ajv;\n  }\n  var metaSchemaRef = util.metaSchemaRef(ajv);\n  var compiledCaseSchemas = [];\n\n  defFunc.definition = {\n    validate: function v(schema, data, parentSchema) {\n      if (parentSchema.selectCases === undefined)\n        throw new Error('keyword \"selectCases\" is absent');\n      var compiled = getCompiledSchemas(parentSchema, false);\n      var validate = compiled.cases[schema];\n      if (validate === undefined) validate = compiled.default;\n      if (typeof validate == 'boolean') return validate;\n      var valid = validate(data);\n      if (!valid) v.errors = validate.errors;\n      return valid;\n    },\n    $data: true,\n    metaSchema: { type: ['string', 'number', 'boolean', 'null'] }\n  };\n\n  ajv.addKeyword('select', defFunc.definition);\n  ajv.addKeyword('selectCases', {\n    compile: function (schemas, parentSchema) {\n      var compiled = getCompiledSchemas(parentSchema);\n      for (var value in schemas)\n        compiled.cases[value] = compileOrBoolean(schemas[value]);\n      return function() { return true; };\n    },\n    valid: true,\n    metaSchema: {\n      type: 'object',\n      additionalProperties: metaSchemaRef\n    }\n  });\n  ajv.addKeyword('selectDefault', {\n    compile: function (schema, parentSchema) {\n      var compiled = getCompiledSchemas(parentSchema);\n      compiled.default = compileOrBoolean(schema);\n      return function() { return true; };\n    },\n    valid: true,\n    metaSchema: metaSchemaRef\n  });\n  return ajv;\n\n\n  function getCompiledSchemas(parentSchema, create) {\n    var compiled;\n    compiledCaseSchemas.some(function (c) {\n      if (c.parentSchema === parentSchema) {\n        compiled = c;\n        return true;\n      }\n    });\n    if (!compiled && create !== false) {\n      compiled = {\n        parentSchema: parentSchema,\n        cases: {},\n        default: true\n      };\n      compiledCaseSchemas.push(compiled);\n    }\n    return compiled;\n  }\n\n  function compileOrBoolean(schema) {\n    return typeof schema == 'boolean'\n            ? schema\n            : ajv.compile(schema);\n  }\n};\n", "'use strict';\n\nmodule.exports = function defFunc (ajv) {\n  var transform = {\n    trimLeft: function (value) {\n      return value.replace(/^[\\s]+/, '');\n    },\n    trimRight: function (value) {\n      return value.replace(/[\\s]+$/, '');\n    },\n    trim: function (value) {\n      return value.trim();\n    },\n    toLowerCase: function (value) {\n      return value.toLowerCase();\n    },\n    toUpperCase: function (value) {\n      return value.toUpperCase();\n    },\n    toEnumCase: function (value, cfg) {\n      return cfg.hash[makeHashTableKey(value)] || value;\n    }\n  };\n\n  defFunc.definition = {\n    type: 'string',\n    errors: false,\n    modifying: true,\n    valid: true,\n    compile: function (schema, parentSchema) {\n      var cfg;\n\n      if (schema.indexOf('toEnumCase') !== -1) {\n        // build hash table to enum values\n        cfg = {hash: {}};\n\n        // requires `enum` in schema\n        if (!parentSchema.enum)\n          throw new Error('Missing enum. To use `transform:[\"toEnumCase\"]`, `enum:[...]` is required.');\n        for (var i = parentSchema.enum.length; i--; i) {\n          var v = parentSchema.enum[i];\n          if (typeof v !== 'string') continue;\n          var k = makeHashTableKey(v);\n          // requires all `enum` values have unique keys\n          if (cfg.hash[k])\n            throw new Error('Invalid enum uniqueness. To use `transform:[\"toEnumCase\"]`, all values must be unique when case insensitive.');\n          cfg.hash[k] = v;\n        }\n      }\n\n      return function (data, dataPath, object, key) {\n        // skip if value only\n        if (!object) return;\n\n        // apply transform in order provided\n        for (var j = 0, l = schema.length; j < l; j++)\n          data = transform[schema[j]](data, cfg);\n\n        object[key] = data;\n      };\n    },\n    metaSchema: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: [\n          'trimLeft', 'trimRight', 'trim',\n          'toLowerCase', 'toUpperCase', 'toEnumCase'\n        ]\n      }\n    }\n  };\n\n  ajv.addKeyword('transform', defFunc.definition);\n  return ajv;\n\n  function makeHashTableKey (value) {\n    return value.toLowerCase();\n  }\n};\n", "'use strict';\n\nmodule.exports = {\n  'instanceof': require('./instanceof'),\n  range: require('./range'),\n  regexp: require('./regexp'),\n  'typeof': require('./typeof'),\n  dynamicDefaults: require('./dynamicDefaults'),\n  allRequired: require('./allRequired'),\n  anyRequired: require('./anyRequired'),\n  oneRequired: require('./oneRequired'),\n  prohibited: require('./prohibited'),\n  uniqueItemProperties: require('./uniqueItemProperties'),\n  deepProperties: require('./deepProperties'),\n  deepRequired: require('./deepRequired'),\n  formatMinimum: require('./formatMinimum'),\n  formatMaximum: require('./formatMaximum'),\n  patternRequired: require('./patternRequired'),\n  'switch': require('./switch'),\n  select: require('./select'),\n  transform: require('./transform')\n};\n", "'use strict';\n\nvar KEYWORDS = require('./keywords');\n\nmodule.exports = defineKeywords;\n\n\n/**\n * Defines one or several keywords in ajv instance\n * @param  {Ajv} ajv validator instance\n * @param  {String|Array<String>|undefined} keyword keyword(s) to define\n * @return {Ajv} ajv instance (for chaining)\n */\nfunction defineKeywords(ajv, keyword) {\n  if (Array.isArray(keyword)) {\n    for (var i=0; i<keyword.length; i++)\n      get(keyword[i])(ajv);\n    return ajv;\n  }\n  if (keyword) {\n    get(keyword)(ajv);\n    return ajv;\n  }\n  for (keyword in KEYWORDS) get(keyword)(ajv);\n  return ajv;\n}\n\n\ndefineKeywords.get = get;\n\nfunction get(keyword) {\n  var defFunc = KEYWORDS[keyword];\n  if (!defFunc) throw new Error('Unknown keyword ' + keyword);\n  return defFunc;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nObject.defineProperty(exports, \"ValidationError\", {\n  enumerable: true,\n  get: function () {\n    return _ValidationError.default;\n  }\n});\n\nvar _absolutePath = _interopRequireDefault(require(\"./keywords/absolutePath\"));\n\nvar _ValidationError = _interopRequireDefault(require(\"./ValidationError\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Use CommonJS require for ajv libs so TypeScript consumers aren't locked into esModuleInterop (see #110).\nconst Ajv = require('ajv');\n\nconst ajvKeywords = require('ajv-keywords');\n/** @typedef {import(\"json-schema\").JSONSchema4} JSONSchema4 */\n\n/** @typedef {import(\"json-schema\").JSONSchema6} JSONSchema6 */\n\n/** @typedef {import(\"json-schema\").JSONSchema7} JSONSchema7 */\n\n/** @typedef {import(\"ajv\").ErrorObject} ErrorObject */\n\n/**\n * @typedef {Object} Extend\n * @property {number=} formatMinimum\n * @property {number=} formatMaximum\n * @property {boolean=} formatExclusiveMinimum\n * @property {boolean=} formatExclusiveMaximum\n */\n\n/** @typedef {(JSONSchema4 | JSONSchema6 | JSONSchema7) & Extend} Schema */\n\n/** @typedef {ErrorObject & { children?: Array<ErrorObject>}} SchemaUtilErrorObject */\n\n/**\n * @callback PostFormatter\n * @param {string} formattedError\n * @param {SchemaUtilErrorObject} error\n * @returns {string}\n */\n\n/**\n * @typedef {Object} ValidationErrorConfiguration\n * @property {string=} name\n * @property {string=} baseDataPath\n * @property {PostFormatter=} postFormatter\n */\n\n\nconst ajv = new Ajv({\n  allErrors: true,\n  verbose: true,\n  $data: true\n});\najvKeywords(ajv, ['instanceof', 'formatMinimum', 'formatMaximum', 'patternRequired']); // Custom keywords\n\n(0, _absolutePath.default)(ajv);\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @param {ValidationErrorConfiguration=} configuration\n * @returns {void}\n */\n\nfunction validate(schema, options, configuration) {\n  let errors = [];\n\n  if (Array.isArray(options)) {\n    errors = Array.from(options, nestedOptions => validateObject(schema, nestedOptions));\n    errors.forEach((list, idx) => {\n      const applyPrefix =\n      /**\n       * @param {SchemaUtilErrorObject} error\n       */\n      error => {\n        // eslint-disable-next-line no-param-reassign\n        error.dataPath = `[${idx}]${error.dataPath}`;\n\n        if (error.children) {\n          error.children.forEach(applyPrefix);\n        }\n      };\n\n      list.forEach(applyPrefix);\n    });\n    errors = errors.reduce((arr, items) => {\n      arr.push(...items);\n      return arr;\n    }, []);\n  } else {\n    errors = validateObject(schema, options);\n  }\n\n  if (errors.length > 0) {\n    throw new _ValidationError.default(errors, schema, configuration);\n  }\n}\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\n\nfunction validateObject(schema, options) {\n  const compiledSchema = ajv.compile(schema);\n  const valid = compiledSchema(options);\n  if (valid) return [];\n  return compiledSchema.errors ? filterErrors(compiledSchema.errors) : [];\n}\n/**\n * @param {Array<ErrorObject>} errors\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\n\nfunction filterErrors(errors) {\n  /** @type {Array<SchemaUtilErrorObject>} */\n  let newErrors = [];\n\n  for (const error of\n  /** @type {Array<SchemaUtilErrorObject>} */\n  errors) {\n    const {\n      dataPath\n    } = error;\n    /** @type {Array<SchemaUtilErrorObject>} */\n\n    let children = [];\n    newErrors = newErrors.filter(oldError => {\n      if (oldError.dataPath.includes(dataPath)) {\n        if (oldError.children) {\n          children = children.concat(oldError.children.slice(0));\n        } // eslint-disable-next-line no-undefined, no-param-reassign\n\n\n        oldError.children = undefined;\n        children.push(oldError);\n        return false;\n      }\n\n      return true;\n    });\n\n    if (children.length) {\n      error.children = children;\n    }\n\n    newErrors.push(error);\n  }\n\n  return newErrors;\n}", "\"use strict\";\n\nconst {\n  validate,\n  ValidationError\n} = require('./validate');\n\nmodule.exports = {\n  validate,\n  ValidationError\n};", "function set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nexport function klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLessOptions = getLessOptions;\nexports.isUnsupportedUrl = isUnsupportedUrl;\nexports.normalizeSourceMap = normalizeSourceMap;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _less = _interopRequireDefault(require(\"less\"));\n\nvar _full = require(\"klona/full\");\n\nvar _loaderUtils = require(\"loader-utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable class-methods-use-this */\nconst trailingSlash = /[/\\\\]$/; // This somewhat changed in Less 3.x. Now the file name comes without the\n// automatically added extension whereas the extension is passed in as `options.ext`.\n// So, if the file name matches this regexp, we simply ignore the proposed extension.\n\nconst IS_SPECIAL_MODULE_IMPORT = /^~[^/]+$/; // `[drive_letter]:\\` + `\\\\[server]\\[sharename]\\`\n\nconst IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i;\n/**\n * Creates a Less plugin that uses webpack's resolving engine that is provided by the loaderContext.\n *\n * @param {LoaderContext} loaderContext\n * @returns {LessPlugin}\n */\n\nfunction createWebpackLessPlugin(loaderContext) {\n  const resolve = loaderContext.getResolve({\n    conditionNames: [\"less\", \"style\"],\n    mainFields: [\"less\", \"style\", \"main\", \"...\"],\n    mainFiles: [\"index\", \"...\"],\n    extensions: [\".less\", \".css\"]\n  });\n\n  class WebpackFileManager extends _less.default.FileManager {\n    supports(filename) {\n      if (filename[0] === \"/\" || IS_NATIVE_WIN32_PATH.test(filename)) {\n        return true;\n      }\n\n      if (this.isPathAbsolute(filename)) {\n        return false;\n      }\n\n      return true;\n    } // Sync resolving is used at least by the `data-uri` function.\n    // This file manager doesn't know how to do it, so let's delegate it\n    // to the default file manager of Less.\n    // We could probably use loaderContext.resolveSync, but it's deprecated,\n    // see https://webpack.js.org/api/loaders/#this-resolvesync\n\n\n    supportsSync() {\n      return false;\n    }\n\n    async resolveFilename(filename, currentDirectory) {\n      // Less is giving us trailing slashes, but the context should have no trailing slash\n      const context = currentDirectory.replace(trailingSlash, \"\");\n      const request = (0, _loaderUtils.urlToRequest)(filename, // eslint-disable-next-line no-undefined\n      filename.charAt(0) === \"/\" ? loaderContext.rootContext : undefined);\n      return this.resolveRequests(context, [...new Set([request, filename])]);\n    }\n\n    resolveRequests(context, possibleRequests) {\n      if (possibleRequests.length === 0) {\n        return Promise.reject();\n      }\n\n      return resolve(context, possibleRequests[0]).then(result => result).catch(error => {\n        const [, ...tailPossibleRequests] = possibleRequests;\n\n        if (tailPossibleRequests.length === 0) {\n          throw error;\n        }\n\n        return this.resolveRequests(context, tailPossibleRequests);\n      });\n    }\n\n    async loadFile(filename, ...args) {\n      let result;\n\n      try {\n        if (IS_SPECIAL_MODULE_IMPORT.test(filename)) {\n          const error = new Error();\n          error.type = \"Next\";\n          throw error;\n        }\n\n        result = await super.loadFile(filename, ...args);\n      } catch (error) {\n        if (error.type !== \"File\" && error.type !== \"Next\") {\n          return Promise.reject(error);\n        }\n\n        try {\n          result = await this.resolveFilename(filename, ...args);\n        } catch (webpackResolveError) {\n          error.message = `Less resolver error:\\n${error.message}\\n\\n` + `Webpack resolver error details:\\n${webpackResolveError.details}\\n\\n` + `Webpack resolver error missing:\\n${webpackResolveError.missing}\\n\\n`;\n          return Promise.reject(error);\n        }\n\n        loaderContext.addDependency(result);\n        return super.loadFile(result, ...args);\n      }\n\n      loaderContext.addDependency(_path.default.normalize(result.filename));\n      return result;\n    }\n\n  }\n\n  return {\n    install(lessInstance, pluginManager) {\n      pluginManager.addFileManager(new WebpackFileManager());\n    },\n\n    minVersion: [3, 0, 0]\n  };\n}\n/**\n * Get the less options from the loader context and normalizes its values\n *\n * @param {object} loaderContext\n * @param {object} loaderOptions\n * @returns {Object}\n */\n\n\nfunction getLessOptions(loaderContext, loaderOptions) {\n  const options = (0, _full.klona)(typeof loaderOptions.lessOptions === \"function\" ? loaderOptions.lessOptions(loaderContext) || {} : loaderOptions.lessOptions || {});\n  const lessOptions = {\n    plugins: [],\n    relativeUrls: true,\n    // We need to set the filename because otherwise our WebpackFileManager will receive an undefined path for the entry\n    filename: loaderContext.resourcePath,\n    ...options\n  };\n  const shouldUseWebpackImporter = typeof loaderOptions.webpackImporter === \"boolean\" ? loaderOptions.webpackImporter : true;\n\n  if (shouldUseWebpackImporter) {\n    lessOptions.plugins.unshift(createWebpackLessPlugin(loaderContext));\n  }\n\n  lessOptions.plugins.unshift({\n    install(lessProcessor) {\n      // eslint-disable-next-line no-param-reassign\n      lessProcessor.webpackLoaderContext = loaderContext;\n    }\n\n  });\n  return lessOptions;\n}\n\nfunction isUnsupportedUrl(url) {\n  // Is Windows path\n  if (IS_NATIVE_WIN32_PATH.test(url)) {\n    return false;\n  } // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n  // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n\n\n  return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(url);\n}\n\nfunction normalizeSourceMap(map) {\n  const newMap = map; // map.file is an optional property that provides the output filename.\n  // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n  // eslint-disable-next-line no-param-reassign\n\n  delete newMap.file; // eslint-disable-next-line no-param-reassign\n\n  newMap.sourceRoot = \"\"; // `less` returns POSIX paths, that's why we need to transform them back to native paths.\n  // eslint-disable-next-line no-param-reassign\n\n  newMap.sources = newMap.sources.map(source => _path.default.normalize(source));\n  return newMap;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass LessError extends Error {\n  constructor(error) {\n    super();\n    this.message = [\"\\n\", ...LessError.getFileExcerptIfPossible(error), error.message.charAt(0).toUpperCase() + error.message.slice(1), error.filename ? `      Error in ${_path.default.normalize(error.filename)} (line ${error.line}, column ${error.column})` : \"\"].join(\"\\n\");\n    this.hideStack = true;\n  }\n\n  static getFileExcerptIfPossible(lessError) {\n    if (typeof lessError.extract === \"undefined\") {\n      return [];\n    }\n\n    const excerpt = lessError.extract.slice(0, 2);\n    const column = Math.max(lessError.column - 1, 0);\n\n    if (typeof excerpt[0] === \"undefined\") {\n      excerpt.shift();\n    }\n\n    excerpt.push(`${new Array(column).join(\" \")}^`);\n    return excerpt;\n  }\n\n}\n\nvar _default = LessError;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _less = _interopRequireDefault(require(\"less\"));\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _schemaUtils = require(\"schema-utils\");\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _utils = require(\"./utils\");\n\nvar _LessError = _interopRequireDefault(require(\"./LessError\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function lessLoader(source) {\n  const options = (0, _loaderUtils.getOptions)(this);\n  (0, _schemaUtils.validate)(_options.default, options, {\n    name: \"Less Loader\",\n    baseDataPath: \"options\"\n  });\n  const callback = this.async();\n  const lessOptions = (0, _utils.getLessOptions)(this, options);\n  const useSourceMap = typeof options.sourceMap === \"boolean\" ? options.sourceMap : this.sourceMap;\n\n  if (useSourceMap) {\n    lessOptions.sourceMap = {\n      outputSourceFiles: true\n    };\n  }\n\n  let data = source;\n\n  if (typeof options.additionalData !== \"undefined\") {\n    data = typeof options.additionalData === \"function\" ? `${await options.additionalData(data, this)}` : `${options.additionalData}\\n${data}`;\n  }\n\n  let result;\n\n  try {\n    result = await (options.implementation || _less.default).render(data, lessOptions);\n  } catch (error) {\n    if (error.filename) {\n      // `less` returns forward slashes on windows when `webpack` resolver return an absolute windows path in `WebpackFileManager`\n      // Ref: https://github.com/webpack-contrib/less-loader/issues/357\n      this.addDependency(_path.default.normalize(error.filename));\n    }\n\n    callback(new _LessError.default(error));\n    return;\n  }\n\n  const {\n    css,\n    imports\n  } = result;\n  imports.forEach(item => {\n    if ((0, _utils.isUnsupportedUrl)(item)) {\n      return;\n    } // `less` return forward slashes on windows when `webpack` resolver return an absolute windows path in `WebpackFileManager`\n    // Ref: https://github.com/webpack-contrib/less-loader/issues/357\n\n\n    this.addDependency(_path.default.normalize(item));\n  });\n  let map = typeof result.map === \"string\" ? JSON.parse(result.map) : result.map;\n\n  if (map && useSourceMap) {\n    map = (0, _utils.normalizeSourceMap)(map, this.rootContext);\n  }\n\n  callback(null, css, map);\n}\n\nvar _default = lessLoader;\nexports.default = _default;", "\"use strict\";\n\nmodule.exports = require(\"./index\").default;", "/**\r\n * Returns the object type of the given payload\r\n *\r\n * @param {*} payload\r\n * @returns {string}\r\n */\r\nfunction getType(payload) {\r\n    return Object.prototype.toString.call(payload).slice(8, -1);\r\n}\r\n/**\r\n * Returns whether the payload is undefined\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isUndefined(payload) {\r\n    return getType(payload) === 'Undefined';\r\n}\r\n/**\r\n * Returns whether the payload is null\r\n *\r\n * @param {*} payload\r\n * @returns {payload is null}\r\n */\r\nfunction isNull(payload) {\r\n    return getType(payload) === 'Null';\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Record<string, any>}\r\n */\r\nfunction isPlainObject(payload) {\r\n    if (getType(payload) !== 'Object')\r\n        return false;\r\n    return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Record<string, any>}\r\n */\r\nfunction isObject(payload) {\r\n    return isPlainObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a an empty object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is { [K in any]: never }}\r\n */\r\nfunction isEmptyObject(payload) {\r\n    return isPlainObject(payload) && Object.keys(payload).length === 0;\r\n}\r\n/**\r\n * Returns whether the payload is an any kind of object (including special classes or objects with different prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Record<string, any>}\r\n */\r\nfunction isAnyObject(payload) {\r\n    return getType(payload) === 'Object';\r\n}\r\n/**\r\n * Returns whether the payload is an object like a type passed in < >\r\n *\r\n * Usage: isObjectLike<{id: any}>(payload) // will make sure it's an object and has an `id` prop.\r\n *\r\n * @template T this must be passed in < >\r\n * @param {*} payload\r\n * @returns {payload is T}\r\n */\r\nfunction isObjectLike(payload) {\r\n    return isAnyObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a function (regular or async)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is AnyFunction}\r\n */\r\nfunction isFunction(payload) {\r\n    return typeof payload === \"function\";\r\n}\r\n/**\r\n * Returns whether the payload is an array\r\n *\r\n * @param {any} payload\r\n * @returns {payload is any[]}\r\n */\r\nfunction isArray(payload) {\r\n    return getType(payload) === 'Array';\r\n}\r\n/**\r\n * Returns whether the payload is a an array with at least 1 item\r\n *\r\n * @param {*} payload\r\n * @returns {payload is any[]}\r\n */\r\nfunction isFullArray(payload) {\r\n    return isArray(payload) && payload.length > 0;\r\n}\r\n/**\r\n * Returns whether the payload is a an empty array\r\n *\r\n * @param {*} payload\r\n * @returns {payload is []}\r\n */\r\nfunction isEmptyArray(payload) {\r\n    return isArray(payload) && payload.length === 0;\r\n}\r\n/**\r\n * Returns whether the payload is a string\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isString(payload) {\r\n    return getType(payload) === 'String';\r\n}\r\n/**\r\n * Returns whether the payload is a string, BUT returns false for ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isFullString(payload) {\r\n    return isString(payload) && payload !== '';\r\n}\r\n/**\r\n * Returns whether the payload is ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isEmptyString(payload) {\r\n    return payload === '';\r\n}\r\n/**\r\n * Returns whether the payload is a number (but not NaN)\r\n *\r\n * This will return `false` for `NaN`!!\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isNumber(payload) {\r\n    return getType(payload) === 'Number' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a boolean\r\n *\r\n * @param {*} payload\r\n * @returns {payload is boolean}\r\n */\r\nfunction isBoolean(payload) {\r\n    return getType(payload) === 'Boolean';\r\n}\r\n/**\r\n * Returns whether the payload is a regular expression (RegExp)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is RegExp}\r\n */\r\nfunction isRegExp(payload) {\r\n    return getType(payload) === 'RegExp';\r\n}\r\n/**\r\n * Returns whether the payload is a Map\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Map<any, any>}\r\n */\r\nfunction isMap(payload) {\r\n    return getType(payload) === 'Map';\r\n}\r\n/**\r\n * Returns whether the payload is a WeakMap\r\n *\r\n * @param {*} payload\r\n * @returns {payload is WeakMap<any, any>}\r\n */\r\nfunction isWeakMap(payload) {\r\n    return getType(payload) === 'WeakMap';\r\n}\r\n/**\r\n * Returns whether the payload is a Set\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Set<any>}\r\n */\r\nfunction isSet(payload) {\r\n    return getType(payload) === 'Set';\r\n}\r\n/**\r\n * Returns whether the payload is a WeakSet\r\n *\r\n * @param {*} payload\r\n * @returns {payload is WeakSet<any>}\r\n */\r\nfunction isWeakSet(payload) {\r\n    return getType(payload) === 'WeakSet';\r\n}\r\n/**\r\n * Returns whether the payload is a Symbol\r\n *\r\n * @param {*} payload\r\n * @returns {payload is symbol}\r\n */\r\nfunction isSymbol(payload) {\r\n    return getType(payload) === 'Symbol';\r\n}\r\n/**\r\n * Returns whether the payload is a Date, and that the date is valid\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Date}\r\n */\r\nfunction isDate(payload) {\r\n    return getType(payload) === 'Date' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a Blob\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Blob}\r\n */\r\nfunction isBlob(payload) {\r\n    return getType(payload) === 'Blob';\r\n}\r\n/**\r\n * Returns whether the payload is a File\r\n *\r\n * @param {*} payload\r\n * @returns {payload is File}\r\n */\r\nfunction isFile(payload) {\r\n    return getType(payload) === 'File';\r\n}\r\n/**\r\n * Returns whether the payload is a Promise\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Promise<any>}\r\n */\r\nfunction isPromise(payload) {\r\n    return getType(payload) === 'Promise';\r\n}\r\n/**\r\n * Returns whether the payload is an Error\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Error}\r\n */\r\nfunction isError(payload) {\r\n    return getType(payload) === 'Error';\r\n}\r\n/**\r\n * Returns whether the payload is literally the value `NaN` (it's `NaN` and also a `number`)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is typeof NaN}\r\n */\r\nfunction isNaNValue(payload) {\r\n    return getType(payload) === 'Number' && isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a primitive type (eg. Boolean | Null | Undefined | Number | String | Symbol)\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is boolean | null | undefined | number | string | symbol)}\r\n */\r\nfunction isPrimitive(payload) {\r\n    return (isBoolean(payload) ||\r\n        isNull(payload) ||\r\n        isUndefined(payload) ||\r\n        isNumber(payload) ||\r\n        isString(payload) ||\r\n        isSymbol(payload));\r\n}\r\n/**\r\n * Returns true whether the payload is null or undefined\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is null | undefined)}\r\n */\r\nfunction isNullOrUndefined(payload) {\r\n    return isNull(payload) || isUndefined(payload);\r\n}\r\n/**\r\n * Does a generic check to check that the given payload is of a given type.\r\n * In cases like Number, it will return true for NaN as NaN is a Number (thanks javascript!);\r\n * It will, however, differentiate between object and null\r\n *\r\n * @template T\r\n * @param {*} payload\r\n * @param {T} type\r\n * @throws {TypeError} Will throw type error if type is an invalid type\r\n * @returns {payload is T}\r\n */\r\nfunction isType(payload, type) {\r\n    if (!(type instanceof Function)) {\r\n        throw new TypeError('Type must be a function');\r\n    }\r\n    if (!Object.prototype.hasOwnProperty.call(type, 'prototype')) {\r\n        throw new TypeError('Type is not a class');\r\n    }\r\n    // Classes usually have names (as functions usually have names)\r\n    var name = type.name;\r\n    return getType(payload) === name || Boolean(payload && payload.constructor === type);\r\n}\n\nexport { getType, isAnyObject, isArray, isBlob, isBoolean, isDate, isEmptyArray, isEmptyObject, isEmptyString, isError, isFile, isFullArray, isFullString, isFunction, isMap, isNaNValue, isNull, isNullOrUndefined, isNumber, isObject, isObjectLike, isPlainObject, isPrimitive, isPromise, isRegExp, isSet, isString, isSymbol, isType, isUndefined, isWeakMap, isWeakSet };\n"],
  "mappings": "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",
  "names": []
}
